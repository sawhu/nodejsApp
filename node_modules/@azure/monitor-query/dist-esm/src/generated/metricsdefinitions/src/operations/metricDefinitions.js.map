{"version":3,"file":"metricDefinitions.js","sourceRoot":"","sources":["../../../../../../src/generated/metricsdefinitions/src/operations/metricDefinitions.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;AAGH,OAAO,KAAK,UAAU,MAAM,oBAAoB,CAAC;AACjD,OAAO,KAAK,OAAO,MAAM,mBAAmB,CAAC;AAC7C,OAAO,KAAK,UAAU,MAAM,sBAAsB,CAAC;AAOnD,qDAAqD;AACrD,MAAM,OAAO,qBAAqB;IAGhC;;;OAGG;IACH,YAAY,MAAsC;QAChD,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IACvB,CAAC;IAED;;;;OAIG;IACH,IAAI,CACF,WAAmB,EACnB,OAA6C;QAE7C,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,WAAW,EAAE,OAAO,EAAE,EACxB,iBAAiB,CAClB,CAAC;IACJ,CAAC;CACF;AACD,2BAA2B;AAC3B,MAAM,UAAU,GAAG,UAAU,CAAC,gBAAgB,CAAC,OAAO,EAAE,WAAW,CAAC,KAAK,CAAC,CAAC;AAE3E,MAAM,iBAAiB,GAA6B;IAClD,IAAI,EAAE,+DAA+D;IACrE,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,0BAA0B;SAC/C;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,aAAa;SAClC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,EAAE,UAAU,CAAC,eAAe,CAAC;IACpE,aAAa,EAAE,CAAC,UAAU,CAAC,KAAK,EAAE,UAAU,CAAC,WAAW,CAAC;IACzD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { MetricDefinitions } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { MonitorManagementClientContext } from \"../monitorManagementClientContext\";\nimport {\n  MetricDefinitionsListOptionalParams,\n  MetricDefinitionsListResponse\n} from \"../models\";\n\n/** Class containing MetricDefinitions operations. */\nexport class MetricDefinitionsImpl implements MetricDefinitions {\n  private readonly client: MonitorManagementClientContext;\n\n  /**\n   * Initialize a new instance of the class MetricDefinitions class.\n   * @param client Reference to the service client\n   */\n  constructor(client: MonitorManagementClientContext) {\n    this.client = client;\n  }\n\n  /**\n   * Lists the metric definitions for the resource.\n   * @param resourceUri The identifier of the resource.\n   * @param options The options parameters.\n   */\n  list(\n    resourceUri: string,\n    options?: MetricDefinitionsListOptionalParams\n  ): Promise<MetricDefinitionsListResponse> {\n    return this.client.sendOperationRequest(\n      { resourceUri, options },\n      listOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listOperationSpec: coreClient.OperationSpec = {\n  path: \"/{resourceUri}/providers/Microsoft.Insights/metricDefinitions\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.MetricDefinitionCollection\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.metricnamespace],\n  urlParameters: [Parameters.$host, Parameters.resourceUri],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n"]}
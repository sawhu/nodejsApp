{"version":3,"file":"index.js","sources":["../src/generated/logquery/src/models/mappers.ts","../src/generated/logquery/src/models/parameters.ts","../src/generated/logquery/src/operations/query.ts","../src/generated/logquery/src/operations/metadata.ts","../src/generated/logquery/src/azureLogAnalyticsContext.ts","../src/generated/logquery/src/azureLogAnalytics.ts","../src/models/publicLogsModels.ts","../src/internal/util.ts","../src/models/publicMetricsModels.ts","../src/timespanConversion.ts","../src/internal/modelConverters.ts","../src/constants.ts","../src/tracing.ts","../src/internal/logQueryOptionUtils.ts","../src/logsQueryClient.ts","../src/generated/metrics/src/models/index.ts","../src/generated/metrics/src/models/mappers.ts","../src/generated/metrics/src/models/parameters.ts","../src/generated/metrics/src/operations/metrics.ts","../src/generated/metrics/src/monitorManagementClientContext.ts","../src/generated/metrics/src/monitorManagementClient.ts","../src/generated/metricsdefinitions/src/models/index.ts","../src/generated/metricsdefinitions/src/models/mappers.ts","../src/generated/metricsdefinitions/src/models/parameters.ts","../src/generated/metricsdefinitions/src/operations/metricDefinitions.ts","../src/generated/metricsdefinitions/src/monitorManagementClientContext.ts","../src/generated/metricsdefinitions/src/monitorManagementClient.ts","../src/generated/metricsnamespaces/src/models/index.ts","../src/generated/metricsnamespaces/src/models/mappers.ts","../src/generated/metricsnamespaces/src/models/parameters.ts","../src/generated/metricsnamespaces/src/operations/metricNamespaces.ts","../src/generated/metricsnamespaces/src/monitorManagementClientContext.ts","../src/generated/metricsnamespaces/src/monitorManagementClient.ts","../src/metricsQueryClient.ts","../src/models/constants.ts"],"sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreClient from \"@azure/core-client\";\n\nexport const QueryResults: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"QueryResults\",\n    modelProperties: {\n      tables: {\n        serializedName: \"tables\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Table\"\n            }\n          }\n        }\n      },\n      statistics: {\n        serializedName: \"statistics\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      },\n      render: {\n        serializedName: \"render\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      },\n      error: {\n        serializedName: \"error\",\n        type: {\n          name: \"Composite\",\n          className: \"ErrorInfo\"\n        }\n      }\n    }\n  }\n};\n\nexport const Table: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Table\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      columns: {\n        serializedName: \"columns\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Column\"\n            }\n          }\n        }\n      },\n      rows: {\n        serializedName: \"rows\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Sequence\",\n              element: {\n                type: {\n                  name: \"Dictionary\",\n                  value: { type: { name: \"any\" } }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const Column: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Column\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ErrorInfo: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ErrorInfo\",\n    modelProperties: {\n      code: {\n        serializedName: \"code\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      message: {\n        serializedName: \"message\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      details: {\n        serializedName: \"details\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ErrorDetail\"\n            }\n          }\n        }\n      },\n      innerError: {\n        serializedName: \"innererror\",\n        type: {\n          name: \"Composite\",\n          className: \"ErrorInfo\"\n        }\n      },\n      additionalProperties: {\n        serializedName: \"additionalProperties\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      }\n    }\n  }\n};\n\nexport const ErrorDetail: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ErrorDetail\",\n    modelProperties: {\n      code: {\n        serializedName: \"code\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      message: {\n        serializedName: \"message\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      target: {\n        serializedName: \"target\",\n        type: {\n          name: \"String\"\n        }\n      },\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"String\"\n        }\n      },\n      resources: {\n        serializedName: \"resources\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      additionalProperties: {\n        serializedName: \"additionalProperties\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      }\n    }\n  }\n};\n\nexport const ErrorResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ErrorResponse\",\n    modelProperties: {\n      error: {\n        serializedName: \"error\",\n        type: {\n          name: \"Composite\",\n          className: \"ErrorInfo\"\n        }\n      }\n    }\n  }\n};\n\nexport const QueryBody: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"QueryBody\",\n    modelProperties: {\n      query: {\n        serializedName: \"query\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      timespan: {\n        serializedName: \"timespan\",\n        type: {\n          name: \"String\"\n        }\n      },\n      workspaces: {\n        serializedName: \"workspaces\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const MetadataResults: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"MetadataResults\",\n    modelProperties: {\n      categories: {\n        constraints: {\n          UniqueItems: true\n        },\n        serializedName: \"categories\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"MetadataCategory\"\n            }\n          }\n        }\n      },\n      resourceTypes: {\n        constraints: {\n          UniqueItems: true\n        },\n        serializedName: \"resourceTypes\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"MetadataResourceType\"\n            }\n          }\n        }\n      },\n      solutions: {\n        constraints: {\n          UniqueItems: true\n        },\n        serializedName: \"solutions\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"MetadataSolution\"\n            }\n          }\n        }\n      },\n      tables: {\n        constraints: {\n          UniqueItems: true\n        },\n        serializedName: \"tables\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"MetadataTable\"\n            }\n          }\n        }\n      },\n      functions: {\n        constraints: {\n          UniqueItems: true\n        },\n        serializedName: \"functions\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"MetadataFunction\"\n            }\n          }\n        }\n      },\n      queries: {\n        constraints: {\n          UniqueItems: true\n        },\n        serializedName: \"queries\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"MetadataQuery\"\n            }\n          }\n        }\n      },\n      applications: {\n        constraints: {\n          UniqueItems: true\n        },\n        serializedName: \"applications\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"MetadataApplication\"\n            }\n          }\n        }\n      },\n      workspaces: {\n        constraints: {\n          UniqueItems: true\n        },\n        serializedName: \"workspaces\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"MetadataWorkspace\"\n            }\n          }\n        }\n      },\n      resources: {\n        constraints: {\n          UniqueItems: true\n        },\n        serializedName: \"resources\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"any\"\n            }\n          }\n        }\n      },\n      permissions: {\n        constraints: {\n          UniqueItems: true\n        },\n        serializedName: \"permissions\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"MetadataPermissions\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const MetadataCategory: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"MetadataCategory\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      displayName: {\n        serializedName: \"displayName\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      description: {\n        serializedName: \"description\",\n        type: {\n          name: \"String\"\n        }\n      },\n      related: {\n        serializedName: \"related\",\n        type: {\n          name: \"Composite\",\n          className: \"MetadataCategoryRelated\"\n        }\n      }\n    }\n  }\n};\n\nexport const MetadataCategoryRelated: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"MetadataCategoryRelated\",\n    modelProperties: {\n      tables: {\n        serializedName: \"tables\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      functions: {\n        serializedName: \"functions\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      resourceTypes: {\n        serializedName: \"resourceTypes\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      queries: {\n        serializedName: \"queries\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      solutions: {\n        serializedName: \"solutions\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const MetadataResourceType: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"MetadataResourceType\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      displayName: {\n        serializedName: \"displayName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      description: {\n        serializedName: \"description\",\n        type: {\n          name: \"String\"\n        }\n      },\n      labels: {\n        serializedName: \"labels\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      tags: {\n        serializedName: \"tags\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      },\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      },\n      related: {\n        serializedName: \"related\",\n        type: {\n          name: \"Composite\",\n          className: \"MetadataResourceTypeRelated\"\n        }\n      }\n    }\n  }\n};\n\nexport const MetadataResourceTypeRelated: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"MetadataResourceTypeRelated\",\n    modelProperties: {\n      tables: {\n        serializedName: \"tables\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      functions: {\n        serializedName: \"functions\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      categories: {\n        serializedName: \"categories\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      queries: {\n        serializedName: \"queries\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      workspaces: {\n        serializedName: \"workspaces\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      resources: {\n        serializedName: \"resources\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const MetadataSolution: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"MetadataSolution\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      displayName: {\n        serializedName: \"displayName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      description: {\n        serializedName: \"description\",\n        type: {\n          name: \"String\"\n        }\n      },\n      tags: {\n        serializedName: \"tags\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      },\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      },\n      related: {\n        serializedName: \"related\",\n        type: {\n          name: \"Composite\",\n          className: \"MetadataSolutionRelated\"\n        }\n      }\n    }\n  }\n};\n\nexport const MetadataSolutionRelated: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"MetadataSolutionRelated\",\n    modelProperties: {\n      tables: {\n        serializedName: \"tables\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      functions: {\n        serializedName: \"functions\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      categories: {\n        serializedName: \"categories\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      queries: {\n        serializedName: \"queries\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      workspaces: {\n        serializedName: \"workspaces\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const MetadataTable: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"MetadataTable\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      description: {\n        serializedName: \"description\",\n        type: {\n          name: \"String\"\n        }\n      },\n      timespanColumn: {\n        serializedName: \"timespanColumn\",\n        type: {\n          name: \"String\"\n        }\n      },\n      labels: {\n        serializedName: \"labels\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      tags: {\n        serializedName: \"tags\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      },\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      },\n      columns: {\n        serializedName: \"columns\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"MetadataTableColumnsItem\"\n            }\n          }\n        }\n      },\n      related: {\n        serializedName: \"related\",\n        type: {\n          name: \"Composite\",\n          className: \"MetadataTableRelated\"\n        }\n      }\n    }\n  }\n};\n\nexport const MetadataTableColumnsItem: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"MetadataTableColumnsItem\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      description: {\n        serializedName: \"description\",\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      isPreferredFacet: {\n        serializedName: \"isPreferredFacet\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      source: {\n        serializedName: \"source\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      }\n    }\n  }\n};\n\nexport const MetadataTableRelated: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"MetadataTableRelated\",\n    modelProperties: {\n      categories: {\n        serializedName: \"categories\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      solutions: {\n        serializedName: \"solutions\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      resourceTypes: {\n        serializedName: \"resourceTypes\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      workspaces: {\n        serializedName: \"workspaces\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      functions: {\n        serializedName: \"functions\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      queries: {\n        serializedName: \"queries\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const MetadataFunction: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"MetadataFunction\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      parameters: {\n        serializedName: \"parameters\",\n        type: {\n          name: \"String\"\n        }\n      },\n      displayName: {\n        serializedName: \"displayName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      description: {\n        serializedName: \"description\",\n        type: {\n          name: \"String\"\n        }\n      },\n      body: {\n        serializedName: \"body\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      tags: {\n        serializedName: \"tags\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      },\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      },\n      related: {\n        serializedName: \"related\",\n        type: {\n          name: \"Composite\",\n          className: \"MetadataFunctionRelated\"\n        }\n      }\n    }\n  }\n};\n\nexport const MetadataFunctionRelated: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"MetadataFunctionRelated\",\n    modelProperties: {\n      tables: {\n        serializedName: \"tables\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      solutions: {\n        serializedName: \"solutions\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      resourceTypes: {\n        serializedName: \"resourceTypes\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      categories: {\n        serializedName: \"categories\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      workspaces: {\n        serializedName: \"workspaces\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const MetadataQuery: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"MetadataQuery\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      displayName: {\n        serializedName: \"displayName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      description: {\n        serializedName: \"description\",\n        type: {\n          name: \"String\"\n        }\n      },\n      body: {\n        serializedName: \"body\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      labels: {\n        serializedName: \"labels\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      tags: {\n        serializedName: \"tags\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      },\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      },\n      related: {\n        serializedName: \"related\",\n        type: {\n          name: \"Composite\",\n          className: \"MetadataQueryRelated\"\n        }\n      }\n    }\n  }\n};\n\nexport const MetadataQueryRelated: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"MetadataQueryRelated\",\n    modelProperties: {\n      categories: {\n        serializedName: \"categories\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      solutions: {\n        serializedName: \"solutions\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      resourceTypes: {\n        serializedName: \"resourceTypes\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      tables: {\n        serializedName: \"tables\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const MetadataApplication: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"MetadataApplication\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      resourceId: {\n        serializedName: \"resourceId\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      region: {\n        serializedName: \"region\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      related: {\n        serializedName: \"related\",\n        type: {\n          name: \"Composite\",\n          className: \"MetadataApplicationRelated\"\n        }\n      }\n    }\n  }\n};\n\nexport const MetadataApplicationRelated: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"MetadataApplicationRelated\",\n    modelProperties: {\n      tables: {\n        serializedName: \"tables\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      functions: {\n        serializedName: \"functions\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const MetadataWorkspace: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"MetadataWorkspace\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      resourceId: {\n        serializedName: \"resourceId\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      region: {\n        serializedName: \"region\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      related: {\n        serializedName: \"related\",\n        type: {\n          name: \"Composite\",\n          className: \"MetadataWorkspaceRelated\"\n        }\n      }\n    }\n  }\n};\n\nexport const MetadataWorkspaceRelated: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"MetadataWorkspaceRelated\",\n    modelProperties: {\n      tables: {\n        serializedName: \"tables\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      solutions: {\n        serializedName: \"solutions\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      resourceTypes: {\n        serializedName: \"resourceTypes\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      functions: {\n        serializedName: \"functions\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      resources: {\n        serializedName: \"resources\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const MetadataPermissions: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"MetadataPermissions\",\n    modelProperties: {\n      workspaces: {\n        serializedName: \"workspaces\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"MetadataPermissionsWorkspacesItem\"\n            }\n          }\n        }\n      },\n      resources: {\n        serializedName: \"resources\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"MetadataPermissionsResourcesItem\"\n            }\n          }\n        }\n      },\n      applications: {\n        serializedName: \"applications\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"MetadataPermissionsApplicationsItem\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const MetadataPermissionsWorkspacesItem: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"MetadataPermissionsWorkspacesItem\",\n    modelProperties: {\n      resourceId: {\n        serializedName: \"resourceId\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      denyTables: {\n        serializedName: \"denyTables\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const MetadataPermissionsResourcesItem: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"MetadataPermissionsResourcesItem\",\n    modelProperties: {\n      resourceId: {\n        serializedName: \"resourceId\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      denyTables: {\n        serializedName: \"denyTables\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const MetadataPermissionsApplicationsItem: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"MetadataPermissionsApplicationsItem\",\n    modelProperties: {\n      resourceId: {\n        serializedName: \"resourceId\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BatchRequest: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"BatchRequest\",\n    modelProperties: {\n      requests: {\n        serializedName: \"requests\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"BatchQueryRequest\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const BatchQueryRequest: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"BatchQueryRequest\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      headers: {\n        serializedName: \"headers\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      },\n      body: {\n        serializedName: \"body\",\n        type: {\n          name: \"Composite\",\n          className: \"QueryBody\"\n        }\n      },\n      path: {\n        defaultValue: \"/query\",\n        isConstant: true,\n        serializedName: \"path\",\n        type: {\n          name: \"String\"\n        }\n      },\n      method: {\n        defaultValue: \"POST\",\n        isConstant: true,\n        serializedName: \"method\",\n        type: {\n          name: \"String\"\n        }\n      },\n      workspace: {\n        serializedName: \"workspace\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BatchResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"BatchResponse\",\n    modelProperties: {\n      responses: {\n        serializedName: \"responses\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"BatchQueryResponse\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const BatchQueryResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"BatchQueryResponse\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      status: {\n        serializedName: \"status\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      body: {\n        serializedName: \"body\",\n        type: {\n          name: \"Composite\",\n          className: \"BatchQueryResults\"\n        }\n      },\n      headers: {\n        serializedName: \"headers\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      }\n    }\n  }\n};\n\nexport const BatchQueryResults: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"BatchQueryResults\",\n    modelProperties: {\n      tables: {\n        serializedName: \"tables\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Table\"\n            }\n          }\n        }\n      },\n      statistics: {\n        serializedName: \"statistics\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      },\n      render: {\n        serializedName: \"render\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      },\n      error: {\n        serializedName: \"error\",\n        type: {\n          name: \"Composite\",\n          className: \"ErrorInfo\"\n        }\n      }\n    }\n  }\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport {\n  OperationParameter,\n  OperationURLParameter,\n  OperationQueryParameter\n} from \"@azure/core-client\";\nimport {\n  QueryBody as QueryBodyMapper,\n  BatchRequest as BatchRequestMapper\n} from \"../models/mappers\";\n\nexport const accept: OperationParameter = {\n  parameterPath: \"accept\",\n  mapper: {\n    defaultValue: \"application/json\",\n    isConstant: true,\n    serializedName: \"Accept\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const $host: OperationURLParameter = {\n  parameterPath: \"$host\",\n  mapper: {\n    serializedName: \"$host\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  },\n  skipEncoding: true\n};\n\nexport const workspaceId: OperationURLParameter = {\n  parameterPath: \"workspaceId\",\n  mapper: {\n    serializedName: \"workspaceId\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const query: OperationQueryParameter = {\n  parameterPath: \"query\",\n  mapper: {\n    serializedName: \"query\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const timespan: OperationQueryParameter = {\n  parameterPath: [\"options\", \"timespan\"],\n  mapper: {\n    serializedName: \"timespan\",\n    type: {\n      name: \"TimeSpan\"\n    }\n  }\n};\n\nexport const contentType: OperationParameter = {\n  parameterPath: [\"options\", \"contentType\"],\n  mapper: {\n    defaultValue: \"application/json\",\n    isConstant: true,\n    serializedName: \"Content-Type\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const body: OperationParameter = {\n  parameterPath: \"body\",\n  mapper: QueryBodyMapper\n};\n\nexport const prefer: OperationParameter = {\n  parameterPath: [\"options\", \"prefer\"],\n  mapper: {\n    serializedName: \"Prefer\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const resourceId: OperationURLParameter = {\n  parameterPath: \"resourceId\",\n  mapper: {\n    serializedName: \"resourceId\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  },\n  skipEncoding: true\n};\n\nexport const body1: OperationParameter = {\n  parameterPath: \"body\",\n  mapper: BatchRequestMapper\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { Query } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { AzureLogAnalyticsContext } from \"../azureLogAnalyticsContext\";\nimport {\n  QueryGetOptionalParams,\n  QueryGetResponse,\n  QueryBody,\n  QueryExecuteOptionalParams,\n  QueryExecuteResponse,\n  QueryResourceGetOptionalParams,\n  QueryResourceGetResponse,\n  QueryResourceExecuteOptionalParams,\n  QueryResourceExecuteResponse,\n  BatchRequest,\n  QueryBatchOptionalParams,\n  QueryBatchResponse,\n  QueryResourceGetXmsOptionalParams,\n  QueryResourceGetXmsResponse,\n  QueryResourceExecuteXmsOptionalParams,\n  QueryResourceExecuteXmsResponse\n} from \"../models\";\n\n/** Class containing Query operations. */\nexport class QueryImpl implements Query {\n  private readonly client: AzureLogAnalyticsContext;\n\n  /**\n   * Initialize a new instance of the class Query class.\n   * @param client Reference to the service client\n   */\n  constructor(client: AzureLogAnalyticsContext) {\n    this.client = client;\n  }\n\n  /**\n   * Executes an Analytics query for data\n   * @param workspaceId ID of the workspace. This is Workspace ID from the Properties blade in the Azure\n   *                    portal.\n   * @param query The Analytics query. Learn more about the [Analytics query\n   *              syntax](https://azure.microsoft.com/documentation/articles/app-insights-analytics-reference/)\n   * @param options The options parameters.\n   */\n  get(\n    workspaceId: string,\n    query: string,\n    options?: QueryGetOptionalParams\n  ): Promise<QueryGetResponse> {\n    return this.client.sendOperationRequest(\n      { workspaceId, query, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Executes an Analytics query for data.\n   * [Here](https://dev.loganalytics.io/documentation/Using-the-API) is an example for using POST with an\n   * Analytics query.\n   * @param workspaceId ID of the workspace. This is Workspace ID from the Properties blade in the Azure\n   *                    portal.\n   * @param body The Analytics query. Learn more about the [Analytics query\n   *             syntax](https://azure.microsoft.com/documentation/articles/app-insights-analytics-reference/)\n   * @param options The options parameters.\n   */\n  execute(\n    workspaceId: string,\n    body: QueryBody,\n    options?: QueryExecuteOptionalParams\n  ): Promise<QueryExecuteResponse> {\n    return this.client.sendOperationRequest(\n      { workspaceId, body, options },\n      executeOperationSpec\n    );\n  }\n\n  /**\n   * Executes an Analytics query for data in the context of a resource.\n   * [Here](https://docs.microsoft.com/azure/azure-monitor/logs/api/azure-resource-queries) is an example\n   * for using POST with an Analytics query.\n   * @param resourceId The identifier of the resource.\n   * @param query The Analytics query. Learn more about the [Analytics query\n   *              syntax](https://azure.microsoft.com/documentation/articles/app-insights-analytics-reference/)\n   * @param options The options parameters.\n   */\n  resourceGet(\n    resourceId: string,\n    query: string,\n    options?: QueryResourceGetOptionalParams\n  ): Promise<QueryResourceGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceId, query, options },\n      resourceGetOperationSpec\n    );\n  }\n\n  /**\n   * Executes an Analytics query for data in the context of a resource.\n   * [Here](https://docs.microsoft.com/azure/azure-monitor/logs/api/azure-resource-queries) is an example\n   * for using POST with an Analytics query.\n   * @param resourceId The identifier of the resource.\n   * @param body The Analytics query. Learn more about the [Analytics query\n   *             syntax](https://azure.microsoft.com/documentation/articles/app-insights-analytics-reference/)\n   * @param options The options parameters.\n   */\n  resourceExecute(\n    resourceId: string,\n    body: QueryBody,\n    options?: QueryResourceExecuteOptionalParams\n  ): Promise<QueryResourceExecuteResponse> {\n    return this.client.sendOperationRequest(\n      { resourceId, body, options },\n      resourceExecuteOperationSpec\n    );\n  }\n\n  /**\n   * Executes a batch of Analytics queries for data.\n   * [Here](https://dev.loganalytics.io/documentation/Using-the-API) is an example for using POST with an\n   * Analytics query.\n   * @param body The batch request body\n   * @param options The options parameters.\n   */\n  batch(\n    body: BatchRequest,\n    options?: QueryBatchOptionalParams\n  ): Promise<QueryBatchResponse> {\n    return this.client.sendOperationRequest(\n      { body, options },\n      batchOperationSpec\n    );\n  }\n\n  /**\n   * Executes an Analytics query for data in the context of a resource.\n   * [Here](https://docs.microsoft.com/azure/azure-monitor/logs/api/azure-resource-queries) is an example\n   * for using POST with an Analytics query.\n   * @param resourceId The identifier of the resource.\n   * @param query The Analytics query. Learn more about the [Analytics query\n   *              syntax](https://azure.microsoft.com/documentation/articles/app-insights-analytics-reference/)\n   * @param options The options parameters.\n   */\n  resourceGetXms(\n    resourceId: string,\n    query: string,\n    options?: QueryResourceGetXmsOptionalParams\n  ): Promise<QueryResourceGetXmsResponse> {\n    return this.client.sendOperationRequest(\n      { resourceId, query, options },\n      resourceGetXmsOperationSpec\n    );\n  }\n\n  /**\n   * Executes an Analytics query for data in the context of a resource.\n   * [Here](https://docs.microsoft.com/azure/azure-monitor/logs/api/azure-resource-queries) is an example\n   * for using POST with an Analytics query.\n   * @param resourceId The identifier of the resource.\n   * @param body The Analytics query. Learn more about the [Analytics query\n   *             syntax](https://azure.microsoft.com/documentation/articles/app-insights-analytics-reference/)\n   * @param options The options parameters.\n   */\n  resourceExecuteXms(\n    resourceId: string,\n    body: QueryBody,\n    options?: QueryResourceExecuteXmsOptionalParams\n  ): Promise<QueryResourceExecuteXmsResponse> {\n    return this.client.sendOperationRequest(\n      { resourceId, body, options },\n      resourceExecuteXmsOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getOperationSpec: coreClient.OperationSpec = {\n  path: \"/workspaces/{workspaceId}/query\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.QueryResults\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.query, Parameters.timespan],\n  urlParameters: [Parameters.$host, Parameters.workspaceId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst executeOperationSpec: coreClient.OperationSpec = {\n  path: \"/workspaces/{workspaceId}/query\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.QueryResults\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.body,\n  urlParameters: [Parameters.$host, Parameters.workspaceId],\n  headerParameters: [\n    Parameters.accept,\n    Parameters.contentType,\n    Parameters.prefer\n  ],\n  mediaType: \"json\",\n  serializer\n};\nconst resourceGetOperationSpec: coreClient.OperationSpec = {\n  path: \"/{resourceId}/query\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.QueryResults\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.query, Parameters.timespan],\n  urlParameters: [Parameters.$host, Parameters.resourceId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst resourceExecuteOperationSpec: coreClient.OperationSpec = {\n  path: \"/{resourceId}/query\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.QueryResults\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.body,\n  urlParameters: [Parameters.$host, Parameters.resourceId],\n  headerParameters: [\n    Parameters.accept,\n    Parameters.contentType,\n    Parameters.prefer\n  ],\n  mediaType: \"json\",\n  serializer\n};\nconst batchOperationSpec: coreClient.OperationSpec = {\n  path: \"/$batch\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.BatchResponse\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.body1,\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst resourceGetXmsOperationSpec: coreClient.OperationSpec = {\n  path: \"/{resourceId}/query\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.QueryResults\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.query, Parameters.timespan],\n  urlParameters: [Parameters.$host, Parameters.resourceId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst resourceExecuteXmsOperationSpec: coreClient.OperationSpec = {\n  path: \"/{resourceId}/query\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.QueryResults\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.body,\n  urlParameters: [Parameters.$host, Parameters.resourceId],\n  headerParameters: [\n    Parameters.accept,\n    Parameters.contentType,\n    Parameters.prefer\n  ],\n  mediaType: \"json\",\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { Metadata } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { AzureLogAnalyticsContext } from \"../azureLogAnalyticsContext\";\nimport {\n  MetadataGetOptionalParams,\n  MetadataGetResponse,\n  MetadataPostOptionalParams,\n  MetadataPostResponse\n} from \"../models\";\n\n/** Class containing Metadata operations. */\nexport class MetadataImpl implements Metadata {\n  private readonly client: AzureLogAnalyticsContext;\n\n  /**\n   * Initialize a new instance of the class Metadata class.\n   * @param client Reference to the service client\n   */\n  constructor(client: AzureLogAnalyticsContext) {\n    this.client = client;\n  }\n\n  /**\n   * Retrieve the metadata information for the workspace, including its schema, functions, workspace\n   * info, categories etc.\n   * @param workspaceId ID of the workspace. This is Workspace ID from the Properties blade in the Azure\n   *                    portal.\n   * @param options The options parameters.\n   */\n  get(\n    workspaceId: string,\n    options?: MetadataGetOptionalParams\n  ): Promise<MetadataGetResponse> {\n    return this.client.sendOperationRequest(\n      { workspaceId, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Retrieve the metadata information for the workspace, including its schema, functions, workspace\n   * info, categories etc.\n   * @param workspaceId ID of the workspace. This is Workspace ID from the Properties blade in the Azure\n   *                    portal.\n   * @param options The options parameters.\n   */\n  post(\n    workspaceId: string,\n    options?: MetadataPostOptionalParams\n  ): Promise<MetadataPostResponse> {\n    return this.client.sendOperationRequest(\n      { workspaceId, options },\n      postOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getOperationSpec: coreClient.OperationSpec = {\n  path: \"/workspaces/{workspaceId}/metadata\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.MetadataResults\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  urlParameters: [Parameters.$host, Parameters.workspaceId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst postOperationSpec: coreClient.OperationSpec = {\n  path: \"/workspaces/{workspaceId}/metadata\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.MetadataResults\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  urlParameters: [Parameters.$host, Parameters.workspaceId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreClient from \"@azure/core-client\";\nimport { AzureLogAnalyticsOptionalParams } from \"./models\";\n\n/** @internal */\nexport class AzureLogAnalyticsContext extends coreClient.ServiceClient {\n  $host: string;\n\n  /**\n   * Initializes a new instance of the AzureLogAnalyticsContext class.\n   * @param options The parameter options\n   */\n  constructor(options?: AzureLogAnalyticsOptionalParams) {\n    // Initializing default values for options\n    if (!options) {\n      options = {};\n    }\n    const defaults: AzureLogAnalyticsOptionalParams = {\n      requestContentType: \"application/json; charset=utf-8\"\n    };\n\n    const packageDetails = `azsdk-js-monitor-log-query/1.1.1`;\n    const userAgentPrefix =\n      options.userAgentOptions && options.userAgentOptions.userAgentPrefix\n        ? `${options.userAgentOptions.userAgentPrefix} ${packageDetails}`\n        : `${packageDetails}`;\n\n    const optionsWithDefaults = {\n      ...defaults,\n      ...options,\n      userAgentOptions: {\n        userAgentPrefix\n      },\n      baseUri: options.endpoint || \"https://api.loganalytics.io/v1\"\n    };\n    super(optionsWithDefaults);\n\n    // Assigning values to Constant parameters\n    this.$host = options.$host || \"https://api.loganalytics.io/v1\";\n  }\n}\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { QueryImpl, MetadataImpl } from \"./operations\";\nimport { Query, Metadata } from \"./operationsInterfaces\";\nimport { AzureLogAnalyticsContext } from \"./azureLogAnalyticsContext\";\nimport { AzureLogAnalyticsOptionalParams } from \"./models\";\n\n/** @internal */\nexport class AzureLogAnalytics extends AzureLogAnalyticsContext {\n  /**\n   * Initializes a new instance of the AzureLogAnalytics class.\n   * @param options The parameter options\n   */\n  constructor(options?: AzureLogAnalyticsOptionalParams) {\n    super(options);\n    this.query = new QueryImpl(this);\n    this.metadata = new MetadataImpl(this);\n  }\n\n  query: Query;\n  metadata: Metadata;\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { OperationOptions } from \"@azure/core-client\";\nimport { LogsColumnType } from \"../generated/logquery/src\";\nimport { QueryTimeInterval } from \"./timeInterval\";\n\n// https://dev.loganalytics.io/documentation/Using-the-API/RequestOptions\n// https://dev.loganalytics.io/documentation/Using-the-API/Timeouts\n\n/**\n * Options for querying logs.\n */\nexport interface LogsQueryOptions extends OperationOptions {\n  /**\n   * A list of workspaces that are included in the query, except for the one set as the `workspaceId` parameter\n   * These may consist of the following identifier formats:\n   * - Qualified workspace names\n   * - Workspace IDs\n   * - Azure resource IDs\n   */\n  additionalWorkspaces?: string[];\n  /**\n   * The maximum amount of time the server will spend processing the query.\n   * Default: 180 seconds (3 minutes), maximum allowed is 600 seconds (10 minutes)\n   */\n  serverTimeoutInSeconds?: number;\n\n  /**\n   * Results will also include statistics about the query.\n   */\n  includeQueryStatistics?: boolean;\n\n  /**\n   * Results will also include visualization information, in JSON format.\n   */\n  includeVisualization?: boolean;\n}\n\n/**\n * @internal\n */\nexport interface QueryStatistics {\n  query?: {\n    executionTime?: number;\n    [key: string]: unknown;\n  };\n  [key: string]: unknown;\n}\n\n/** The code and message for an error. */\nexport interface LogsErrorInfo extends Error {\n  /** A machine readable error code. */\n  code: string;\n}\n\n/**\n * Tables and statistic results from a logs query.\n */\n\nexport type LogsQueryResult = LogsQuerySuccessfulResult | LogsQueryPartialResult;\n\n/** Indicates if a query succeeded or failed or partially failed.\n * Represented by PartialFailure\" | \"Success\" | \"Failure\".\n */\nexport enum LogsQueryResultStatus {\n  /** Represents Partial Failure scenario where partial data and errors of type {@link LogsQueryPartialResult} is returned for query */\n  PartialFailure = \"PartialFailure\",\n  /** Represents Failure scenario where only error of type {@link LogsQueryError} is returned for query */\n  Failure = \"Failure\",\n  /** Represents Success scenario where all data of type {@link LogsQuerySuccessfulResult} is returned for query */\n  Success = \"Success\",\n}\n\n/** Result type for Success Scenario for logs query workspace and query batch operations. */\nexport interface LogsQuerySuccessfulResult {\n  /** Populated results from the query. */\n  tables: LogsTable[];\n  /** Indicates that the query succeeded */\n  status: LogsQueryResultStatus.Success;\n  /** Statistics represented in JSON format. */\n  statistics?: Record<string, unknown>;\n  /** Visualization data in JSON format. */\n  visualization?: Record<string, unknown>;\n}\n\n/** Result type for Partial Failure Scenario for logs queryWorkspace and queryBatch operations. */\nexport interface LogsQueryPartialResult {\n  /** Populated results from the query. */\n  partialTables: LogsTable[];\n  /** error information for partial errors or failed queries */\n  partialError: LogsErrorInfo;\n  /** Indicates that the query partially failed.*/\n  status: LogsQueryResultStatus.PartialFailure;\n  /** Statistics represented in JSON format. */\n  statistics?: Record<string, unknown>;\n  /** Visualization data in JSON format. */\n  visualization?: Record<string, unknown>;\n}\n\n/** Result type for Failure Scenario representing error for logs queryWorkspace and queryBatch operations. */\nexport interface LogsQueryError extends Error {\n  /** A machine readable error code. */\n  code: string;\n  /** Indicates that the query failed */\n  status: LogsQueryResultStatus.Failure;\n}\n\n/** Configurable HTTP request settings for the Logs query batch operation. */\nexport interface LogsQueryBatchOptions extends OperationOptions {}\n\n/** The Kusto query. For more information about Kusto, see [Kusto query overview](https://docs.microsoft.com/azure/data-explorer/kusto/query). */\n// NOTE: 'id' is added automatically by our LogsQueryClient.\nexport interface QueryBatch {\n  /** The workspace for this query. */\n  workspaceId: string;\n\n  // TODO: having both this and the workspaceId field co-exist on the same model seems really\n  // confusing. However, this is similar to what we're offering in other languages as well.\n\n  /** The query to execute. */\n  query: string;\n  /** The timespan over which to query data. This timespan is applied in addition to any that are specified in the query expression. */\n  timespan: QueryTimeInterval;\n  /**\n   * A list of workspaces that are included in the query, except for the one set as the `workspaceId` parameter\n   * These may consist of the following identifier formats:\n   * - Qualified workspace names\n   * - Workspace IDs\n   * - Azure resource IDs\n   */\n  additionalWorkspaces?: string[];\n  /**\n   * The maximum amount of time the server will spend processing the query.\n   * Default: 180 seconds (3 minutes), maximum allowed is 600 seconds (10 minutes)\n   */\n  serverTimeoutInSeconds?: number;\n\n  /**\n   * Results will also include statistics about the query.\n   */\n  includeQueryStatistics?: boolean;\n\n  /**\n   * Results will also include visualization information, in JSON format.\n   */\n  includeVisualization?: boolean;\n}\n\n/** Results for a batch query. Each result in the array is either of type\n *  {@link LogsQueryError} or {@link LogsQueryPartialResult} or {@link LogsQuerySuccessfulResult}\n */\nexport type LogsQueryBatchResult = Array<\n  LogsQueryPartialResult | LogsQuerySuccessfulResult | LogsQueryError\n>;\n\n/** Contains the columns and rows for one table in a query response. */\nexport interface LogsTable {\n  /** The name of the table. */\n  name: string;\n  /** The list of columns in this table. */\n  columnDescriptors: LogsColumn[];\n  /** The two dimensional array of results from this query indexed by row and column. */\n  rows: (Date | string | number | Record<string, unknown> | boolean)[][];\n}\n\n/** A column in a table. */\nexport interface LogsColumn {\n  /** The name of this column. */\n  name?: string;\n  /** The data type of this column.\n   * Defines values for LogsColumnType.\n   * {@link KnownLogsColumnType} can be used interchangeably with LogsColumnType,\n   *  this enum contains the known values that the service supports.\n   * ### Known values supported by the service\n   * **bool**\n   * **datetime**\n   * **dynamic**\n   * **int**\n   * **long**\n   * **real**\n   * **string**\n   * **guid**\n   * **decimal**\n   * **timespan**\n   */\n  type?: LogsColumnType;\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { LogsQueryOptions } from \"../models/publicLogsModels\";\n\n/**\n * @internal\n */\nexport function formatPreferHeader(\n  args:\n    | Pick<\n        LogsQueryOptions,\n        \"serverTimeoutInSeconds\" | \"includeQueryStatistics\" | \"includeVisualization\"\n      >\n    | undefined\n): { Prefer: string } | undefined {\n  if (!args) {\n    return undefined;\n  }\n\n  // https://datatracker.ietf.org/doc/html/rfc7240\n\n  const pairs = [];\n\n  if (args.serverTimeoutInSeconds != null) {\n    pairs.push(`wait=${args.serverTimeoutInSeconds}`);\n  }\n\n  if (args.includeQueryStatistics) {\n    pairs.push(\"include-statistics=true\");\n  }\n\n  if (args.includeVisualization) {\n    pairs.push(\"include-render=true\");\n  }\n\n  if (pairs.length > 0) {\n    return {\n      Prefer: pairs.join(\",\"),\n    };\n  }\n\n  return undefined;\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { OperationOptions } from \"@azure/core-client\";\nimport {\n  AggregationType,\n  MetricClass,\n  MetricUnit,\n  MetricValue,\n  NamespaceClassification,\n  ResultType,\n} from \"..\";\nimport { QueryTimeInterval } from \"./timeInterval\";\n\n/**\n * Options used when querying metrics.\n */\nexport interface MetricsQueryOptions extends OperationOptions {\n  /** The interval (i.e. timegrain) of the query. {@link Durations} helper contains aliases for some common ISO8601 durations.\n   * This is an ISO8601 duration value in the format P[n]Y[n]M[n]DT[n]H[n]M[n]S\n   *  where P is the duration designator (for period) placed at the start of the duration representation.\n   *   Y is the year designator that follows the value for the number of years.\n   *   M is the month designator that follows the value for the number of months.\n   *   W is the week designator that follows the value for the number of weeks.\n   *   D is the day designator that follows the value for the number of days.\n   *   T is the time designator that precedes the time components of the representation.\n   *   H is the hour designator that follows the value for the number of hours.\n   *   M is the minute designator that follows the value for the number of minutes.\n   *   S is the second designator that follows the value for the number of seconds.\n   */\n  granularity?: string;\n  /** The enclosing timespan for metrics. */\n  timespan?: QueryTimeInterval;\n  /** The list of aggregation types (comma separated) to retrieve. */\n  aggregations?: AggregationType[];\n  /**\n   * The maximum number of records to retrieve.\n   * Valid only if $filter is specified.\n   * Defaults to 10.\n   */\n  top?: number;\n  /**\n   * The aggregation to use for sorting results and the direction of the sort.\n   * Only one order can be specified.\n   * Examples: sum asc.\n   */\n  orderBy?: string;\n  /** The **$filter** is used to reduce the set of metric data returned.<br>Example:<br>Metric contains metadata A, B and C.<br>- Return all time series of C where A = a1 and B = b1 or b2<br>**$filter=A eq ‘a1’ and B eq ‘b1’ or B eq ‘b2’ and C eq ‘*’**<br>- Invalid variant:<br>**$filter=A eq ‘a1’ and B eq ‘b1’ and C eq ‘*’ or B = ‘b2’**<br>This is invalid because the logical or operator cannot separate two different metadata names.<br>- Return all time series where A = a1, B = b1 and C = c1:<br>**$filter=A eq ‘a1’ and B eq ‘b1’ and C eq ‘c1’**<br>- Return all time series where A = a1<br>**$filter=A eq ‘a1’ and B eq ‘*’ and C eq ‘*’**. */\n  filter?: string;\n  /** Reduces the set of data collected. The syntax allowed depends on the operation. See the operation's description for details. */\n  resultType?: ResultType;\n  /** Metric namespace to query metric definitions for. */\n  metricNamespace?: string;\n}\n\n/** The result data of a query. */\nexport interface Metric {\n  /** the metric Id. */\n  id: string;\n  /** the resource type of the metric resource. */\n  type: string;\n  /** the name of the metric */\n  name: string;\n  /** Detailed description of this metric. */\n  description?: string;\n  /** 'Success' or the error details on query failures for this metric. */\n  errorCode?: string;\n  /** Error message encountered querying this specific metric. */\n  errorMessage?: string;\n  /** the unit of the metric. */\n  unit: MetricUnit;\n  /** the time series returned when a data query is performed. */\n  timeseries: TimeSeriesElement[];\n}\n\n/** Represents a metric metadata value. */\nexport interface MetadataValue {\n  /** the name of the metadata. */\n  name?: string;\n  /** the value of the metadata. */\n  value?: string;\n}\n\n/** A time series result type. The discriminator value is always TimeSeries in this case. */\nexport interface TimeSeriesElement {\n  // track 2 version of `TimeSeriesElement` from the `metrics` generated client.\n  // (only to fix the casing of `metadatavalues`)\n\n  /** the metadata values returned if $filter was specified in the call. */\n  metadataValues?: MetadataValue[];\n  /** An array of data points representing the metric values.  This is only returned if a result type of data is specified. */\n  data?: MetricValue[];\n}\n\n/**\n * Metrics, including additional information like cost, the resourceRegion, etc...\n */\nexport interface MetricsQueryResult {\n  // track 2 version of `MetricsListResponse`\n\n  /** The integer value representing the cost of the query, for data case. */\n  cost?: number;\n  /** The timespan for which the data was retrieved. Its value consists of two datetimes concatenated, separated by '/'.  This may be adjusted in the future and returned back from what was originally requested. */\n  timespan: QueryTimeInterval;\n  /** The interval (window size) for which the metric data was returned in.  This may be adjusted in the future and returned back from what was originally requested.  This is not present if a metadata request was made. */\n  granularity?: string;\n  /** The namespace of the metrics been queried */\n  namespace?: string;\n  /** The region of the resource been queried for metrics. */\n  resourceRegion?: string;\n  /** the value of the collection. */\n  metrics: Metric[];\n  /** convenience method to get metric by metric name */\n  getMetricByName(metricName: string): Metric | undefined;\n}\n\nexport function getMetricByName(this: MetricsQueryResult, metricName: string): Metric | undefined {\n  return this.metrics.find((it) => it.name === metricName);\n}\n\nexport function createMetricsQueryResult(\n  metricsQueryResultData: Omit<MetricsQueryResult, \"getMetricByName\">\n): MetricsQueryResult {\n  return { ...metricsQueryResultData, getMetricByName };\n}\n\n/**\n * Options used when getting metric definitions.\n */\nexport interface ListMetricDefinitionsOptions extends OperationOptions {\n  // track 2 version of `MetricDefinitionsListOptionalParams`\n\n  /** Metric namespace to query metric definitions for. */\n  metricNamespace?: string;\n}\n\n/**\n * Options used when getting metric namespaces.\n */\nexport interface ListMetricNamespacesOptions extends OperationOptions {\n  // track 2 copy of `MetricNamespacesListOptionalParams`\n\n  /** The ISO 8601 conform Date start time from which to query for metric namespaces. */\n  startTime?: string;\n}\n\n/** Metric namespace class specifies the metadata for a metric namespace. */\nexport interface MetricNamespace {\n  /** The ID of the metric namespace. */\n  id?: string;\n  /** The type of the namespace. */\n  type?: string;\n  /** The escaped name of the namespace. */\n  name?: string;\n  /** Kind of namespace */\n  classification?: NamespaceClassification;\n  /** The metric namespace name. */\n  metricNamespaceName?: string;\n}\n\n/** Metric definition class specifies the metadata for a metric. */\nexport interface MetricDefinition {\n  /** Flag to indicate whether the dimension is required. */\n  isDimensionRequired?: boolean;\n  /** the resource identifier of the resource that emitted the metric. */\n  resourceId?: string;\n  /** the namespace the metric belongs to. */\n  namespace?: string;\n  /** the name and the display name of the metric, i.e. it is a localizable string. */\n  name?: string;\n  /** Detailed description of this metric. */\n  description?: string;\n  /** Custom category name for this metric. */\n  category?: string;\n  /** The class of the metric. */\n  metricClass?: MetricClass;\n  /** The unit of the metric. */\n  unit?: MetricUnit;\n  /** the primary aggregation type value defining how to use the values for display. */\n  primaryAggregationType?: AggregationType;\n  /** the collection of what aggregation types are supported. */\n  supportedAggregationTypes?: AggregationType[];\n  /** the collection of what aggregation intervals are available to be queried. */\n  metricAvailabilities?: MetricAvailability[];\n  /** the resource identifier of the metric definition. */\n  id?: string;\n  /** the name and the display name of the dimension, i.e. it is a localizable string. */\n  dimensions?: string[];\n}\n\n/** Metric availability specifies the time grain (aggregation interval or frequency) and the retention period for that time grain. */\nexport interface MetricAvailability {\n  /** the time grain specifies the aggregation interval for the metric. Expressed as a duration 'PT1M', 'P1D', etc. */\n  granularity?: string;\n  /** the retention period for the metric at the specified granularity.  Expressed as a duration 'PT1M', 'P1D', etc. */\n  retention?: string;\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { QueryTimeInterval } from \"./models/timeInterval\";\n\nexport function convertTimespanToInterval(timespan: QueryTimeInterval): string {\n  if (isObjectWithProperties(timespan, [\"startTime\", \"endTime\", \"duration\"])) {\n    throw new TypeError(\"Invalid Timespan - contains startTime, endTime, and duration.\");\n  }\n\n  if (isObjectWithProperties(timespan, [\"startTime\", \"endTime\"])) {\n    return `${timespan.startTime.toISOString()}/${timespan.endTime.toISOString()}`;\n  } else if (isObjectWithProperties(timespan, [\"startTime\", \"duration\"])) {\n    return `${timespan.startTime.toISOString()}/${timespan.duration}`;\n  } else if (isObjectWithProperties(timespan, [\"duration\", \"endTime\"])) {\n    return `${timespan.duration}/${timespan.endTime.toISOString()}`;\n  } else if (isObjectWithProperties(timespan, [\"duration\"])) {\n    return timespan.duration;\n  }\n\n  throw new TypeError(\"Invalid Timespan - no valid fields assigned.\");\n}\n\nexport function convertIntervalToTimeIntervalObject(timespan: string): QueryTimeInterval {\n  if (timespan.includes(\"/\")) {\n    const intervalUnits: string[] = timespan.split(\"/\");\n    if (Date.parse(intervalUnits[0]) && Date.parse(intervalUnits[1])) {\n      return { startTime: new Date(intervalUnits[0]), endTime: new Date(intervalUnits[1]) };\n    } else if (Date.parse(intervalUnits[0]) && !Date.parse(intervalUnits[1])) {\n      return { startTime: new Date(intervalUnits[0]), duration: intervalUnits[1] };\n    } else if (!Date.parse(intervalUnits[0]) && Date.parse(intervalUnits[1])) {\n      return { duration: intervalUnits[0], endTime: new Date(intervalUnits[1]) };\n    } else {\n      return { duration: timespan };\n    }\n  } else {\n    return { duration: timespan };\n  }\n}\n/**\n * Helper TypeGuard that checks if the input is an object with the specified property.\n * Note: The property may be inherited.\n * @param thing - Any object.\n * @param property - The name of the property that should appear in the object.\n * @internal\n */\nexport function objectHasProperty<Thing, PropertyName extends string>(\n  thing: Thing,\n  property: PropertyName\n): thing is Extract<Thing, Record<PropertyName, unknown>> {\n  return typeof thing === \"object\" && property in (thing as Record<string, unknown>);\n}\n\n/**\n * Helper TypeGuard that checks if something is defined or not.\n * @param thing - Anything\n * @internal\n */\nexport function isDefined<T>(thing: T | undefined | null): thing is T {\n  return typeof thing !== \"undefined\" && thing !== null;\n}\n\n/**\n * Helper TypeGuard that checks if the input is an object with the specified properties.\n * Note: The properties may be inherited.\n * @param thing - Anything.\n * @param properties - The name of the properties that should appear in the object.\n * @internal\n */\nexport function isObjectWithProperties<Thing, PropertyName extends string>(\n  thing: Thing,\n  properties: PropertyName[]\n): thing is Extract<Thing, Record<PropertyName, unknown>> {\n  if (!isDefined(thing) || typeof thing !== \"object\") {\n    return false;\n  }\n\n  for (const property of properties) {\n    if (!objectHasProperty(thing, property)) {\n      return false;\n    }\n  }\n\n  return true;\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport {\n  BatchQueryRequest as GeneratedBatchQueryRequest,\n  BatchQueryResponse as GeneratedBatchQueryResponse,\n  BatchQueryResults as GeneratedBatchQueryResults,\n  BatchRequest as GeneratedBatchRequest,\n  ErrorInfo as GeneratedErrorInfo,\n  QueryBatchResponse as GeneratedQueryBatchResponse,\n  Table as GeneratedTable,\n  QueryBody,\n} from \"../generated/logquery/src\";\n\nimport {\n  Metric as GeneratedMetric,\n  MetricsListOptionalParams as GeneratedMetricsListOptionalParams,\n  MetricsListResponse as GeneratedMetricsListResponse,\n  TimeSeriesElement as GeneratedTimeSeriesElement,\n} from \"../generated/metrics/src\";\n\nimport {\n  MetricDefinition as GeneratedMetricDefinition,\n  MetricDefinitionsListOptionalParams as GeneratedMetricDefinitionsListOptionalParams,\n} from \"../generated/metricsdefinitions/src\";\n\nimport { MetricNamespace as GeneratedMetricNamespace } from \"../generated/metricsnamespaces/src\";\nimport { formatPreferHeader } from \"./util\";\n\nimport {\n  ListMetricDefinitionsOptions,\n  LogsQueryBatchResult,\n  LogsTable,\n  MetricsQueryOptions,\n  MetricsQueryResult,\n  QueryBatch,\n} from \"../../src\";\nimport {\n  Metric,\n  MetricAvailability,\n  MetricDefinition,\n  MetricNamespace,\n  TimeSeriesElement,\n  createMetricsQueryResult,\n} from \"../models/publicMetricsModels\";\nimport { FullOperationResponse } from \"@azure/core-client\";\nimport {\n  convertIntervalToTimeIntervalObject,\n  convertTimespanToInterval,\n} from \"../timespanConversion\";\nimport {\n  LogsErrorInfo,\n  LogsQueryError,\n  LogsQueryPartialResult,\n  LogsQueryResultStatus,\n  LogsQuerySuccessfulResult,\n} from \"../models/publicLogsModels\";\n\n/**\n * @internal\n */\nexport function convertRequestForQueryBatch(batch: QueryBatch[]): GeneratedBatchRequest {\n  let id = 0;\n\n  const requests: GeneratedBatchQueryRequest[] = batch.map((query: QueryBatch) => {\n    const body: Exclude<QueryBody, \"timespan\"> &\n      Partial<\n        Pick<\n          QueryBatch,\n          | \"query\"\n          | \"workspaceId\"\n          | \"includeQueryStatistics\"\n          | \"additionalWorkspaces\"\n          | \"includeVisualization\"\n          | \"serverTimeoutInSeconds\"\n        >\n      > = {\n      workspaceId: query.workspaceId,\n      query: query.query,\n    };\n    if (query[\"additionalWorkspaces\"]) {\n      body[\"workspaces\"] = query[\"additionalWorkspaces\"].map((x) => x);\n    }\n    if (query[\"timespan\"]) {\n      body[\"timespan\"] = convertTimespanToInterval(query[\"timespan\"]);\n    }\n    delete body[\"workspaceId\"];\n    delete body[\"includeQueryStatistics\"];\n    delete body[\"includeVisualization\"];\n    delete body[\"additionalWorkspaces\"];\n    delete body[\"serverTimeoutInSeconds\"];\n\n    const generatedRequest: GeneratedBatchQueryRequest = {\n      id: id.toString(),\n      workspace: query.workspaceId,\n      headers: formatPreferHeader(query),\n      body,\n    };\n\n    ++id;\n\n    return generatedRequest;\n  });\n\n  return {\n    requests,\n  };\n}\n\n/**\n * @internal\n */\nexport function convertResponseForQueryBatch(\n  generatedResponse: GeneratedQueryBatchResponse,\n  rawResponse: FullOperationResponse\n): LogsQueryBatchResult {\n  const fixApplied = fixInvalidBatchQueryResponse(generatedResponse, rawResponse);\n  /* Sort the ids that are passed in with the queries, as numbers instead of strings\n   * It is not guaranteed that service will return the responses for queries in the same order\n   * as the queries are passed in\n   */\n  const responseList = generatedResponse.responses || [];\n\n  const newResponse: LogsQueryBatchResult = responseList\n    ?.sort((a, b) => {\n      let left = 0;\n      if (a.id != null) {\n        left = parseInt(a.id, 10);\n      }\n\n      let right = 0;\n      if (b.id != null) {\n        right = parseInt(b.id, 10);\n      }\n\n      return left - right;\n    })\n    ?.map((response: GeneratedBatchQueryResponse) => convertBatchQueryResponseHelper(response));\n\n  (newResponse as any)[\"__fixApplied\"] = fixApplied;\n  return newResponse;\n}\n/**\n * This is a workaround for a service bug that we're investigating. The 'body' column will occasionally come\n * back as a JSON string, instead of being a JSON object.\n *\n * (examples, with excess stuff trimmed)\n * Correct: `{\"responses\":[{\"body\":{\"tables\":[{\"name\":\"PrimaryResult\",\"columns\":[{\"name\":\"stringcolumn\",\"type\":\"string\"}],\"rows\":[[\"hello\"]}`\n * Broken: `{\"responses\":[{\"body\":\"{\\\"tables\\\":[{\\\"name\\\":\\\"PrimaryResult\\\",\\\"columns\\\":[{\\\"name\\\":\\\"stringcolumn\\\",\\\"type\\\":\\\"string\\\"}],\\\"rows\\\":[[\\\"hello\\\"]}`\n *\n * Issue here: https://github.com/Azure/azure-sdk-for-js/issues/15688\n *\n * @internal\n */\nexport function fixInvalidBatchQueryResponse(\n  generatedResponse: GeneratedQueryBatchResponse,\n  rawResponse: FullOperationResponse\n): boolean {\n  if (generatedResponse.responses == null) {\n    return false;\n  }\n\n  let hadToFix = false;\n\n  // the body here is incorrect, deserialize the correct one from the raw response itself.\n  const parsedBody = JSON.parse(rawResponse.bodyAsText!);\n  // fix whichever responses are in this broken state (each query has it's own\n  // response, so they're not all always broken)\n  for (let i = 0; i < generatedResponse.responses.length; ++i) {\n    if (generatedResponse.responses[i].body?.error != null) {\n      continue;\n    }\n\n    // deserialize the raw response from the service, since we'll need index into it.\n\n    generatedResponse.responses[i].body = parsedBody.responses[i].body;\n\n    hadToFix = true;\n  }\n\n  return hadToFix;\n}\n\n/**\n * @internal\n */\nexport function convertRequestForMetrics(\n  metricNames: string[],\n  queryMetricsOptions: MetricsQueryOptions | undefined\n): GeneratedMetricsListOptionalParams {\n  if (!queryMetricsOptions) {\n    return {};\n  }\n\n  const { orderBy, aggregations, metricNamespace, timespan, granularity, ...rest } =\n    queryMetricsOptions;\n\n  const obj: GeneratedMetricsListOptionalParams = {\n    ...rest,\n  };\n\n  if (timespan) {\n    obj.timespan = convertTimespanToInterval(timespan);\n  }\n\n  if (orderBy) {\n    obj.orderby = orderBy;\n  }\n  if (metricNames) {\n    obj.metricnames = metricNames.join(\",\");\n  }\n  if (aggregations) {\n    obj.aggregation = aggregations.join(\",\");\n  }\n  if (metricNamespace) {\n    obj.metricnamespace = metricNamespace;\n  }\n  if (granularity) {\n    obj.interval = granularity;\n  }\n  return obj;\n}\n\n/**\n * @internal\n */\nexport function convertResponseForMetrics(\n  generatedResponse: GeneratedMetricsListResponse\n): MetricsQueryResult {\n  const metrics: Metric[] = generatedResponse.value.map((metric: GeneratedMetric) => {\n    const metricObject = {\n      ...metric,\n      name: metric.name.value,\n      description: metric.displayDescription,\n      timeseries: metric.timeseries.map(\n        (ts: GeneratedTimeSeriesElement) =>\n          <TimeSeriesElement>{\n            data: ts.data,\n            metadataValues: ts.metadatavalues?.map((mv) => ({\n              ...mv,\n              name: mv.name?.value,\n            })),\n          }\n      ),\n    };\n    delete metricObject.displayDescription;\n    return metricObject;\n  });\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars -- eslint doesn't recognize that the extracted variables are prefixed with '_' and are purposefully unused.\n  const { resourceregion, value: _ignoredValue, interval, timespan, ...rest } = generatedResponse;\n\n  const obj: Omit<MetricsQueryResult, \"getMetricByName\"> = {\n    ...rest,\n    metrics,\n    timespan: convertIntervalToTimeIntervalObject(timespan),\n  };\n\n  if (resourceregion) {\n    obj.resourceRegion = resourceregion;\n  }\n  if (interval) {\n    obj.granularity = interval;\n  }\n\n  return createMetricsQueryResult(obj);\n}\n\n/**\n * @internal\n */\nexport function convertRequestOptionsForMetricsDefinitions(\n  options: ListMetricDefinitionsOptions | undefined\n): GeneratedMetricDefinitionsListOptionalParams {\n  if (!options) {\n    return {};\n  }\n\n  const { metricNamespace, ...rest } = options;\n\n  const obj: GeneratedMetricDefinitionsListOptionalParams = {\n    ...rest,\n  };\n\n  if (metricNamespace) {\n    obj.metricnamespace = metricNamespace;\n  }\n\n  return obj;\n}\n\n/**\n * @internal\n */\nexport function convertResponseForMetricsDefinitions(\n  generatedResponse: Array<GeneratedMetricDefinition>\n): Array<MetricDefinition> {\n  const definitions: Array<MetricDefinition> = generatedResponse?.map((genDef) => {\n    const { name, dimensions, displayDescription, metricAvailabilities, ...rest } = genDef;\n\n    const response: MetricDefinition = {\n      ...rest,\n    };\n\n    if (displayDescription) {\n      response.description = displayDescription;\n    }\n    if (name?.value) {\n      response.name = name.value;\n    }\n\n    const mappedMetricAvailabilities: Array<MetricAvailability> | undefined =\n      metricAvailabilities?.map((genMetricAvail) => {\n        return {\n          granularity: genMetricAvail.timeGrain,\n          retention: genMetricAvail.retention,\n        };\n      });\n\n    if (mappedMetricAvailabilities) {\n      response.metricAvailabilities = mappedMetricAvailabilities;\n    }\n    const mappedDimensions = dimensions?.map((dim) => dim.value);\n\n    if (mappedDimensions) {\n      response.dimensions = mappedDimensions;\n    }\n    return response;\n  });\n  return definitions;\n}\n\n/**\n * @internal\n */\nexport function convertResponseForMetricNamespaces(\n  generatedResponse: Array<GeneratedMetricNamespace>\n): Array<MetricNamespace> {\n  const namespaces: Array<MetricNamespace> = generatedResponse?.map((genDef) => {\n    const { properties, ...rest } = genDef;\n\n    const response: MetricNamespace = {\n      ...rest,\n    };\n\n    if (properties) {\n      response.metricNamespaceName = properties.metricNamespaceName;\n    }\n\n    return response;\n  });\n  return namespaces;\n}\n\n/**\n * @internal\n */\nexport function convertGeneratedTable(table: GeneratedTable): LogsTable {\n  const dynamicsIndices: number[] = [];\n  const datesIndices: number[] = [];\n\n  // most columns convert on deserialization except for `dynamic` columns (basically JSON objects)\n  // and 'datetime' (strings that are ISO8601 formatted dates)\n  for (let i = 0; i < table.columns.length; ++i) {\n    if (table.columns[i].type === \"datetime\") {\n      datesIndices.push(i);\n    } else if (table.columns[i].type === \"dynamic\") {\n      dynamicsIndices.push(i);\n    }\n  }\n\n  return {\n    ...table,\n    rows: (table.rows as LogsTable[\"rows\"]).map((row) => {\n      for (const dynamicIndex of dynamicsIndices) {\n        try {\n          row[dynamicIndex] = JSON.parse(row[dynamicIndex] as string) as Record<string, unknown>;\n        } catch (_err: any) {\n          /* leave as is. */\n        }\n      }\n\n      for (const dateIndex of datesIndices) {\n        row[dateIndex] = new Date(row[dateIndex] as string);\n      }\n\n      return row;\n    }),\n    columnDescriptors: table.columns,\n  };\n}\n\n/**\n * @internal\n */\nexport function convertBatchQueryResponseHelper(\n  response: GeneratedBatchQueryResponse\n): LogsQueryPartialResult | LogsQuerySuccessfulResult | LogsQueryError {\n  try {\n    const parsedResponseBody: GeneratedBatchQueryResults = JSON.parse(\n      response.body as any\n    ) as GeneratedBatchQueryResults;\n\n    return computeResultType(parsedResponseBody);\n  } catch (e: any) {\n    if (response.body) return computeResultType(response.body);\n    else return {} as LogsQuerySuccessfulResult;\n  }\n}\n\nexport function computeResultType(\n  generatedResponse: GeneratedBatchQueryResults\n): LogsQueryPartialResult | LogsQuerySuccessfulResult | LogsQueryError {\n  if (!generatedResponse.error) {\n    const result: LogsQuerySuccessfulResult = {\n      visualization: generatedResponse.render,\n      status: LogsQueryResultStatus.Success,\n      statistics: generatedResponse.statistics,\n      tables:\n        generatedResponse.tables?.map((table: GeneratedTable) => convertGeneratedTable(table)) ||\n        [],\n    };\n    return result;\n  } else {\n    if (generatedResponse.tables) {\n      const result: LogsQueryPartialResult = {\n        visualization: generatedResponse.render,\n        status: LogsQueryResultStatus.PartialFailure,\n        statistics: generatedResponse.statistics,\n        partialTables: generatedResponse.tables?.map((table: GeneratedTable) =>\n          convertGeneratedTable(table)\n        ),\n        partialError: mapError(generatedResponse.error),\n      };\n      return result;\n    } else {\n      const errorInfo: LogsErrorInfo = mapError(generatedResponse.error);\n      const result: LogsQueryError = {\n        status: LogsQueryResultStatus.Failure,\n        ...errorInfo,\n      };\n      return result;\n    }\n  }\n}\n\nexport function mapError(error: GeneratedErrorInfo): LogsErrorInfo {\n  let innermostError = error;\n  while (innermostError.innerError) {\n    innermostError = innermostError.innerError;\n  }\n\n  return {\n    name: \"Error\",\n    code: error.code,\n    message: `${error.message}.  ${innermostError.message}`,\n  };\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * @internal\n */\nexport const SDK_VERSION: string = \"1.1.1\";\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { createTracingClient } from \"@azure/core-tracing\";\nimport { SDK_VERSION } from \"./constants\";\n\n/**\n * Global tracing client used by this package.\n *\n * @internal\n */\nexport const tracingClient = createTracingClient({\n  namespace: \"Microsoft.Monitor\",\n  packageName: \"@azure/monitor-query\",\n  packageVersion: SDK_VERSION,\n});\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { LogsQueryClientOptions } from \"../logsQueryClient\";\n\nexport function getLogQueryEndpoint(options: LogsQueryClientOptions): string {\n  if (!options.endpoint) {\n    throw new Error(\"options.endpoint is required\");\n  }\n\n  const url = new URL(options.endpoint);\n  url.pathname = \"/v1\";\n\n  return url.toString();\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { AzureLogAnalytics } from \"./generated/logquery/src/azureLogAnalytics\";\nimport { TokenCredential } from \"@azure/core-auth\";\n\nimport {\n  LogsQueryBatchOptions,\n  LogsQueryBatchResult,\n  LogsQueryOptions,\n  LogsQueryPartialResult,\n  LogsQueryResult,\n  LogsQueryResultStatus,\n  LogsQuerySuccessfulResult,\n  QueryBatch,\n} from \"./models/publicLogsModels\";\n\nimport {\n  convertGeneratedTable,\n  convertRequestForQueryBatch,\n  convertResponseForQueryBatch,\n  mapError,\n} from \"./internal/modelConverters\";\nimport { formatPreferHeader } from \"./internal/util\";\nimport { CommonClientOptions, FullOperationResponse, OperationOptions } from \"@azure/core-client\";\nimport { QueryTimeInterval } from \"./models/timeInterval\";\nimport { convertTimespanToInterval } from \"./timespanConversion\";\nimport { SDK_VERSION } from \"./constants\";\nimport { tracingClient } from \"./tracing\";\nimport { getLogQueryEndpoint } from \"./internal/logQueryOptionUtils\";\n\nconst defaultMonitorScope = \"https://api.loganalytics.io/.default\";\n\n/**\n * Options for the LogsQueryClient.\n */\nexport interface LogsQueryClientOptions extends CommonClientOptions {\n  /**\n   * The host to connect to.\n   */\n  endpoint?: string;\n}\n\n/**\n * Client for Azure Log Analytics\n */\nexport class LogsQueryClient {\n  private _logAnalytics: AzureLogAnalytics;\n\n  /**\n   * Construct a LogsClient that can be used to query logs using the Log Analytics Query language.\n   *\n   * @param tokenCredential - A token credential.\n   * @param options - Options for the LogsClient.\n   */\n  constructor(tokenCredential: TokenCredential, options?: LogsQueryClientOptions) {\n    // This client defaults to using 'https://api.loganalytics.io/' as the\n    // host.\n    let scope;\n    let endpoint = options?.endpoint;\n    if (options?.endpoint) {\n      scope = `${options.endpoint}/.default`;\n      endpoint = getLogQueryEndpoint(options);\n    }\n    const credentialOptions = {\n      credentialScopes: scope,\n    };\n    const packageDetails = `azsdk-js-monitor-query/${SDK_VERSION}`;\n    const userAgentPrefix =\n      options?.userAgentOptions && options?.userAgentOptions.userAgentPrefix\n        ? `${options?.userAgentOptions.userAgentPrefix} ${packageDetails}`\n        : `${packageDetails}`;\n    this._logAnalytics = new AzureLogAnalytics({\n      ...options,\n      $host: endpoint,\n      endpoint: endpoint,\n      credentialScopes: credentialOptions?.credentialScopes ?? defaultMonitorScope,\n      credential: tokenCredential,\n      userAgentOptions: {\n        userAgentPrefix,\n      },\n    });\n  }\n\n  /**\n   * Queries logs in a Log Analytics Workspace.\n   *\n   * @param workspaceId - The 'Workspace Id' for the Log Analytics Workspace\n   * @param query - A Kusto query.\n   * @param timespan - The timespan over which to query data. This is an ISO8601 time period value. This timespan is applied in addition to any that are specified in the query expression.\n   *  Some common durations can be found in the `Durations` object.\n   * @param options - Options to adjust various aspects of the request.\n   * @returns The result of the query.\n   */\n  async queryWorkspace(\n    workspaceId: string,\n    query: string,\n    timespan: QueryTimeInterval,\n    // eslint-disable-next-line @azure/azure-sdk/ts-naming-options\n    options: LogsQueryOptions = {}\n  ): Promise<LogsQueryResult> {\n    let timeInterval: string = \"\";\n    return tracingClient.withSpan(\n      \"LogsQueryClient.queryWorkspace\",\n      options,\n      async (updatedOptions) => {\n        if (timespan) {\n          timeInterval = convertTimespanToInterval(timespan);\n        }\n        const { flatResponse, rawResponse } = await getRawResponse(\n          (paramOptions) =>\n            this._logAnalytics.query.execute(\n              workspaceId,\n              {\n                query,\n                timespan: timeInterval,\n                workspaces: options?.additionalWorkspaces,\n              },\n              paramOptions\n            ),\n          {\n            ...updatedOptions,\n            requestOptions: {\n              customHeaders: {\n                ...formatPreferHeader(options),\n              },\n            },\n          }\n        );\n\n        const parsedBody = JSON.parse(rawResponse.bodyAsText!);\n        flatResponse.tables = parsedBody.tables;\n\n        const res = {\n          tables: flatResponse.tables.map(convertGeneratedTable),\n          statistics: flatResponse.statistics,\n          visualization: flatResponse.render,\n        };\n\n        if (!flatResponse.error) {\n          // if there is no error field, it is success\n          const result: LogsQuerySuccessfulResult = {\n            tables: res.tables,\n            statistics: res.statistics,\n            visualization: res.visualization,\n            status: LogsQueryResultStatus.Success,\n          };\n          return result;\n        } else {\n          const result: LogsQueryPartialResult = {\n            partialTables: res.tables,\n            status: LogsQueryResultStatus.PartialFailure,\n            partialError: mapError(flatResponse.error),\n            statistics: res.statistics,\n            visualization: res.visualization,\n          };\n          return result;\n        }\n      }\n    );\n  }\n\n  /**\n   * Query Logs with multiple queries, in a batch.\n   * @param batch - A batch of Kusto queries to execute. Each query can be configured to run against separate workspaces.\n   * @param options - Options for querying logs in a batch.\n   * @returns The Logs query results for all the queries.\n   */\n  async queryBatch(\n    batch: QueryBatch[],\n    options: LogsQueryBatchOptions = {}\n  ): Promise<LogsQueryBatchResult> {\n    return tracingClient.withSpan(\"LogsQueryClient.queryBatch\", options, async (updatedOptions) => {\n      const generatedRequest = convertRequestForQueryBatch(batch);\n      const { flatResponse, rawResponse } = await getRawResponse(\n        (paramOptions) => this._logAnalytics.query.batch(generatedRequest, paramOptions),\n        updatedOptions || {}\n      );\n      const result: LogsQueryBatchResult = convertResponseForQueryBatch(flatResponse, rawResponse);\n      return result;\n    });\n  }\n\n  /**\n   * Executes a Kusto query on an Azure resource\n   *\n   * @param resourceId - The identifier of the resource. The expected format is\n         '/subscriptions/<sid>/resourceGroups/<rg>/providers/<providerName>/<resourceType>/<resourceName>'.\n   * @param query - A Kusto query. Learn more about the `Kusto query syntax <https://docs.microsoft.com/azure/data-explorer/kusto/query/>`.\n   * @param timespan - The timespan over which to query data. This is an ISO8601 time period value. This timespan is applied in addition to any that are specified in the query expression.\n   *  Some common durations can be found in the {@link Durations} object.\n   * @param options - Options to adjust various aspects of the request.\n   * @returns Returns all the Azure Monitor logs matching the given Kusto query for an Azure resource.\n   */\n  async queryResource(\n    resourceId: string,\n    query: string,\n    timespan: QueryTimeInterval,\n    // eslint-disable-next-line @azure/azure-sdk/ts-naming-options\n    options: LogsQueryOptions = {}\n  ): Promise<LogsQueryResult> {\n    let timeInterval: string = \"\";\n    return tracingClient.withSpan(\n      \"LogsQueryClient.queryResource\",\n      options,\n      async (updatedOptions) => {\n        timeInterval = convertTimespanToInterval(timespan);\n        if (resourceId.startsWith(\"/\")) {\n          resourceId = resourceId.substring(1);\n        }\n\n        const { flatResponse, rawResponse } = await getRawResponse(\n          (paramOptions) =>\n            this._logAnalytics.query.resourceExecute(\n              resourceId,\n              {\n                query,\n                timespan: timeInterval,\n                workspaces: options?.additionalWorkspaces,\n              },\n              paramOptions\n            ),\n          {\n            ...updatedOptions,\n            requestOptions: {\n              customHeaders: {\n                ...formatPreferHeader(options),\n              },\n            },\n          }\n        );\n\n        const parsedBody = JSON.parse(rawResponse.bodyAsText!);\n        flatResponse.tables = parsedBody.tables;\n\n        const res = {\n          tables: flatResponse.tables.map(convertGeneratedTable),\n          statistics: flatResponse.statistics,\n          visualization: flatResponse.render,\n        };\n\n        if (!flatResponse.error) {\n          // if there is no error field, it is success\n          const result: LogsQuerySuccessfulResult = {\n            tables: res.tables,\n            statistics: res.statistics,\n            visualization: res.visualization,\n            status: LogsQueryResultStatus.Success,\n          };\n          return result;\n        } else {\n          const result: LogsQueryPartialResult = {\n            partialTables: res.tables,\n            status: LogsQueryResultStatus.PartialFailure,\n            partialError: mapError(flatResponse.error),\n            statistics: res.statistics,\n            visualization: res.visualization,\n          };\n          return result;\n        }\n      }\n    );\n  }\n}\n\ninterface ReturnType<T> {\n  flatResponse: T;\n  rawResponse: FullOperationResponse;\n}\n\nasync function getRawResponse<TOptions extends OperationOptions, TResult>(\n  f: (options: TOptions) => Promise<TResult>,\n  options: TOptions\n): Promise<ReturnType<TResult>> {\n  // renaming onResponse received from customer to customerProvidedCallback\n  const { onResponse: customerProvidedCallback } = options || {};\n  let rawResponse: FullOperationResponse | undefined = undefined;\n  // flatResponseParam - is basically the flatResponse received from service call -\n  // just named it so that linter doesn't complain\n  // onResponse - includes the rawResponse and the customer's provided onResponse\n  const flatResponse = await f({\n    ...options,\n    onResponse: (response: FullOperationResponse, flatResponseParam: unknown) => {\n      rawResponse = response;\n      customerProvidedCallback?.(response, flatResponseParam);\n    },\n  });\n  return { flatResponse, rawResponse: rawResponse! };\n}\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreClient from \"@azure/core-client\";\n\n/** The response to a metrics query. */\nexport interface Response {\n  /** The integer value representing the relative cost of the query. */\n  cost?: number;\n  /** The timespan for which the data was retrieved. Its value consists of two datetimes concatenated, separated by '/'.  This may be adjusted in the future and returned back from what was originally requested. */\n  timespan: string;\n  /** The interval (window size) for which the metric data was returned in.  This may be adjusted in the future and returned back from what was originally requested.  This is not present if a metadata request was made. */\n  interval?: string;\n  /** The namespace of the metrics being queried */\n  namespace?: string;\n  /** The region of the resource being queried for metrics. */\n  resourceregion?: string;\n  /** the value of the collection. */\n  value: Metric[];\n}\n\n/** The result data of a query. */\nexport interface Metric {\n  /** the metric Id. */\n  id: string;\n  /** the resource type of the metric resource. */\n  type: string;\n  /** the name and the display name of the metric, i.e. it is localizable string. */\n  name: LocalizableString;\n  /** Detailed description of this metric. */\n  displayDescription?: string;\n  /** 'Success' or the error details on query failures for this metric. */\n  errorCode?: string;\n  /** Error message encountered querying this specific metric. */\n  errorMessage?: string;\n  /** The unit of the metric. */\n  unit: MetricUnit;\n  /** the time series returned when a data query is performed. */\n  timeseries: TimeSeriesElement[];\n}\n\n/** The localizable string class. */\nexport interface LocalizableString {\n  /** the invariant value. */\n  value: string;\n  /** the locale specific value. */\n  localizedValue?: string;\n}\n\n/** A time series result type. The discriminator value is always TimeSeries in this case. */\nexport interface TimeSeriesElement {\n  /** the metadata values returned if $filter was specified in the call. */\n  metadatavalues?: MetadataValue[];\n  /** An array of data points representing the metric values.  This is only returned if a result type of data is specified. */\n  data?: MetricValue[];\n}\n\n/** Represents a metric metadata value. */\nexport interface MetadataValue {\n  /** the name of the metadata. */\n  name?: LocalizableString;\n  /** the value of the metadata. */\n  value?: string;\n}\n\n/** Represents a metric value. */\nexport interface MetricValue {\n  /** the timestamp for the metric value in ISO 8601 format. */\n  timeStamp: Date;\n  /** the average value in the time range. */\n  average?: number;\n  /** the least value in the time range. */\n  minimum?: number;\n  /** the greatest value in the time range. */\n  maximum?: number;\n  /** the sum of all of the values in the time range. */\n  total?: number;\n  /** the number of samples in the time range. Can be used to determine the number of values that contributed to the average value. */\n  count?: number;\n}\n\n/** Describes the format of Error response. */\nexport interface ErrorResponse {\n  /** Error code */\n  code?: string;\n  /** Error message indicating why the operation failed. */\n  message?: string;\n}\n\n/** Known values of {@link ApiVersion201801} that the service accepts. */\nexport enum KnownApiVersion201801 {\n  /** Api Version '2018-01-01' */\n  TwoThousandEighteen0101 = \"2018-01-01\"\n}\n\n/**\n * Defines values for ApiVersion201801. \\\n * {@link KnownApiVersion201801} can be used interchangeably with ApiVersion201801,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **2018-01-01**: Api Version '2018-01-01'\n */\nexport type ApiVersion201801 = string;\n\n/** Known values of {@link MetricUnit} that the service accepts. */\nexport enum KnownMetricUnit {\n  Count = \"Count\",\n  Bytes = \"Bytes\",\n  Seconds = \"Seconds\",\n  CountPerSecond = \"CountPerSecond\",\n  BytesPerSecond = \"BytesPerSecond\",\n  Percent = \"Percent\",\n  MilliSeconds = \"MilliSeconds\",\n  ByteSeconds = \"ByteSeconds\",\n  Unspecified = \"Unspecified\",\n  Cores = \"Cores\",\n  MilliCores = \"MilliCores\",\n  NanoCores = \"NanoCores\",\n  BitsPerSecond = \"BitsPerSecond\"\n}\n\n/**\n * Defines values for MetricUnit. \\\n * {@link KnownMetricUnit} can be used interchangeably with MetricUnit,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Count** \\\n * **Bytes** \\\n * **Seconds** \\\n * **CountPerSecond** \\\n * **BytesPerSecond** \\\n * **Percent** \\\n * **MilliSeconds** \\\n * **ByteSeconds** \\\n * **Unspecified** \\\n * **Cores** \\\n * **MilliCores** \\\n * **NanoCores** \\\n * **BitsPerSecond**\n */\nexport type MetricUnit = string;\n/** Defines values for ResultType. */\nexport type ResultType = \"Data\" | \"Metadata\";\n\n/** Optional parameters. */\nexport interface MetricsListOptionalParams extends coreClient.OperationOptions {\n  /** The timespan of the query. It is a string with the following format 'startDateTime_ISO/endDateTime_ISO'. */\n  timespan?: string;\n  /** The interval (i.e. timegrain) of the query. */\n  interval?: string;\n  /** The names of the metrics (comma separated) to retrieve. Special case: If a metricname itself has a comma in it then use %2 to indicate it. Eg: 'Metric,Name1' should be **'Metric%2Name1'** */\n  metricnames?: string;\n  /** The list of aggregation types (comma separated) to retrieve. */\n  aggregation?: string;\n  /**\n   * The maximum number of records to retrieve.\n   * Valid only if $filter is specified.\n   * Defaults to 10.\n   */\n  top?: number;\n  /**\n   * The aggregation to use for sorting results and the direction of the sort.\n   * Only one order can be specified.\n   * Examples: sum asc.\n   */\n  orderby?: string;\n  /** The **$filter** is used to reduce the set of metric data returned. Example: Metric contains metadata A, B and C. - Return all time series of C where A = a1 and B = b1 or b2 **$filter=A eq 'a1' and B eq 'b1' or B eq 'b2' and C eq '*'** - Invalid variant: **$filter=A eq 'a1' and B eq 'b1' and C eq '*' or B = 'b2'** This is invalid because the logical or operator cannot separate two different metadata names. - Return all time series where A = a1, B = b1 and C = c1: **$filter=A eq 'a1' and B eq 'b1' and C eq 'c1'** - Return all time series where A = a1 **$filter=A eq 'a1' and B eq '*' and C eq '*'**. Special case: When dimension name or dimension value uses round brackets. Eg: When dimension name is **dim (test) 1** Instead of using $filter= \"dim (test) 1 eq '*' \" use **$filter= \"dim %2528test%2529 1 eq '*' \"** When dimension name is **dim (test) 3** and dimension value is **dim3 (test) val** Instead of using $filter= \"dim (test) 3 eq 'dim3 (test) val' \" use **$filter= \"dim %2528test%2529 3 eq 'dim3 %2528test%2529 val' \"** */\n  filter?: string;\n  /** Reduces the set of data collected. The syntax allowed depends on the operation. See the operation's description for details. */\n  resultType?: ResultType;\n  /** Metric namespace to query metric definitions for. */\n  metricnamespace?: string;\n}\n\n/** Contains response data for the list operation. */\nexport type MetricsListResponse = Response;\n\n/** Optional parameters. */\nexport interface MonitorManagementClientOptionalParams\n  extends coreClient.ServiceClientOptions {\n  /** server parameter */\n  $host?: string;\n  /** Overrides client endpoint. */\n  endpoint?: string;\n}\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreClient from \"@azure/core-client\";\n\nexport const Response: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Response\",\n    modelProperties: {\n      cost: {\n        constraints: {\n          InclusiveMinimum: 0\n        },\n        serializedName: \"cost\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      timespan: {\n        serializedName: \"timespan\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      interval: {\n        serializedName: \"interval\",\n        type: {\n          name: \"TimeSpan\"\n        }\n      },\n      namespace: {\n        serializedName: \"namespace\",\n        type: {\n          name: \"String\"\n        }\n      },\n      resourceregion: {\n        serializedName: \"resourceregion\",\n        type: {\n          name: \"String\"\n        }\n      },\n      value: {\n        serializedName: \"value\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Metric\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const Metric: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Metric\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"Composite\",\n          className: \"LocalizableString\"\n        }\n      },\n      displayDescription: {\n        serializedName: \"displayDescription\",\n        type: {\n          name: \"String\"\n        }\n      },\n      errorCode: {\n        serializedName: \"errorCode\",\n        type: {\n          name: \"String\"\n        }\n      },\n      errorMessage: {\n        serializedName: \"errorMessage\",\n        type: {\n          name: \"String\"\n        }\n      },\n      unit: {\n        serializedName: \"unit\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      timeseries: {\n        serializedName: \"timeseries\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"TimeSeriesElement\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const LocalizableString: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"LocalizableString\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      localizedValue: {\n        serializedName: \"localizedValue\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const TimeSeriesElement: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"TimeSeriesElement\",\n    modelProperties: {\n      metadatavalues: {\n        serializedName: \"metadatavalues\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"MetadataValue\"\n            }\n          }\n        }\n      },\n      data: {\n        serializedName: \"data\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"MetricValue\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const MetadataValue: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"MetadataValue\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"Composite\",\n          className: \"LocalizableString\"\n        }\n      },\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const MetricValue: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"MetricValue\",\n    modelProperties: {\n      timeStamp: {\n        serializedName: \"timeStamp\",\n        required: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      average: {\n        serializedName: \"average\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      minimum: {\n        serializedName: \"minimum\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      maximum: {\n        serializedName: \"maximum\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      total: {\n        serializedName: \"total\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      count: {\n        serializedName: \"count\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const ErrorResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ErrorResponse\",\n    modelProperties: {\n      code: {\n        serializedName: \"code\",\n        type: {\n          name: \"String\"\n        }\n      },\n      message: {\n        serializedName: \"message\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport {\n  OperationParameter,\n  OperationURLParameter,\n  OperationQueryParameter\n} from \"@azure/core-client\";\n\nexport const accept: OperationParameter = {\n  parameterPath: \"accept\",\n  mapper: {\n    defaultValue: \"application/json\",\n    isConstant: true,\n    serializedName: \"Accept\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const $host: OperationURLParameter = {\n  parameterPath: \"$host\",\n  mapper: {\n    serializedName: \"$host\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  },\n  skipEncoding: true\n};\n\nexport const resourceUri: OperationURLParameter = {\n  parameterPath: \"resourceUri\",\n  mapper: {\n    serializedName: \"resourceUri\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  },\n  skipEncoding: true\n};\n\nexport const timespan: OperationQueryParameter = {\n  parameterPath: [\"options\", \"timespan\"],\n  mapper: {\n    serializedName: \"timespan\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const interval: OperationQueryParameter = {\n  parameterPath: [\"options\", \"interval\"],\n  mapper: {\n    serializedName: \"interval\",\n    type: {\n      name: \"TimeSpan\"\n    }\n  }\n};\n\nexport const metricnames: OperationQueryParameter = {\n  parameterPath: [\"options\", \"metricnames\"],\n  mapper: {\n    serializedName: \"metricnames\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const aggregation: OperationQueryParameter = {\n  parameterPath: [\"options\", \"aggregation\"],\n  mapper: {\n    serializedName: \"aggregation\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const top: OperationQueryParameter = {\n  parameterPath: [\"options\", \"top\"],\n  mapper: {\n    serializedName: \"top\",\n    type: {\n      name: \"Number\"\n    }\n  }\n};\n\nexport const orderby: OperationQueryParameter = {\n  parameterPath: [\"options\", \"orderby\"],\n  mapper: {\n    serializedName: \"orderby\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const filter: OperationQueryParameter = {\n  parameterPath: [\"options\", \"filter\"],\n  mapper: {\n    serializedName: \"$filter\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const resultType: OperationQueryParameter = {\n  parameterPath: [\"options\", \"resultType\"],\n  mapper: {\n    serializedName: \"resultType\",\n    type: {\n      name: \"Enum\",\n      allowedValues: [\"Data\", \"Metadata\"]\n    }\n  }\n};\n\nexport const apiVersion: OperationQueryParameter = {\n  parameterPath: \"apiVersion\",\n  mapper: {\n    serializedName: \"api-version\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const metricnamespace: OperationQueryParameter = {\n  parameterPath: [\"options\", \"metricnamespace\"],\n  mapper: {\n    serializedName: \"metricnamespace\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { Metrics } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { MonitorManagementClientContext } from \"../monitorManagementClientContext\";\nimport { MetricsListOptionalParams, MetricsListResponse } from \"../models\";\n\n/** Class containing Metrics operations. */\nexport class MetricsImpl implements Metrics {\n  private readonly client: MonitorManagementClientContext;\n\n  /**\n   * Initialize a new instance of the class Metrics class.\n   * @param client Reference to the service client\n   */\n  constructor(client: MonitorManagementClientContext) {\n    this.client = client;\n  }\n\n  /**\n   * **Lists the metric values for a resource**.\n   * @param resourceUri The identifier of the resource.\n   * @param options The options parameters.\n   */\n  list(\n    resourceUri: string,\n    options?: MetricsListOptionalParams\n  ): Promise<MetricsListResponse> {\n    return this.client.sendOperationRequest(\n      { resourceUri, options },\n      listOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listOperationSpec: coreClient.OperationSpec = {\n  path: \"/{resourceUri}/providers/Microsoft.Insights/metrics\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Response\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [\n    Parameters.timespan,\n    Parameters.interval,\n    Parameters.metricnames,\n    Parameters.aggregation,\n    Parameters.top,\n    Parameters.orderby,\n    Parameters.filter,\n    Parameters.resultType,\n    Parameters.apiVersion,\n    Parameters.metricnamespace\n  ],\n  urlParameters: [Parameters.$host, Parameters.resourceUri],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreClient from \"@azure/core-client\";\nimport {\n  ApiVersion201801,\n  MonitorManagementClientOptionalParams\n} from \"./models\";\n\n/** @internal */\nexport class MonitorManagementClientContext extends coreClient.ServiceClient {\n  $host: string;\n  apiVersion: ApiVersion201801;\n\n  /**\n   * Initializes a new instance of the MonitorManagementClientContext class.\n   * @param apiVersion Api Version\n   * @param options The parameter options\n   */\n  constructor(\n    apiVersion: ApiVersion201801,\n    options?: MonitorManagementClientOptionalParams\n  ) {\n    if (apiVersion === undefined) {\n      throw new Error(\"'apiVersion' cannot be null\");\n    }\n\n    // Initializing default values for options\n    if (!options) {\n      options = {};\n    }\n    const defaults: MonitorManagementClientOptionalParams = {\n      requestContentType: \"application/json; charset=utf-8\"\n    };\n\n    const packageDetails = `azsdk-js-monitor-metrics/1.1.1`;\n    const userAgentPrefix =\n      options.userAgentOptions && options.userAgentOptions.userAgentPrefix\n        ? `${options.userAgentOptions.userAgentPrefix} ${packageDetails}`\n        : `${packageDetails}`;\n\n    const optionsWithDefaults = {\n      ...defaults,\n      ...options,\n      userAgentOptions: {\n        userAgentPrefix\n      },\n      baseUri: options.endpoint || \"https://management.azure.com\"\n    };\n    super(optionsWithDefaults);\n    // Parameter assignments\n    this.apiVersion = apiVersion;\n\n    // Assigning values to Constant parameters\n    this.$host = options.$host || \"https://management.azure.com\";\n  }\n}\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { MetricsImpl } from \"./operations\";\nimport { Metrics } from \"./operationsInterfaces\";\nimport { MonitorManagementClientContext } from \"./monitorManagementClientContext\";\nimport {\n  MonitorManagementClientOptionalParams,\n  ApiVersion201801\n} from \"./models\";\n\n/** @internal */\nexport class MonitorManagementClient extends MonitorManagementClientContext {\n  /**\n   * Initializes a new instance of the MonitorManagementClient class.\n   * @param apiVersion Api Version\n   * @param options The parameter options\n   */\n  constructor(\n    apiVersion: ApiVersion201801,\n    options?: MonitorManagementClientOptionalParams\n  ) {\n    super(apiVersion, options);\n    this.metrics = new MetricsImpl(this);\n  }\n\n  metrics: Metrics;\n}\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreClient from \"@azure/core-client\";\n\n/** Represents collection of metric definitions. */\nexport interface MetricDefinitionCollection {\n  /** the values for the metric definitions. */\n  value: MetricDefinition[];\n}\n\n/** Metric definition class specifies the metadata for a metric. */\nexport interface MetricDefinition {\n  /** Flag to indicate whether the dimension is required. */\n  isDimensionRequired?: boolean;\n  /** the resource identifier of the resource that emitted the metric. */\n  resourceId?: string;\n  /** the namespace the metric belongs to. */\n  namespace?: string;\n  /** the name and the display name of the metric, i.e. it is a localizable string. */\n  name?: LocalizableString;\n  /** Detailed description of this metric. */\n  displayDescription?: string;\n  /** Custom category name for this metric. */\n  category?: string;\n  /** The class of the metric. */\n  metricClass?: MetricClass;\n  /** The unit of the metric. */\n  unit?: MetricUnit;\n  /** the primary aggregation type value defining how to use the values for display. */\n  primaryAggregationType?: AggregationType;\n  /** the collection of what aggregation types are supported. */\n  supportedAggregationTypes?: AggregationType[];\n  /** the collection of what aggregation intervals are available to be queried. */\n  metricAvailabilities?: MetricAvailability[];\n  /** the resource identifier of the metric definition. */\n  id?: string;\n  /** the name and the display name of the dimension, i.e. it is a localizable string. */\n  dimensions?: LocalizableString[];\n}\n\n/** The localizable string class. */\nexport interface LocalizableString {\n  /** the invariant value. */\n  value: string;\n  /** the locale specific value. */\n  localizedValue?: string;\n}\n\n/** Metric availability specifies the time grain (aggregation interval or frequency) and the retention period for that time grain. */\nexport interface MetricAvailability {\n  /** the time grain specifies the aggregation interval for the metric. Expressed as a duration 'PT1M', 'P1D', etc. */\n  timeGrain?: string;\n  /** the retention period for the metric at the specified timegrain.  Expressed as a duration 'PT1M', 'P1D', etc. */\n  retention?: string;\n}\n\n/** Describes the format of Error response. */\nexport interface ErrorResponse {\n  /** Error code */\n  code?: string;\n  /** Error message indicating why the operation failed. */\n  message?: string;\n}\n\n/** Known values of {@link ApiVersion201801} that the service accepts. */\nexport enum KnownApiVersion201801 {\n  /** Api Version '2018-01-01' */\n  TwoThousandEighteen0101 = \"2018-01-01\"\n}\n\n/**\n * Defines values for ApiVersion201801. \\\n * {@link KnownApiVersion201801} can be used interchangeably with ApiVersion201801,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **2018-01-01**: Api Version '2018-01-01'\n */\nexport type ApiVersion201801 = string;\n\n/** Known values of {@link MetricClass} that the service accepts. */\nexport enum KnownMetricClass {\n  Availability = \"Availability\",\n  Transactions = \"Transactions\",\n  Errors = \"Errors\",\n  Latency = \"Latency\",\n  Saturation = \"Saturation\"\n}\n\n/**\n * Defines values for MetricClass. \\\n * {@link KnownMetricClass} can be used interchangeably with MetricClass,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Availability** \\\n * **Transactions** \\\n * **Errors** \\\n * **Latency** \\\n * **Saturation**\n */\nexport type MetricClass = string;\n\n/** Known values of {@link MetricUnit} that the service accepts. */\nexport enum KnownMetricUnit {\n  Count = \"Count\",\n  Bytes = \"Bytes\",\n  Seconds = \"Seconds\",\n  CountPerSecond = \"CountPerSecond\",\n  BytesPerSecond = \"BytesPerSecond\",\n  Percent = \"Percent\",\n  MilliSeconds = \"MilliSeconds\",\n  ByteSeconds = \"ByteSeconds\",\n  Unspecified = \"Unspecified\",\n  Cores = \"Cores\",\n  MilliCores = \"MilliCores\",\n  NanoCores = \"NanoCores\",\n  BitsPerSecond = \"BitsPerSecond\"\n}\n\n/**\n * Defines values for MetricUnit. \\\n * {@link KnownMetricUnit} can be used interchangeably with MetricUnit,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Count** \\\n * **Bytes** \\\n * **Seconds** \\\n * **CountPerSecond** \\\n * **BytesPerSecond** \\\n * **Percent** \\\n * **MilliSeconds** \\\n * **ByteSeconds** \\\n * **Unspecified** \\\n * **Cores** \\\n * **MilliCores** \\\n * **NanoCores** \\\n * **BitsPerSecond**\n */\nexport type MetricUnit = string;\n/** Defines values for AggregationType. */\nexport type AggregationType =\n  | \"None\"\n  | \"Average\"\n  | \"Count\"\n  | \"Minimum\"\n  | \"Maximum\"\n  | \"Total\";\n\n/** Optional parameters. */\nexport interface MetricDefinitionsListOptionalParams\n  extends coreClient.OperationOptions {\n  /** Metric namespace to query metric definitions for. */\n  metricnamespace?: string;\n}\n\n/** Contains response data for the list operation. */\nexport type MetricDefinitionsListResponse = MetricDefinitionCollection;\n\n/** Optional parameters. */\nexport interface MonitorManagementClientOptionalParams\n  extends coreClient.ServiceClientOptions {\n  /** server parameter */\n  $host?: string;\n  /** Overrides client endpoint. */\n  endpoint?: string;\n}\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreClient from \"@azure/core-client\";\n\nexport const MetricDefinitionCollection: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"MetricDefinitionCollection\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"MetricDefinition\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const MetricDefinition: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"MetricDefinition\",\n    modelProperties: {\n      isDimensionRequired: {\n        serializedName: \"isDimensionRequired\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      resourceId: {\n        serializedName: \"resourceId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      namespace: {\n        serializedName: \"namespace\",\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"Composite\",\n          className: \"LocalizableString\"\n        }\n      },\n      displayDescription: {\n        serializedName: \"displayDescription\",\n        type: {\n          name: \"String\"\n        }\n      },\n      category: {\n        serializedName: \"category\",\n        type: {\n          name: \"String\"\n        }\n      },\n      metricClass: {\n        serializedName: \"metricClass\",\n        type: {\n          name: \"String\"\n        }\n      },\n      unit: {\n        serializedName: \"unit\",\n        type: {\n          name: \"String\"\n        }\n      },\n      primaryAggregationType: {\n        serializedName: \"primaryAggregationType\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"None\",\n            \"Average\",\n            \"Count\",\n            \"Minimum\",\n            \"Maximum\",\n            \"Total\"\n          ]\n        }\n      },\n      supportedAggregationTypes: {\n        serializedName: \"supportedAggregationTypes\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Enum\",\n              allowedValues: [\n                \"None\",\n                \"Average\",\n                \"Count\",\n                \"Minimum\",\n                \"Maximum\",\n                \"Total\"\n              ]\n            }\n          }\n        }\n      },\n      metricAvailabilities: {\n        serializedName: \"metricAvailabilities\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"MetricAvailability\"\n            }\n          }\n        }\n      },\n      id: {\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      dimensions: {\n        serializedName: \"dimensions\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"LocalizableString\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const LocalizableString: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"LocalizableString\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      localizedValue: {\n        serializedName: \"localizedValue\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const MetricAvailability: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"MetricAvailability\",\n    modelProperties: {\n      timeGrain: {\n        serializedName: \"timeGrain\",\n        type: {\n          name: \"TimeSpan\"\n        }\n      },\n      retention: {\n        serializedName: \"retention\",\n        type: {\n          name: \"TimeSpan\"\n        }\n      }\n    }\n  }\n};\n\nexport const ErrorResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ErrorResponse\",\n    modelProperties: {\n      code: {\n        serializedName: \"code\",\n        type: {\n          name: \"String\"\n        }\n      },\n      message: {\n        serializedName: \"message\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport {\n  OperationParameter,\n  OperationURLParameter,\n  OperationQueryParameter\n} from \"@azure/core-client\";\n\nexport const accept: OperationParameter = {\n  parameterPath: \"accept\",\n  mapper: {\n    defaultValue: \"application/json\",\n    isConstant: true,\n    serializedName: \"Accept\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const $host: OperationURLParameter = {\n  parameterPath: \"$host\",\n  mapper: {\n    serializedName: \"$host\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  },\n  skipEncoding: true\n};\n\nexport const resourceUri: OperationURLParameter = {\n  parameterPath: \"resourceUri\",\n  mapper: {\n    serializedName: \"resourceUri\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  },\n  skipEncoding: true\n};\n\nexport const apiVersion: OperationQueryParameter = {\n  parameterPath: \"apiVersion\",\n  mapper: {\n    serializedName: \"api-version\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const metricnamespace: OperationQueryParameter = {\n  parameterPath: [\"options\", \"metricnamespace\"],\n  mapper: {\n    serializedName: \"metricnamespace\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { MetricDefinitions } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { MonitorManagementClientContext } from \"../monitorManagementClientContext\";\nimport {\n  MetricDefinitionsListOptionalParams,\n  MetricDefinitionsListResponse\n} from \"../models\";\n\n/** Class containing MetricDefinitions operations. */\nexport class MetricDefinitionsImpl implements MetricDefinitions {\n  private readonly client: MonitorManagementClientContext;\n\n  /**\n   * Initialize a new instance of the class MetricDefinitions class.\n   * @param client Reference to the service client\n   */\n  constructor(client: MonitorManagementClientContext) {\n    this.client = client;\n  }\n\n  /**\n   * Lists the metric definitions for the resource.\n   * @param resourceUri The identifier of the resource.\n   * @param options The options parameters.\n   */\n  list(\n    resourceUri: string,\n    options?: MetricDefinitionsListOptionalParams\n  ): Promise<MetricDefinitionsListResponse> {\n    return this.client.sendOperationRequest(\n      { resourceUri, options },\n      listOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listOperationSpec: coreClient.OperationSpec = {\n  path: \"/{resourceUri}/providers/Microsoft.Insights/metricDefinitions\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.MetricDefinitionCollection\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.metricnamespace],\n  urlParameters: [Parameters.$host, Parameters.resourceUri],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreClient from \"@azure/core-client\";\nimport {\n  ApiVersion201801,\n  MonitorManagementClientOptionalParams\n} from \"./models\";\n\n/** @internal */\nexport class MonitorManagementClientContext extends coreClient.ServiceClient {\n  $host: string;\n  apiVersion: ApiVersion201801;\n\n  /**\n   * Initializes a new instance of the MonitorManagementClientContext class.\n   * @param apiVersion Api Version\n   * @param options The parameter options\n   */\n  constructor(\n    apiVersion: ApiVersion201801,\n    options?: MonitorManagementClientOptionalParams\n  ) {\n    if (apiVersion === undefined) {\n      throw new Error(\"'apiVersion' cannot be null\");\n    }\n\n    // Initializing default values for options\n    if (!options) {\n      options = {};\n    }\n    const defaults: MonitorManagementClientOptionalParams = {\n      requestContentType: \"application/json; charset=utf-8\"\n    };\n\n    const packageDetails = `azsdk-js-monitor-metrics-definitions/1.1.1`;\n    const userAgentPrefix =\n      options.userAgentOptions && options.userAgentOptions.userAgentPrefix\n        ? `${options.userAgentOptions.userAgentPrefix} ${packageDetails}`\n        : `${packageDetails}`;\n\n    const optionsWithDefaults = {\n      ...defaults,\n      ...options,\n      userAgentOptions: {\n        userAgentPrefix\n      },\n      baseUri: options.endpoint || \"https://management.azure.com\"\n    };\n    super(optionsWithDefaults);\n    // Parameter assignments\n    this.apiVersion = apiVersion;\n\n    // Assigning values to Constant parameters\n    this.$host = options.$host || \"https://management.azure.com\";\n  }\n}\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { MetricDefinitionsImpl } from \"./operations\";\nimport { MetricDefinitions } from \"./operationsInterfaces\";\nimport { MonitorManagementClientContext } from \"./monitorManagementClientContext\";\nimport {\n  MonitorManagementClientOptionalParams,\n  ApiVersion201801\n} from \"./models\";\n\n/** @internal */\nexport class MonitorManagementClient extends MonitorManagementClientContext {\n  /**\n   * Initializes a new instance of the MonitorManagementClient class.\n   * @param apiVersion Api Version\n   * @param options The parameter options\n   */\n  constructor(\n    apiVersion: ApiVersion201801,\n    options?: MonitorManagementClientOptionalParams\n  ) {\n    super(apiVersion, options);\n    this.metricDefinitions = new MetricDefinitionsImpl(this);\n  }\n\n  metricDefinitions: MetricDefinitions;\n}\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreClient from \"@azure/core-client\";\n\n/** Represents collection of metric namespaces. */\nexport interface MetricNamespaceCollection {\n  /** The values for the metric namespaces. */\n  value: MetricNamespace[];\n}\n\n/** Metric namespace class specifies the metadata for a metric namespace. */\nexport interface MetricNamespace {\n  /** The ID of the metric namespace. */\n  id?: string;\n  /** The type of the namespace. */\n  type?: string;\n  /** The escaped name of the namespace. */\n  name?: string;\n  /** Kind of namespace */\n  classification?: NamespaceClassification;\n  /** Properties which include the fully qualified namespace name. */\n  properties?: MetricNamespaceName;\n}\n\n/** The fully qualified metric namespace name. */\nexport interface MetricNamespaceName {\n  /** The metric namespace name. */\n  metricNamespaceName?: string;\n}\n\n/** Describes the format of Error response. */\nexport interface ErrorResponse {\n  /** Error code */\n  code?: string;\n  /** Error message indicating why the operation failed. */\n  message?: string;\n}\n\n/** Known values of {@link ApiVersion20171201Preview} that the service accepts. */\nexport enum KnownApiVersion20171201Preview {\n  /** Api Version '2017-12-01-preview' */\n  TwoThousandSeventeen1201Preview = \"2017-12-01-preview\"\n}\n\n/**\n * Defines values for ApiVersion20171201Preview. \\\n * {@link KnownApiVersion20171201Preview} can be used interchangeably with ApiVersion20171201Preview,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **2017-12-01-preview**: Api Version '2017-12-01-preview'\n */\nexport type ApiVersion20171201Preview = string;\n\n/** Known values of {@link NamespaceClassification} that the service accepts. */\nexport enum KnownNamespaceClassification {\n  Platform = \"Platform\",\n  Custom = \"Custom\",\n  Qos = \"Qos\"\n}\n\n/**\n * Defines values for NamespaceClassification. \\\n * {@link KnownNamespaceClassification} can be used interchangeably with NamespaceClassification,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Platform** \\\n * **Custom** \\\n * **Qos**\n */\nexport type NamespaceClassification = string;\n\n/** Optional parameters. */\nexport interface MetricNamespacesListOptionalParams\n  extends coreClient.OperationOptions {\n  /** The ISO 8601 conform Date start time from which to query for metric namespaces. */\n  startTime?: string;\n}\n\n/** Contains response data for the list operation. */\nexport type MetricNamespacesListResponse = MetricNamespaceCollection;\n\n/** Optional parameters. */\nexport interface MonitorManagementClientOptionalParams\n  extends coreClient.ServiceClientOptions {\n  /** server parameter */\n  $host?: string;\n  /** Overrides client endpoint. */\n  endpoint?: string;\n}\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreClient from \"@azure/core-client\";\n\nexport const MetricNamespaceCollection: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"MetricNamespaceCollection\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"MetricNamespace\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const MetricNamespace: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"MetricNamespace\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      classification: {\n        serializedName: \"classification\",\n        type: {\n          name: \"String\"\n        }\n      },\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"MetricNamespaceName\"\n        }\n      }\n    }\n  }\n};\n\nexport const MetricNamespaceName: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"MetricNamespaceName\",\n    modelProperties: {\n      metricNamespaceName: {\n        serializedName: \"metricNamespaceName\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ErrorResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ErrorResponse\",\n    modelProperties: {\n      code: {\n        serializedName: \"code\",\n        type: {\n          name: \"String\"\n        }\n      },\n      message: {\n        serializedName: \"message\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport {\n  OperationParameter,\n  OperationURLParameter,\n  OperationQueryParameter\n} from \"@azure/core-client\";\n\nexport const accept: OperationParameter = {\n  parameterPath: \"accept\",\n  mapper: {\n    defaultValue: \"application/json\",\n    isConstant: true,\n    serializedName: \"Accept\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const $host: OperationURLParameter = {\n  parameterPath: \"$host\",\n  mapper: {\n    serializedName: \"$host\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  },\n  skipEncoding: true\n};\n\nexport const resourceUri: OperationURLParameter = {\n  parameterPath: \"resourceUri\",\n  mapper: {\n    serializedName: \"resourceUri\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  },\n  skipEncoding: true\n};\n\nexport const apiVersion: OperationQueryParameter = {\n  parameterPath: \"apiVersion\",\n  mapper: {\n    serializedName: \"api-version\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const startTime: OperationQueryParameter = {\n  parameterPath: [\"options\", \"startTime\"],\n  mapper: {\n    serializedName: \"startTime\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { MetricNamespaces } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { MonitorManagementClientContext } from \"../monitorManagementClientContext\";\nimport {\n  MetricNamespacesListOptionalParams,\n  MetricNamespacesListResponse\n} from \"../models\";\n\n/** Class containing MetricNamespaces operations. */\nexport class MetricNamespacesImpl implements MetricNamespaces {\n  private readonly client: MonitorManagementClientContext;\n\n  /**\n   * Initialize a new instance of the class MetricNamespaces class.\n   * @param client Reference to the service client\n   */\n  constructor(client: MonitorManagementClientContext) {\n    this.client = client;\n  }\n\n  /**\n   * Lists the metric namespaces for the resource.\n   * @param resourceUri The identifier of the resource.\n   * @param options The options parameters.\n   */\n  list(\n    resourceUri: string,\n    options?: MetricNamespacesListOptionalParams\n  ): Promise<MetricNamespacesListResponse> {\n    return this.client.sendOperationRequest(\n      { resourceUri, options },\n      listOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listOperationSpec: coreClient.OperationSpec = {\n  path: \"/{resourceUri}/providers/microsoft.insights/metricNamespaces\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.MetricNamespaceCollection\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.startTime],\n  urlParameters: [Parameters.$host, Parameters.resourceUri],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreClient from \"@azure/core-client\";\nimport {\n  ApiVersion20171201Preview,\n  MonitorManagementClientOptionalParams\n} from \"./models\";\n\n/** @internal */\nexport class MonitorManagementClientContext extends coreClient.ServiceClient {\n  $host: string;\n  apiVersion: ApiVersion20171201Preview;\n\n  /**\n   * Initializes a new instance of the MonitorManagementClientContext class.\n   * @param apiVersion Api Version\n   * @param options The parameter options\n   */\n  constructor(\n    apiVersion: ApiVersion20171201Preview,\n    options?: MonitorManagementClientOptionalParams\n  ) {\n    if (apiVersion === undefined) {\n      throw new Error(\"'apiVersion' cannot be null\");\n    }\n\n    // Initializing default values for options\n    if (!options) {\n      options = {};\n    }\n    const defaults: MonitorManagementClientOptionalParams = {\n      requestContentType: \"application/json; charset=utf-8\"\n    };\n\n    const packageDetails = `azsdk-js-monitor-metrics-namespaces/1.1.1`;\n    const userAgentPrefix =\n      options.userAgentOptions && options.userAgentOptions.userAgentPrefix\n        ? `${options.userAgentOptions.userAgentPrefix} ${packageDetails}`\n        : `${packageDetails}`;\n\n    const optionsWithDefaults = {\n      ...defaults,\n      ...options,\n      userAgentOptions: {\n        userAgentPrefix\n      },\n      baseUri: options.endpoint || \"https://management.azure.com\"\n    };\n    super(optionsWithDefaults);\n    // Parameter assignments\n    this.apiVersion = apiVersion;\n\n    // Assigning values to Constant parameters\n    this.$host = options.$host || \"https://management.azure.com\";\n  }\n}\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { MetricNamespacesImpl } from \"./operations\";\nimport { MetricNamespaces } from \"./operationsInterfaces\";\nimport { MonitorManagementClientContext } from \"./monitorManagementClientContext\";\nimport {\n  MonitorManagementClientOptionalParams,\n  ApiVersion20171201Preview\n} from \"./models\";\n\n/** @internal */\nexport class MonitorManagementClient extends MonitorManagementClientContext {\n  /**\n   * Initializes a new instance of the MonitorManagementClient class.\n   * @param apiVersion Api Version\n   * @param options The parameter options\n   */\n  constructor(\n    apiVersion: ApiVersion20171201Preview,\n    options?: MonitorManagementClientOptionalParams\n  ) {\n    super(apiVersion, options);\n    this.metricNamespaces = new MetricNamespacesImpl(this);\n  }\n\n  metricNamespaces: MetricNamespaces;\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { TokenCredential } from \"@azure/core-auth\";\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { CommonClientOptions } from \"@azure/core-client\";\nimport { tracingClient } from \"./tracing\";\n\nimport {\n  ListMetricDefinitionsOptions,\n  ListMetricNamespacesOptions,\n  MetricDefinition,\n  MetricNamespace,\n  MetricsQueryOptions,\n  MetricsQueryResult,\n} from \"./models/publicMetricsModels\";\n\nimport {\n  MonitorManagementClient as GeneratedMetricsClient,\n  KnownApiVersion201801 as MetricsApiVersion,\n} from \"./generated/metrics/src\";\nimport {\n  MonitorManagementClient as GeneratedMetricsDefinitionsClient,\n  KnownApiVersion201801 as MetricDefinitionsApiVersion,\n} from \"./generated/metricsdefinitions/src\";\nimport {\n  MonitorManagementClient as GeneratedMetricsNamespacesClient,\n  KnownApiVersion20171201Preview as MetricNamespacesApiVersion,\n  MetricNamespacesListOptionalParams,\n} from \"./generated/metricsnamespaces/src\";\nimport {\n  convertRequestForMetrics,\n  convertRequestOptionsForMetricsDefinitions,\n  convertResponseForMetricNamespaces,\n  convertResponseForMetrics,\n  convertResponseForMetricsDefinitions,\n} from \"./internal/modelConverters\";\nimport { SDK_VERSION } from \"./constants\";\nconst defaultMetricsScope = \"https://management.azure.com/.default\";\n\n/**\n * Options for the MetricsQueryClient.\n */\nexport interface MetricsQueryClientOptions extends CommonClientOptions {\n  /** Overrides client endpoint. */\n  endpoint?: string;\n}\n\n/**\n * A client that can query metrics, get metric definitions and get metric namespaces.\n */\nexport class MetricsQueryClient {\n  private _metricsClient: GeneratedMetricsClient;\n  private _definitionsClient: GeneratedMetricsDefinitionsClient;\n  private _namespacesClient: GeneratedMetricsNamespacesClient;\n\n  /**\n   * Creates a MetricsQueryClient.\n   * @param tokenCredential - A TokenCredential that has rights to query metrics on resources.\n   * @param options - Options for the client like controlling request retries.\n   */\n  constructor(tokenCredential: TokenCredential, options?: MetricsQueryClientOptions) {\n    let scope;\n    if (options?.endpoint) {\n      scope = `${options?.endpoint}/.default`;\n    }\n    const credentialOptions = {\n      credentialScopes: scope,\n    };\n    const packageDetails = `azsdk-js-monitor-query/${SDK_VERSION}`;\n    const userAgentPrefix =\n      options?.userAgentOptions && options?.userAgentOptions.userAgentPrefix\n        ? `${options?.userAgentOptions.userAgentPrefix} ${packageDetails}`\n        : `${packageDetails}`;\n    const serviceClientOptions = {\n      ...options,\n      $host: options?.endpoint,\n      endpoint: options?.endpoint,\n      credentialScopes: credentialOptions?.credentialScopes ?? defaultMetricsScope,\n      credential: tokenCredential,\n      userAgentOptions: {\n        userAgentPrefix,\n      },\n    };\n\n    this._metricsClient = new GeneratedMetricsClient(\n      MetricsApiVersion.TwoThousandEighteen0101,\n      serviceClientOptions\n    );\n\n    this._definitionsClient = new GeneratedMetricsDefinitionsClient(\n      MetricDefinitionsApiVersion.TwoThousandEighteen0101,\n      serviceClientOptions\n    );\n\n    this._namespacesClient = new GeneratedMetricsNamespacesClient(\n      MetricNamespacesApiVersion.TwoThousandSeventeen1201Preview,\n      serviceClientOptions\n    );\n  }\n\n  /**\n   * Query metrics, given a resource URI\n   * @param resourceUri - The resource URI to query.\n   * @param metricNames - The names of the metrics to retrieve.\n   * @param options - Options for querying metrics.\n   * @returns A response containing metrics.\n   */\n  async queryResource(\n    resourceUri: string,\n    metricNames: string[],\n    options: MetricsQueryOptions = {} // eslint-disable-line @azure/azure-sdk/ts-naming-options\n  ): Promise<MetricsQueryResult> {\n    return tracingClient.withSpan(\n      \"MetricsQueryClient.queryResource\",\n      options,\n      async (updatedOptions) => {\n        const response = await this._metricsClient.metrics.list(\n          resourceUri,\n          convertRequestForMetrics(metricNames, updatedOptions)\n        );\n\n        return convertResponseForMetrics(response);\n      }\n    );\n  }\n\n  /**\n   * List alert segments for Metric Definitions\n   */\n  private async *listSegmentOfMetricDefinitions(\n    resourceUri: string,\n    options: ListMetricDefinitionsOptions = {}\n  ): AsyncIterableIterator<Array<MetricDefinition>> {\n    const segmentResponse = await tracingClient.withSpan(\n      \"MetricsQueryClient.listSegmentOfMetricDefinitions\",\n      options,\n      async (updatedOptions) =>\n        this._definitionsClient.metricDefinitions.list(\n          resourceUri,\n          convertRequestOptionsForMetricsDefinitions(updatedOptions)\n        )\n    );\n    yield convertResponseForMetricsDefinitions(segmentResponse.value);\n  }\n\n  /**\n   * List items for Metric Definitions\n   */\n  private async *listItemsOfMetricDefinitions(\n    resourceUri: string,\n    options?: ListMetricDefinitionsOptions\n  ): AsyncIterableIterator<MetricDefinition> {\n    for await (const segment of this.listSegmentOfMetricDefinitions(resourceUri, options)) {\n      if (segment) {\n        yield* segment;\n      }\n    }\n  }\n\n  /**\n   *   /**\n   *\n   * Returns an async iterable iterator to list metric definitions.\n   *\n   * Example using `for await` syntax:\n   *\n   * ```js\n   * const metricsQueryClient = new MetricsQueryClient(tokenCredential);\n   * const metricDefinitions = client.listMetricDefinitions(resourceUri, options);\n   * let i = 1;\n   * for await (const metricDefinition of metricDefinitions) {\n   *   console.log(`metricDefinition ${i++}:`);\n   *   console.log(metricDefinition);\n   * }\n   * ```\n   *\n   * Example using `iter.next()`:\n   *\n   * ```js\n   * let iter = client.listMetricDefinitions(resourceUri, options);\n   * let result = await iter.next();\n   * while (!result.done) {\n   *   console.log(` metricDefinitions - ${result.value.id}, ${result.value.name}`);\n   *   result = await iter.next();\n   * }\n   * ```\n   *\n   * Get a list of metric definitions, given a resource URI.\n   * @param resourceUri - The resource URI to get metric definitions for.\n   * @param options - Options for getting metric definitions.\n   * @returns Metric definitions for a given resource URI.\n   */\n  listMetricDefinitions(\n    resourceUri: string,\n    options?: ListMetricDefinitionsOptions\n  ): PagedAsyncIterableIterator<MetricDefinition> {\n    const iter = this.listItemsOfMetricDefinitions(resourceUri, options);\n    return {\n      /**\n       * The next method, part of the iteration protocol\n       */\n      next() {\n        return iter.next();\n      },\n      /**\n       * The connection to the async iterator, part of the iteration protocol\n       */\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      /**\n       * @returns an AsyncIterableIterator that works a page at a time\n       */\n      byPage: () => {\n        return this.listSegmentOfMetricDefinitions(resourceUri, options);\n      },\n    };\n  }\n\n  /**\n   * List alert segments for Metric Namespaces\n   */\n  private async *listSegmentOfMetricNamespaces(\n    resourceUri: string,\n    options: ListMetricNamespacesOptions = {}\n  ): AsyncIterableIterator<Array<MetricNamespace>> {\n    const segmentResponse = await tracingClient.withSpan(\n      \"MetricsQueryClient.listSegmentOfMetricNamespaces\",\n      options,\n      async (updatedOptions: MetricNamespacesListOptionalParams | undefined) =>\n        this._namespacesClient.metricNamespaces.list(resourceUri, updatedOptions)\n    );\n    yield convertResponseForMetricNamespaces(segmentResponse.value);\n  }\n  /**\n   * List items for Metric Namespaces\n   */\n  private async *listItemsOfMetricNamespaces(\n    resourceUri: string,\n    options?: ListMetricNamespacesOptions\n  ): AsyncIterableIterator<MetricNamespace> {\n    for await (const segment of this.listSegmentOfMetricNamespaces(resourceUri, options)) {\n      if (segment) {\n        yield* segment;\n      }\n    }\n  }\n  /**\n   *\n   * Returns an async iterable iterator to list metric namespaces.\n   *\n   * Example using `for await` syntax:\n   *\n   * ```js\n   * const metricsQueryClient = new MetricsQueryClient(tokenCredential);\n   * const metricNamespaces = client.listMetricNamespaces(resourceUri, options);\n   * let i = 1;\n   * for await (const metricNamespace of metricNamespaces) {\n   *   console.log(`metricNamespace ${i++}:`);\n   *   console.log(metricNamespace);\n   * }\n   * ```\n   *\n   * Example using `iter.next()`:\n   *\n   * ```js\n   * let iter = client.listMetricNamespaces(resourceUri, options);\n   * let result = await iter.next();\n   * while (!result.done) {\n   *   console.log(` metricNamespace - ${result.value.id}, ${result.value.name}`);\n   *   result = await iter.next();\n   * }\n   * ```\n   * Get a list of metric namespaces, given a resource URI.\n   * @param resourceUri - The resource URI to get metric namespaces for.\n   * @param options - Options for getting metric namespaces.\n   * @returns Metric namespaces for a given resource URI.\n   */\n  listMetricNamespaces(\n    resourceUri: string,\n    options?: ListMetricNamespacesOptions\n  ): PagedAsyncIterableIterator<MetricNamespace> {\n    const iter = this.listItemsOfMetricNamespaces(resourceUri, options);\n    return {\n      /**\n       * The next method, part of the iteration protocol\n       */\n      next() {\n        return iter.next();\n      },\n      /**\n       * The connection to the async iterator, part of the iteration protocol\n       */\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      /**\n       * @returns an AsyncIterableIterator that works a page at a time\n       */\n      byPage: () => {\n        return this.listSegmentOfMetricNamespaces(resourceUri, options);\n      },\n    };\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * Aliases for some common ISO8601 durations.\n */\nexport const Durations = {\n  /** Alias for ISO8601 value 'P7D' */\n  sevenDays: \"P7D\",\n  /** Alias for ISO8601 value 'P3D' */\n  threeDays: \"P3D\",\n  /** Alias for ISO8601 value 'P2D' */\n  twoDays: \"P2D\",\n  /** Alias for ISO8601 value 'P1D' */\n  oneDay: \"P1D\",\n  /** Alias for ISO8601 value 'PT1H' */\n  oneHour: \"PT1H\",\n  /** Alias for ISO8601 value 'PT4H' */\n  fourHours: \"PT4H\",\n  /** Alias for ISO8601 value 'PT24H' */\n  twentyFourHours: \"PT24H\",\n  /** Alias for ISO8601 value 'PT48H' */\n  fortyEightHours: \"PT48H\",\n  /**\n   * @deprecated Alias name `fourtyEightHours` for ISO8601 value 'PT48H' is deprecated\n   */\n  fourtyEightHours: \"PT48H\",\n  /** Alias for ISO8601 value 'PT30M' */\n  thirtyMinutes: \"PT30M\",\n  /** Alias for ISO8601 value 'PT5M' */\n  fiveMinutes: \"PT5M\",\n} as const;\n"],"names":["ErrorResponse","accept","$host","timespan","QueryBodyMapper","BatchRequestMapper","getOperationSpec","serializer","coreClient","Mappers","Mappers.QueryResults","Mappers.ErrorResponse","Parameters.query","Parameters.timespan","Parameters.$host","Parameters.workspaceId","Parameters.accept","Parameters.body","Parameters.contentType","Parameters.prefer","Parameters.resourceId","Mappers.BatchResponse","Parameters.body1","Mappers.MetadataResults","LogsQueryResultStatus","__rest","createTracingClient","KnownApiVersion201801","KnownMetricUnit","LocalizableString","resourceUri","apiVersion","metricnamespace","listOperationSpec","Mappers.Response","Parameters.interval","Parameters.metricnames","Parameters.aggregation","Parameters.top","Parameters.orderby","Parameters.filter","Parameters.resultType","Parameters.apiVersion","Parameters.metricnamespace","Parameters.resourceUri","MonitorManagementClientContext","MonitorManagementClient","Mappers.MetricDefinitionCollection","Mappers.MetricNamespaceCollection","Parameters.startTime","GeneratedMetricsClient","MetricsApiVersion","GeneratedMetricsDefinitionsClient","MetricDefinitionsApiVersion","GeneratedMetricsNamespacesClient","MetricNamespacesApiVersion","__await","__asyncValues","__asyncDelegator"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;AAMG;AAII,MAAM,YAAY,GAA+B;AACtD,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,cAAc;AACzB,QAAA,eAAe,EAAE;AACf,YAAA,MAAM,EAAE;AACN,gBAAA,cAAc,EAAE,QAAQ;AACxB,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,WAAW;AACjB,4BAAA,SAAS,EAAE,OAAO;AACnB,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA;AACD,YAAA,UAAU,EAAE;AACV,gBAAA,cAAc,EAAE,YAAY;AAC5B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,YAAY;oBAClB,KAAK,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;AACjC,iBAAA;AACF,aAAA;AACD,YAAA,MAAM,EAAE;AACN,gBAAA,cAAc,EAAE,QAAQ;AACxB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,YAAY;oBAClB,KAAK,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;AACjC,iBAAA;AACF,aAAA;AACD,YAAA,KAAK,EAAE;AACL,gBAAA,cAAc,EAAE,OAAO;AACvB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,WAAW;AACjB,oBAAA,SAAS,EAAE,WAAW;AACvB,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,KAAK,GAA+B;AAC/C,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,OAAO;AAClB,QAAA,eAAe,EAAE;AACf,YAAA,IAAI,EAAE;AACJ,gBAAA,cAAc,EAAE,MAAM;AACtB,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,OAAO,EAAE;AACP,gBAAA,cAAc,EAAE,SAAS;AACzB,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,WAAW;AACjB,4BAAA,SAAS,EAAE,QAAQ;AACpB,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA;AACD,YAAA,IAAI,EAAE;AACJ,gBAAA,cAAc,EAAE,MAAM;AACtB,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,UAAU;AAChB,4BAAA,OAAO,EAAE;AACP,gCAAA,IAAI,EAAE;AACJ,oCAAA,IAAI,EAAE,YAAY;oCAClB,KAAK,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;AACjC,iCAAA;AACF,6BAAA;AACF,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,MAAM,GAA+B;AAChD,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,QAAQ;AACnB,QAAA,eAAe,EAAE;AACf,YAAA,IAAI,EAAE;AACJ,gBAAA,cAAc,EAAE,MAAM;AACtB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,IAAI,EAAE;AACJ,gBAAA,cAAc,EAAE,MAAM;AACtB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,SAAS,GAA+B;AACnD,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,WAAW;AACtB,QAAA,eAAe,EAAE;AACf,YAAA,IAAI,EAAE;AACJ,gBAAA,cAAc,EAAE,MAAM;AACtB,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,OAAO,EAAE;AACP,gBAAA,cAAc,EAAE,SAAS;AACzB,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,OAAO,EAAE;AACP,gBAAA,cAAc,EAAE,SAAS;AACzB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,WAAW;AACjB,4BAAA,SAAS,EAAE,aAAa;AACzB,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA;AACD,YAAA,UAAU,EAAE;AACV,gBAAA,cAAc,EAAE,YAAY;AAC5B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,WAAW;AACjB,oBAAA,SAAS,EAAE,WAAW;AACvB,iBAAA;AACF,aAAA;AACD,YAAA,oBAAoB,EAAE;AACpB,gBAAA,cAAc,EAAE,sBAAsB;AACtC,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,YAAY;oBAClB,KAAK,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;AACjC,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,WAAW,GAA+B;AACrD,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,aAAa;AACxB,QAAA,eAAe,EAAE;AACf,YAAA,IAAI,EAAE;AACJ,gBAAA,cAAc,EAAE,MAAM;AACtB,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,OAAO,EAAE;AACP,gBAAA,cAAc,EAAE,SAAS;AACzB,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,MAAM,EAAE;AACN,gBAAA,cAAc,EAAE,QAAQ;AACxB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,KAAK,EAAE;AACL,gBAAA,cAAc,EAAE,OAAO;AACvB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,SAAS,EAAE;AACT,gBAAA,cAAc,EAAE,WAAW;AAC3B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,QAAQ;AACf,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA;AACD,YAAA,oBAAoB,EAAE;AACpB,gBAAA,cAAc,EAAE,sBAAsB;AACtC,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,YAAY;oBAClB,KAAK,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;AACjC,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAMA,eAAa,GAA+B;AACvD,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,eAAe;AAC1B,QAAA,eAAe,EAAE;AACf,YAAA,KAAK,EAAE;AACL,gBAAA,cAAc,EAAE,OAAO;AACvB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,WAAW;AACjB,oBAAA,SAAS,EAAE,WAAW;AACvB,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,SAAS,GAA+B;AACnD,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,WAAW;AACtB,QAAA,eAAe,EAAE;AACf,YAAA,KAAK,EAAE;AACL,gBAAA,cAAc,EAAE,OAAO;AACvB,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,QAAQ,EAAE;AACR,gBAAA,cAAc,EAAE,UAAU;AAC1B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,UAAU,EAAE;AACV,gBAAA,cAAc,EAAE,YAAY;AAC5B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,QAAQ;AACf,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,eAAe,GAA+B;AACzD,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,iBAAiB;AAC5B,QAAA,eAAe,EAAE;AACf,YAAA,UAAU,EAAE;AACV,gBAAA,WAAW,EAAE;AACX,oBAAA,WAAW,EAAE,IAAI;AAClB,iBAAA;AACD,gBAAA,cAAc,EAAE,YAAY;AAC5B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,WAAW;AACjB,4BAAA,SAAS,EAAE,kBAAkB;AAC9B,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA;AACD,YAAA,aAAa,EAAE;AACb,gBAAA,WAAW,EAAE;AACX,oBAAA,WAAW,EAAE,IAAI;AAClB,iBAAA;AACD,gBAAA,cAAc,EAAE,eAAe;AAC/B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,WAAW;AACjB,4BAAA,SAAS,EAAE,sBAAsB;AAClC,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA;AACD,YAAA,SAAS,EAAE;AACT,gBAAA,WAAW,EAAE;AACX,oBAAA,WAAW,EAAE,IAAI;AAClB,iBAAA;AACD,gBAAA,cAAc,EAAE,WAAW;AAC3B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,WAAW;AACjB,4BAAA,SAAS,EAAE,kBAAkB;AAC9B,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA;AACD,YAAA,MAAM,EAAE;AACN,gBAAA,WAAW,EAAE;AACX,oBAAA,WAAW,EAAE,IAAI;AAClB,iBAAA;AACD,gBAAA,cAAc,EAAE,QAAQ;AACxB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,WAAW;AACjB,4BAAA,SAAS,EAAE,eAAe;AAC3B,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA;AACD,YAAA,SAAS,EAAE;AACT,gBAAA,WAAW,EAAE;AACX,oBAAA,WAAW,EAAE,IAAI;AAClB,iBAAA;AACD,gBAAA,cAAc,EAAE,WAAW;AAC3B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,WAAW;AACjB,4BAAA,SAAS,EAAE,kBAAkB;AAC9B,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA;AACD,YAAA,OAAO,EAAE;AACP,gBAAA,WAAW,EAAE;AACX,oBAAA,WAAW,EAAE,IAAI;AAClB,iBAAA;AACD,gBAAA,cAAc,EAAE,SAAS;AACzB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,WAAW;AACjB,4BAAA,SAAS,EAAE,eAAe;AAC3B,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA;AACD,YAAA,YAAY,EAAE;AACZ,gBAAA,WAAW,EAAE;AACX,oBAAA,WAAW,EAAE,IAAI;AAClB,iBAAA;AACD,gBAAA,cAAc,EAAE,cAAc;AAC9B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,WAAW;AACjB,4BAAA,SAAS,EAAE,qBAAqB;AACjC,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA;AACD,YAAA,UAAU,EAAE;AACV,gBAAA,WAAW,EAAE;AACX,oBAAA,WAAW,EAAE,IAAI;AAClB,iBAAA;AACD,gBAAA,cAAc,EAAE,YAAY;AAC5B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,WAAW;AACjB,4BAAA,SAAS,EAAE,mBAAmB;AAC/B,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA;AACD,YAAA,SAAS,EAAE;AACT,gBAAA,WAAW,EAAE;AACX,oBAAA,WAAW,EAAE,IAAI;AAClB,iBAAA;AACD,gBAAA,cAAc,EAAE,WAAW;AAC3B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,KAAK;AACZ,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA;AACD,YAAA,WAAW,EAAE;AACX,gBAAA,WAAW,EAAE;AACX,oBAAA,WAAW,EAAE,IAAI;AAClB,iBAAA;AACD,gBAAA,cAAc,EAAE,aAAa;AAC7B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,WAAW;AACjB,4BAAA,SAAS,EAAE,qBAAqB;AACjC,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,gBAAgB,GAA+B;AAC1D,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,kBAAkB;AAC7B,QAAA,eAAe,EAAE;AACf,YAAA,EAAE,EAAE;AACF,gBAAA,cAAc,EAAE,IAAI;AACpB,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,WAAW,EAAE;AACX,gBAAA,cAAc,EAAE,aAAa;AAC7B,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,WAAW,EAAE;AACX,gBAAA,cAAc,EAAE,aAAa;AAC7B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,OAAO,EAAE;AACP,gBAAA,cAAc,EAAE,SAAS;AACzB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,WAAW;AACjB,oBAAA,SAAS,EAAE,yBAAyB;AACrC,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,uBAAuB,GAA+B;AACjE,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,yBAAyB;AACpC,QAAA,eAAe,EAAE;AACf,YAAA,MAAM,EAAE;AACN,gBAAA,cAAc,EAAE,QAAQ;AACxB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,QAAQ;AACf,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA;AACD,YAAA,SAAS,EAAE;AACT,gBAAA,cAAc,EAAE,WAAW;AAC3B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,QAAQ;AACf,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA;AACD,YAAA,aAAa,EAAE;AACb,gBAAA,cAAc,EAAE,eAAe;AAC/B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,QAAQ;AACf,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA;AACD,YAAA,OAAO,EAAE;AACP,gBAAA,cAAc,EAAE,SAAS;AACzB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,QAAQ;AACf,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA;AACD,YAAA,SAAS,EAAE;AACT,gBAAA,cAAc,EAAE,WAAW;AAC3B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,QAAQ;AACf,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,oBAAoB,GAA+B;AAC9D,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,sBAAsB;AACjC,QAAA,eAAe,EAAE;AACf,YAAA,EAAE,EAAE;AACF,gBAAA,cAAc,EAAE,IAAI;AACpB,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,IAAI,EAAE;AACJ,gBAAA,cAAc,EAAE,MAAM;AACtB,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,WAAW,EAAE;AACX,gBAAA,cAAc,EAAE,aAAa;AAC7B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,WAAW,EAAE;AACX,gBAAA,cAAc,EAAE,aAAa;AAC7B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,MAAM,EAAE;AACN,gBAAA,cAAc,EAAE,QAAQ;AACxB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,QAAQ;AACf,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA;AACD,YAAA,IAAI,EAAE;AACJ,gBAAA,cAAc,EAAE,MAAM;AACtB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,YAAY;oBAClB,KAAK,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;AACjC,iBAAA;AACF,aAAA;AACD,YAAA,UAAU,EAAE;AACV,gBAAA,cAAc,EAAE,YAAY;AAC5B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,YAAY;oBAClB,KAAK,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;AACjC,iBAAA;AACF,aAAA;AACD,YAAA,OAAO,EAAE;AACP,gBAAA,cAAc,EAAE,SAAS;AACzB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,WAAW;AACjB,oBAAA,SAAS,EAAE,6BAA6B;AACzC,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,2BAA2B,GAA+B;AACrE,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,6BAA6B;AACxC,QAAA,eAAe,EAAE;AACf,YAAA,MAAM,EAAE;AACN,gBAAA,cAAc,EAAE,QAAQ;AACxB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,QAAQ;AACf,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA;AACD,YAAA,SAAS,EAAE;AACT,gBAAA,cAAc,EAAE,WAAW;AAC3B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,QAAQ;AACf,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA;AACD,YAAA,UAAU,EAAE;AACV,gBAAA,cAAc,EAAE,YAAY;AAC5B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,QAAQ;AACf,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA;AACD,YAAA,OAAO,EAAE;AACP,gBAAA,cAAc,EAAE,SAAS;AACzB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,QAAQ;AACf,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA;AACD,YAAA,UAAU,EAAE;AACV,gBAAA,cAAc,EAAE,YAAY;AAC5B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,QAAQ;AACf,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA;AACD,YAAA,SAAS,EAAE;AACT,gBAAA,cAAc,EAAE,WAAW;AAC3B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,QAAQ;AACf,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,gBAAgB,GAA+B;AAC1D,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,kBAAkB;AAC7B,QAAA,eAAe,EAAE;AACf,YAAA,EAAE,EAAE;AACF,gBAAA,cAAc,EAAE,IAAI;AACpB,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,IAAI,EAAE;AACJ,gBAAA,cAAc,EAAE,MAAM;AACtB,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,WAAW,EAAE;AACX,gBAAA,cAAc,EAAE,aAAa;AAC7B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,WAAW,EAAE;AACX,gBAAA,cAAc,EAAE,aAAa;AAC7B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,IAAI,EAAE;AACJ,gBAAA,cAAc,EAAE,MAAM;AACtB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,YAAY;oBAClB,KAAK,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;AACjC,iBAAA;AACF,aAAA;AACD,YAAA,UAAU,EAAE;AACV,gBAAA,cAAc,EAAE,YAAY;AAC5B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,YAAY;oBAClB,KAAK,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;AACjC,iBAAA;AACF,aAAA;AACD,YAAA,OAAO,EAAE;AACP,gBAAA,cAAc,EAAE,SAAS;AACzB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,WAAW;AACjB,oBAAA,SAAS,EAAE,yBAAyB;AACrC,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,uBAAuB,GAA+B;AACjE,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,yBAAyB;AACpC,QAAA,eAAe,EAAE;AACf,YAAA,MAAM,EAAE;AACN,gBAAA,cAAc,EAAE,QAAQ;AACxB,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,QAAQ;AACf,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA;AACD,YAAA,SAAS,EAAE;AACT,gBAAA,cAAc,EAAE,WAAW;AAC3B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,QAAQ;AACf,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA;AACD,YAAA,UAAU,EAAE;AACV,gBAAA,cAAc,EAAE,YAAY;AAC5B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,QAAQ;AACf,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA;AACD,YAAA,OAAO,EAAE;AACP,gBAAA,cAAc,EAAE,SAAS;AACzB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,QAAQ;AACf,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA;AACD,YAAA,UAAU,EAAE;AACV,gBAAA,cAAc,EAAE,YAAY;AAC5B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,QAAQ;AACf,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,aAAa,GAA+B;AACvD,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,eAAe;AAC1B,QAAA,eAAe,EAAE;AACf,YAAA,EAAE,EAAE;AACF,gBAAA,cAAc,EAAE,IAAI;AACpB,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,IAAI,EAAE;AACJ,gBAAA,cAAc,EAAE,MAAM;AACtB,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,WAAW,EAAE;AACX,gBAAA,cAAc,EAAE,aAAa;AAC7B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,cAAc,EAAE;AACd,gBAAA,cAAc,EAAE,gBAAgB;AAChC,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,MAAM,EAAE;AACN,gBAAA,cAAc,EAAE,QAAQ;AACxB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,QAAQ;AACf,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA;AACD,YAAA,IAAI,EAAE;AACJ,gBAAA,cAAc,EAAE,MAAM;AACtB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,YAAY;oBAClB,KAAK,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;AACjC,iBAAA;AACF,aAAA;AACD,YAAA,UAAU,EAAE;AACV,gBAAA,cAAc,EAAE,YAAY;AAC5B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,YAAY;oBAClB,KAAK,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;AACjC,iBAAA;AACF,aAAA;AACD,YAAA,OAAO,EAAE;AACP,gBAAA,cAAc,EAAE,SAAS;AACzB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,WAAW;AACjB,4BAAA,SAAS,EAAE,0BAA0B;AACtC,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA;AACD,YAAA,OAAO,EAAE;AACP,gBAAA,cAAc,EAAE,SAAS;AACzB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,WAAW;AACjB,oBAAA,SAAS,EAAE,sBAAsB;AAClC,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,wBAAwB,GAA+B;AAClE,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,0BAA0B;AACrC,QAAA,eAAe,EAAE;AACf,YAAA,IAAI,EAAE;AACJ,gBAAA,cAAc,EAAE,MAAM;AACtB,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,WAAW,EAAE;AACX,gBAAA,cAAc,EAAE,aAAa;AAC7B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,IAAI,EAAE;AACJ,gBAAA,cAAc,EAAE,MAAM;AACtB,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,gBAAgB,EAAE;AAChB,gBAAA,cAAc,EAAE,kBAAkB;AAClC,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,SAAS;AAChB,iBAAA;AACF,aAAA;AACD,YAAA,MAAM,EAAE;AACN,gBAAA,cAAc,EAAE,QAAQ;AACxB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,YAAY;oBAClB,KAAK,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;AACjC,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,oBAAoB,GAA+B;AAC9D,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,sBAAsB;AACjC,QAAA,eAAe,EAAE;AACf,YAAA,UAAU,EAAE;AACV,gBAAA,cAAc,EAAE,YAAY;AAC5B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,QAAQ;AACf,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA;AACD,YAAA,SAAS,EAAE;AACT,gBAAA,cAAc,EAAE,WAAW;AAC3B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,QAAQ;AACf,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA;AACD,YAAA,aAAa,EAAE;AACb,gBAAA,cAAc,EAAE,eAAe;AAC/B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,QAAQ;AACf,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA;AACD,YAAA,UAAU,EAAE;AACV,gBAAA,cAAc,EAAE,YAAY;AAC5B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,QAAQ;AACf,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA;AACD,YAAA,SAAS,EAAE;AACT,gBAAA,cAAc,EAAE,WAAW;AAC3B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,QAAQ;AACf,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA;AACD,YAAA,OAAO,EAAE;AACP,gBAAA,cAAc,EAAE,SAAS;AACzB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,QAAQ;AACf,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,gBAAgB,GAA+B;AAC1D,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,kBAAkB;AAC7B,QAAA,eAAe,EAAE;AACf,YAAA,EAAE,EAAE;AACF,gBAAA,cAAc,EAAE,IAAI;AACpB,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,IAAI,EAAE;AACJ,gBAAA,cAAc,EAAE,MAAM;AACtB,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,UAAU,EAAE;AACV,gBAAA,cAAc,EAAE,YAAY;AAC5B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,WAAW,EAAE;AACX,gBAAA,cAAc,EAAE,aAAa;AAC7B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,WAAW,EAAE;AACX,gBAAA,cAAc,EAAE,aAAa;AAC7B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,IAAI,EAAE;AACJ,gBAAA,cAAc,EAAE,MAAM;AACtB,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,IAAI,EAAE;AACJ,gBAAA,cAAc,EAAE,MAAM;AACtB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,YAAY;oBAClB,KAAK,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;AACjC,iBAAA;AACF,aAAA;AACD,YAAA,UAAU,EAAE;AACV,gBAAA,cAAc,EAAE,YAAY;AAC5B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,YAAY;oBAClB,KAAK,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;AACjC,iBAAA;AACF,aAAA;AACD,YAAA,OAAO,EAAE;AACP,gBAAA,cAAc,EAAE,SAAS;AACzB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,WAAW;AACjB,oBAAA,SAAS,EAAE,yBAAyB;AACrC,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,uBAAuB,GAA+B;AACjE,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,yBAAyB;AACpC,QAAA,eAAe,EAAE;AACf,YAAA,MAAM,EAAE;AACN,gBAAA,cAAc,EAAE,QAAQ;AACxB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,QAAQ;AACf,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA;AACD,YAAA,SAAS,EAAE;AACT,gBAAA,cAAc,EAAE,WAAW;AAC3B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,QAAQ;AACf,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA;AACD,YAAA,aAAa,EAAE;AACb,gBAAA,cAAc,EAAE,eAAe;AAC/B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,QAAQ;AACf,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA;AACD,YAAA,UAAU,EAAE;AACV,gBAAA,cAAc,EAAE,YAAY;AAC5B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,QAAQ;AACf,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA;AACD,YAAA,UAAU,EAAE;AACV,gBAAA,cAAc,EAAE,YAAY;AAC5B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,QAAQ;AACf,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,aAAa,GAA+B;AACvD,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,eAAe;AAC1B,QAAA,eAAe,EAAE;AACf,YAAA,EAAE,EAAE;AACF,gBAAA,cAAc,EAAE,IAAI;AACpB,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,WAAW,EAAE;AACX,gBAAA,cAAc,EAAE,aAAa;AAC7B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,WAAW,EAAE;AACX,gBAAA,cAAc,EAAE,aAAa;AAC7B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,IAAI,EAAE;AACJ,gBAAA,cAAc,EAAE,MAAM;AACtB,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,MAAM,EAAE;AACN,gBAAA,cAAc,EAAE,QAAQ;AACxB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,QAAQ;AACf,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA;AACD,YAAA,IAAI,EAAE;AACJ,gBAAA,cAAc,EAAE,MAAM;AACtB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,YAAY;oBAClB,KAAK,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;AACjC,iBAAA;AACF,aAAA;AACD,YAAA,UAAU,EAAE;AACV,gBAAA,cAAc,EAAE,YAAY;AAC5B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,YAAY;oBAClB,KAAK,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;AACjC,iBAAA;AACF,aAAA;AACD,YAAA,OAAO,EAAE;AACP,gBAAA,cAAc,EAAE,SAAS;AACzB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,WAAW;AACjB,oBAAA,SAAS,EAAE,sBAAsB;AAClC,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,oBAAoB,GAA+B;AAC9D,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,sBAAsB;AACjC,QAAA,eAAe,EAAE;AACf,YAAA,UAAU,EAAE;AACV,gBAAA,cAAc,EAAE,YAAY;AAC5B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,QAAQ;AACf,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA;AACD,YAAA,SAAS,EAAE;AACT,gBAAA,cAAc,EAAE,WAAW;AAC3B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,QAAQ;AACf,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA;AACD,YAAA,aAAa,EAAE;AACb,gBAAA,cAAc,EAAE,eAAe;AAC/B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,QAAQ;AACf,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA;AACD,YAAA,MAAM,EAAE;AACN,gBAAA,cAAc,EAAE,QAAQ;AACxB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,QAAQ;AACf,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,mBAAmB,GAA+B;AAC7D,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,qBAAqB;AAChC,QAAA,eAAe,EAAE;AACf,YAAA,EAAE,EAAE;AACF,gBAAA,cAAc,EAAE,IAAI;AACpB,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,UAAU,EAAE;AACV,gBAAA,cAAc,EAAE,YAAY;AAC5B,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,IAAI,EAAE;AACJ,gBAAA,cAAc,EAAE,MAAM;AACtB,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,MAAM,EAAE;AACN,gBAAA,cAAc,EAAE,QAAQ;AACxB,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,OAAO,EAAE;AACP,gBAAA,cAAc,EAAE,SAAS;AACzB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,WAAW;AACjB,oBAAA,SAAS,EAAE,4BAA4B;AACxC,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,0BAA0B,GAA+B;AACpE,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,4BAA4B;AACvC,QAAA,eAAe,EAAE;AACf,YAAA,MAAM,EAAE;AACN,gBAAA,cAAc,EAAE,QAAQ;AACxB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,QAAQ;AACf,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA;AACD,YAAA,SAAS,EAAE;AACT,gBAAA,cAAc,EAAE,WAAW;AAC3B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,QAAQ;AACf,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,iBAAiB,GAA+B;AAC3D,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,mBAAmB;AAC9B,QAAA,eAAe,EAAE;AACf,YAAA,EAAE,EAAE;AACF,gBAAA,cAAc,EAAE,IAAI;AACpB,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,UAAU,EAAE;AACV,gBAAA,cAAc,EAAE,YAAY;AAC5B,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,IAAI,EAAE;AACJ,gBAAA,cAAc,EAAE,MAAM;AACtB,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,MAAM,EAAE;AACN,gBAAA,cAAc,EAAE,QAAQ;AACxB,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,OAAO,EAAE;AACP,gBAAA,cAAc,EAAE,SAAS;AACzB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,WAAW;AACjB,oBAAA,SAAS,EAAE,0BAA0B;AACtC,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,wBAAwB,GAA+B;AAClE,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,0BAA0B;AACrC,QAAA,eAAe,EAAE;AACf,YAAA,MAAM,EAAE;AACN,gBAAA,cAAc,EAAE,QAAQ;AACxB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,QAAQ;AACf,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA;AACD,YAAA,SAAS,EAAE;AACT,gBAAA,cAAc,EAAE,WAAW;AAC3B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,QAAQ;AACf,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA;AACD,YAAA,aAAa,EAAE;AACb,gBAAA,cAAc,EAAE,eAAe;AAC/B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,QAAQ;AACf,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA;AACD,YAAA,SAAS,EAAE;AACT,gBAAA,cAAc,EAAE,WAAW;AAC3B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,QAAQ;AACf,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA;AACD,YAAA,SAAS,EAAE;AACT,gBAAA,cAAc,EAAE,WAAW;AAC3B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,QAAQ;AACf,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,mBAAmB,GAA+B;AAC7D,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,qBAAqB;AAChC,QAAA,eAAe,EAAE;AACf,YAAA,UAAU,EAAE;AACV,gBAAA,cAAc,EAAE,YAAY;AAC5B,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,WAAW;AACjB,4BAAA,SAAS,EAAE,mCAAmC;AAC/C,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA;AACD,YAAA,SAAS,EAAE;AACT,gBAAA,cAAc,EAAE,WAAW;AAC3B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,WAAW;AACjB,4BAAA,SAAS,EAAE,kCAAkC;AAC9C,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA;AACD,YAAA,YAAY,EAAE;AACZ,gBAAA,cAAc,EAAE,cAAc;AAC9B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,WAAW;AACjB,4BAAA,SAAS,EAAE,qCAAqC;AACjD,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,iCAAiC,GAA+B;AAC3E,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,mCAAmC;AAC9C,QAAA,eAAe,EAAE;AACf,YAAA,UAAU,EAAE;AACV,gBAAA,cAAc,EAAE,YAAY;AAC5B,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,UAAU,EAAE;AACV,gBAAA,cAAc,EAAE,YAAY;AAC5B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,QAAQ;AACf,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,gCAAgC,GAA+B;AAC1E,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,kCAAkC;AAC7C,QAAA,eAAe,EAAE;AACf,YAAA,UAAU,EAAE;AACV,gBAAA,cAAc,EAAE,YAAY;AAC5B,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,UAAU,EAAE;AACV,gBAAA,cAAc,EAAE,YAAY;AAC5B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,QAAQ;AACf,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,mCAAmC,GAA+B;AAC7E,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,qCAAqC;AAChD,QAAA,eAAe,EAAE;AACf,YAAA,UAAU,EAAE;AACV,gBAAA,cAAc,EAAE,YAAY;AAC5B,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,YAAY,GAA+B;AACtD,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,cAAc;AACzB,QAAA,eAAe,EAAE;AACf,YAAA,QAAQ,EAAE;AACR,gBAAA,cAAc,EAAE,UAAU;AAC1B,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,WAAW;AACjB,4BAAA,SAAS,EAAE,mBAAmB;AAC/B,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,iBAAiB,GAA+B;AAC3D,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,mBAAmB;AAC9B,QAAA,eAAe,EAAE;AACf,YAAA,EAAE,EAAE;AACF,gBAAA,cAAc,EAAE,IAAI;AACpB,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,OAAO,EAAE;AACP,gBAAA,cAAc,EAAE,SAAS;AACzB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,YAAY;oBAClB,KAAK,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,EAAE;AACpC,iBAAA;AACF,aAAA;AACD,YAAA,IAAI,EAAE;AACJ,gBAAA,cAAc,EAAE,MAAM;AACtB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,WAAW;AACjB,oBAAA,SAAS,EAAE,WAAW;AACvB,iBAAA;AACF,aAAA;AACD,YAAA,IAAI,EAAE;AACJ,gBAAA,YAAY,EAAE,QAAQ;AACtB,gBAAA,UAAU,EAAE,IAAI;AAChB,gBAAA,cAAc,EAAE,MAAM;AACtB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,MAAM,EAAE;AACN,gBAAA,YAAY,EAAE,MAAM;AACpB,gBAAA,UAAU,EAAE,IAAI;AAChB,gBAAA,cAAc,EAAE,QAAQ;AACxB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,SAAS,EAAE;AACT,gBAAA,cAAc,EAAE,WAAW;AAC3B,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,aAAa,GAA+B;AACvD,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,eAAe;AAC1B,QAAA,eAAe,EAAE;AACf,YAAA,SAAS,EAAE;AACT,gBAAA,cAAc,EAAE,WAAW;AAC3B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,WAAW;AACjB,4BAAA,SAAS,EAAE,oBAAoB;AAChC,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,kBAAkB,GAA+B;AAC5D,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,oBAAoB;AAC/B,QAAA,eAAe,EAAE;AACf,YAAA,EAAE,EAAE;AACF,gBAAA,cAAc,EAAE,IAAI;AACpB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,MAAM,EAAE;AACN,gBAAA,cAAc,EAAE,QAAQ;AACxB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,IAAI,EAAE;AACJ,gBAAA,cAAc,EAAE,MAAM;AACtB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,WAAW;AACjB,oBAAA,SAAS,EAAE,mBAAmB;AAC/B,iBAAA;AACF,aAAA;AACD,YAAA,OAAO,EAAE;AACP,gBAAA,cAAc,EAAE,SAAS;AACzB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,YAAY;oBAClB,KAAK,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,EAAE;AACpC,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,iBAAiB,GAA+B;AAC3D,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,mBAAmB;AAC9B,QAAA,eAAe,EAAE;AACf,YAAA,MAAM,EAAE;AACN,gBAAA,cAAc,EAAE,QAAQ;AACxB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,WAAW;AACjB,4BAAA,SAAS,EAAE,OAAO;AACnB,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA;AACD,YAAA,UAAU,EAAE;AACV,gBAAA,cAAc,EAAE,YAAY;AAC5B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,YAAY;oBAClB,KAAK,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;AACjC,iBAAA;AACF,aAAA;AACD,YAAA,MAAM,EAAE;AACN,gBAAA,cAAc,EAAE,QAAQ;AACxB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,YAAY;oBAClB,KAAK,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;AACjC,iBAAA;AACF,aAAA;AACD,YAAA,KAAK,EAAE;AACL,gBAAA,cAAc,EAAE,OAAO;AACvB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,WAAW;AACjB,oBAAA,SAAS,EAAE,WAAW;AACvB,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChrDD;;;;;;AAMG;AAYI,MAAMC,QAAM,GAAuB;AACxC,IAAA,aAAa,EAAE,QAAQ;AACvB,IAAA,MAAM,EAAE;AACN,QAAA,YAAY,EAAE,kBAAkB;AAChC,QAAA,UAAU,EAAE,IAAI;AAChB,QAAA,cAAc,EAAE,QAAQ;AACxB,QAAA,IAAI,EAAE;AACJ,YAAA,IAAI,EAAE,QAAQ;AACf,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAMC,OAAK,GAA0B;AAC1C,IAAA,aAAa,EAAE,OAAO;AACtB,IAAA,MAAM,EAAE;AACN,QAAA,cAAc,EAAE,OAAO;AACvB,QAAA,QAAQ,EAAE,IAAI;AACd,QAAA,IAAI,EAAE;AACJ,YAAA,IAAI,EAAE,QAAQ;AACf,SAAA;AACF,KAAA;AACD,IAAA,YAAY,EAAE,IAAI;CACnB,CAAC;AAEK,MAAM,WAAW,GAA0B;AAChD,IAAA,aAAa,EAAE,aAAa;AAC5B,IAAA,MAAM,EAAE;AACN,QAAA,cAAc,EAAE,aAAa;AAC7B,QAAA,QAAQ,EAAE,IAAI;AACd,QAAA,IAAI,EAAE;AACJ,YAAA,IAAI,EAAE,QAAQ;AACf,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,KAAK,GAA4B;AAC5C,IAAA,aAAa,EAAE,OAAO;AACtB,IAAA,MAAM,EAAE;AACN,QAAA,cAAc,EAAE,OAAO;AACvB,QAAA,QAAQ,EAAE,IAAI;AACd,QAAA,IAAI,EAAE;AACJ,YAAA,IAAI,EAAE,QAAQ;AACf,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAMC,UAAQ,GAA4B;AAC/C,IAAA,aAAa,EAAE,CAAC,SAAS,EAAE,UAAU,CAAC;AACtC,IAAA,MAAM,EAAE;AACN,QAAA,cAAc,EAAE,UAAU;AAC1B,QAAA,IAAI,EAAE;AACJ,YAAA,IAAI,EAAE,UAAU;AACjB,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,WAAW,GAAuB;AAC7C,IAAA,aAAa,EAAE,CAAC,SAAS,EAAE,aAAa,CAAC;AACzC,IAAA,MAAM,EAAE;AACN,QAAA,YAAY,EAAE,kBAAkB;AAChC,QAAA,UAAU,EAAE,IAAI;AAChB,QAAA,cAAc,EAAE,cAAc;AAC9B,QAAA,IAAI,EAAE;AACJ,YAAA,IAAI,EAAE,QAAQ;AACf,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,IAAI,GAAuB;AACtC,IAAA,aAAa,EAAE,MAAM;AACrB,IAAA,MAAM,EAAEC,SAAe;CACxB,CAAC;AAEK,MAAM,MAAM,GAAuB;AACxC,IAAA,aAAa,EAAE,CAAC,SAAS,EAAE,QAAQ,CAAC;AACpC,IAAA,MAAM,EAAE;AACN,QAAA,cAAc,EAAE,QAAQ;AACxB,QAAA,IAAI,EAAE;AACJ,YAAA,IAAI,EAAE,QAAQ;AACf,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,UAAU,GAA0B;AAC/C,IAAA,aAAa,EAAE,YAAY;AAC3B,IAAA,MAAM,EAAE;AACN,QAAA,cAAc,EAAE,YAAY;AAC5B,QAAA,QAAQ,EAAE,IAAI;AACd,QAAA,IAAI,EAAE;AACJ,YAAA,IAAI,EAAE,QAAQ;AACf,SAAA;AACF,KAAA;AACD,IAAA,YAAY,EAAE,IAAI;CACnB,CAAC;AAEK,MAAM,KAAK,GAAuB;AACvC,IAAA,aAAa,EAAE,MAAM;AACrB,IAAA,MAAM,EAAEC,YAAkB;CAC3B;;ACpHD;;;;;;AAMG;AA0BH;MACa,SAAS,CAAA;AAGpB;;;AAGG;AACH,IAAA,WAAA,CAAY,MAAgC,EAAA;AAC1C,QAAA,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;KACtB;AAED;;;;;;;AAOG;AACH,IAAA,GAAG,CACD,WAAmB,EACnB,KAAa,EACb,OAAgC,EAAA;AAEhC,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,WAAW,EAAE,KAAK,EAAE,OAAO,EAAE,EAC/BC,kBAAgB,CACjB,CAAC;KACH;AAED;;;;;;;;;AASG;AACH,IAAA,OAAO,CACL,WAAmB,EACnB,IAAe,EACf,OAAoC,EAAA;AAEpC,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,WAAW,EAAE,IAAI,EAAE,OAAO,EAAE,EAC9B,oBAAoB,CACrB,CAAC;KACH;AAED;;;;;;;;AAQG;AACH,IAAA,WAAW,CACT,UAAkB,EAClB,KAAa,EACb,OAAwC,EAAA;AAExC,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,UAAU,EAAE,KAAK,EAAE,OAAO,EAAE,EAC9B,wBAAwB,CACzB,CAAC;KACH;AAED;;;;;;;;AAQG;AACH,IAAA,eAAe,CACb,UAAkB,EAClB,IAAe,EACf,OAA4C,EAAA;AAE5C,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,UAAU,EAAE,IAAI,EAAE,OAAO,EAAE,EAC7B,4BAA4B,CAC7B,CAAC;KACH;AAED;;;;;;AAMG;IACH,KAAK,CACH,IAAkB,EAClB,OAAkC,EAAA;AAElC,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,IAAI,EAAE,OAAO,EAAE,EACjB,kBAAkB,CACnB,CAAC;KACH;AAED;;;;;;;;AAQG;AACH,IAAA,cAAc,CACZ,UAAkB,EAClB,KAAa,EACb,OAA2C,EAAA;AAE3C,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,UAAU,EAAE,KAAK,EAAE,OAAO,EAAE,EAC9B,2BAA2B,CAC5B,CAAC;KACH;AAED;;;;;;;;AAQG;AACH,IAAA,kBAAkB,CAChB,UAAkB,EAClB,IAAe,EACf,OAA+C,EAAA;AAE/C,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,UAAU,EAAE,IAAI,EAAE,OAAO,EAAE,EAC7B,+BAA+B,CAChC,CAAC;KACH;AACF,CAAA;AACD;AACA,MAAMC,YAAU,GAAGC,qBAAU,CAAC,gBAAgB,CAACC,SAAO,cAAc,KAAK,CAAC,CAAC;AAE3E,MAAMH,kBAAgB,GAA6B;AACjD,IAAA,IAAI,EAAE,iCAAiC;AACvC,IAAA,UAAU,EAAE,KAAK;AACjB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE;YACH,UAAU,EAAEI,YAAoB;AACjC,SAAA;AACD,QAAA,OAAO,EAAE;YACP,UAAU,EAAEC,eAAqB;AAClC,SAAA;AACF,KAAA;IACD,eAAe,EAAE,CAACC,KAAgB,EAAEC,UAAmB,CAAC;IACxD,aAAa,EAAE,CAACC,OAAgB,EAAEC,WAAsB,CAAC;AACzD,IAAA,gBAAgB,EAAE,CAACC,QAAiB,CAAC;gBACrCT,YAAU;CACX,CAAC;AACF,MAAM,oBAAoB,GAA6B;AACrD,IAAA,IAAI,EAAE,iCAAiC;AACvC,IAAA,UAAU,EAAE,MAAM;AAClB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE;YACH,UAAU,EAAEG,YAAoB;AACjC,SAAA;AACD,QAAA,OAAO,EAAE;YACP,UAAU,EAAEC,eAAqB;AAClC,SAAA;AACF,KAAA;IACD,WAAW,EAAEM,IAAe;IAC5B,aAAa,EAAE,CAACH,OAAgB,EAAEC,WAAsB,CAAC;AACzD,IAAA,gBAAgB,EAAE;AAChB,QAAAC,QAAiB;AACjB,QAAAE,WAAsB;AACtB,QAAAC,MAAiB;AAClB,KAAA;AACD,IAAA,SAAS,EAAE,MAAM;gBACjBZ,YAAU;CACX,CAAC;AACF,MAAM,wBAAwB,GAA6B;AACzD,IAAA,IAAI,EAAE,qBAAqB;AAC3B,IAAA,UAAU,EAAE,KAAK;AACjB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE;YACH,UAAU,EAAEG,YAAoB;AACjC,SAAA;AACD,QAAA,OAAO,EAAE;YACP,UAAU,EAAEC,eAAqB;AAClC,SAAA;AACF,KAAA;IACD,eAAe,EAAE,CAACC,KAAgB,EAAEC,UAAmB,CAAC;IACxD,aAAa,EAAE,CAACC,OAAgB,EAAEM,UAAqB,CAAC;AACxD,IAAA,gBAAgB,EAAE,CAACJ,QAAiB,CAAC;gBACrCT,YAAU;CACX,CAAC;AACF,MAAM,4BAA4B,GAA6B;AAC7D,IAAA,IAAI,EAAE,qBAAqB;AAC3B,IAAA,UAAU,EAAE,MAAM;AAClB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE;YACH,UAAU,EAAEG,YAAoB;AACjC,SAAA;AACD,QAAA,OAAO,EAAE;YACP,UAAU,EAAEC,eAAqB;AAClC,SAAA;AACF,KAAA;IACD,WAAW,EAAEM,IAAe;IAC5B,aAAa,EAAE,CAACH,OAAgB,EAAEM,UAAqB,CAAC;AACxD,IAAA,gBAAgB,EAAE;AAChB,QAAAJ,QAAiB;AACjB,QAAAE,WAAsB;AACtB,QAAAC,MAAiB;AAClB,KAAA;AACD,IAAA,SAAS,EAAE,MAAM;gBACjBZ,YAAU;CACX,CAAC;AACF,MAAM,kBAAkB,GAA6B;AACnD,IAAA,IAAI,EAAE,SAAS;AACf,IAAA,UAAU,EAAE,MAAM;AAClB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE;YACH,UAAU,EAAEc,aAAqB;AAClC,SAAA;AACD,QAAA,OAAO,EAAE;YACP,UAAU,EAAEV,eAAqB;AAClC,SAAA;AACF,KAAA;IACD,WAAW,EAAEW,KAAgB;AAC7B,IAAA,aAAa,EAAE,CAACR,OAAgB,CAAC;IACjC,gBAAgB,EAAE,CAACE,QAAiB,EAAEE,WAAsB,CAAC;AAC7D,IAAA,SAAS,EAAE,MAAM;gBACjBX,YAAU;CACX,CAAC;AACF,MAAM,2BAA2B,GAA6B;AAC5D,IAAA,IAAI,EAAE,qBAAqB;AAC3B,IAAA,UAAU,EAAE,KAAK;AACjB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE;YACH,UAAU,EAAEG,YAAoB;AACjC,SAAA;AACD,QAAA,OAAO,EAAE;YACP,UAAU,EAAEC,eAAqB;AAClC,SAAA;AACF,KAAA;IACD,eAAe,EAAE,CAACC,KAAgB,EAAEC,UAAmB,CAAC;IACxD,aAAa,EAAE,CAACC,OAAgB,EAAEM,UAAqB,CAAC;AACxD,IAAA,gBAAgB,EAAE,CAACJ,QAAiB,CAAC;gBACrCT,YAAU;CACX,CAAC;AACF,MAAM,+BAA+B,GAA6B;AAChE,IAAA,IAAI,EAAE,qBAAqB;AAC3B,IAAA,UAAU,EAAE,MAAM;AAClB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE;YACH,UAAU,EAAEG,YAAoB;AACjC,SAAA;AACD,QAAA,OAAO,EAAE;YACP,UAAU,EAAEC,eAAqB;AAClC,SAAA;AACF,KAAA;IACD,WAAW,EAAEM,IAAe;IAC5B,aAAa,EAAE,CAACH,OAAgB,EAAEM,UAAqB,CAAC;AACxD,IAAA,gBAAgB,EAAE;AAChB,QAAAJ,QAAiB;AACjB,QAAAE,WAAsB;AACtB,QAAAC,MAAiB;AAClB,KAAA;AACD,IAAA,SAAS,EAAE,MAAM;gBACjBZ,YAAU;CACX;;ACvTD;;;;;;AAMG;AAcH;MACa,YAAY,CAAA;AAGvB;;;AAGG;AACH,IAAA,WAAA,CAAY,MAAgC,EAAA;AAC1C,QAAA,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;KACtB;AAED;;;;;;AAMG;IACH,GAAG,CACD,WAAmB,EACnB,OAAmC,EAAA;AAEnC,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,WAAW,EAAE,OAAO,EAAE,EACxB,gBAAgB,CACjB,CAAC;KACH;AAED;;;;;;AAMG;IACH,IAAI,CACF,WAAmB,EACnB,OAAoC,EAAA;AAEpC,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,WAAW,EAAE,OAAO,EAAE,EACxB,iBAAiB,CAClB,CAAC;KACH;AACF,CAAA;AACD;AACA,MAAMA,YAAU,GAAGC,qBAAU,CAAC,gBAAgB,CAACC,SAAO,cAAc,KAAK,CAAC,CAAC;AAE3E,MAAM,gBAAgB,GAA6B;AACjD,IAAA,IAAI,EAAE,oCAAoC;AAC1C,IAAA,UAAU,EAAE,KAAK;AACjB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE;YACH,UAAU,EAAEc,eAAuB;AACpC,SAAA;AACD,QAAA,OAAO,EAAE;YACP,UAAU,EAAEZ,eAAqB;AAClC,SAAA;AACF,KAAA;IACD,aAAa,EAAE,CAACG,OAAgB,EAAEC,WAAsB,CAAC;AACzD,IAAA,gBAAgB,EAAE,CAACC,QAAiB,CAAC;gBACrCT,YAAU;CACX,CAAC;AACF,MAAM,iBAAiB,GAA6B;AAClD,IAAA,IAAI,EAAE,oCAAoC;AAC1C,IAAA,UAAU,EAAE,MAAM;AAClB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE;YACH,UAAU,EAAEgB,eAAuB;AACpC,SAAA;AACD,QAAA,OAAO,EAAE;YACP,UAAU,EAAEZ,eAAqB;AAClC,SAAA;AACF,KAAA;IACD,aAAa,EAAE,CAACG,OAAgB,EAAEC,WAAsB,CAAC;AACzD,IAAA,gBAAgB,EAAE,CAACC,QAAiB,CAAC;gBACrCT,YAAU;CACX;;AClGD;;;;;;AAMG;AAKH;AACa,MAAA,wBAAyB,SAAQC,qBAAU,CAAC,aAAa,CAAA;AAGpE;;;AAGG;AACH,IAAA,WAAA,CAAY,OAAyC,EAAA;;QAEnD,IAAI,CAAC,OAAO,EAAE;YACZ,OAAO,GAAG,EAAE,CAAC;AACd,SAAA;AACD,QAAA,MAAM,QAAQ,GAAoC;AAChD,YAAA,kBAAkB,EAAE,iCAAiC;SACtD,CAAC;QAEF,MAAM,cAAc,GAAG,CAAA,gCAAA,CAAkC,CAAC;QAC1D,MAAM,eAAe,GACnB,OAAO,CAAC,gBAAgB,IAAI,OAAO,CAAC,gBAAgB,CAAC,eAAe;cAChE,GAAG,OAAO,CAAC,gBAAgB,CAAC,eAAe,CAAI,CAAA,EAAA,cAAc,CAAE,CAAA;AACjE,cAAE,CAAA,EAAG,cAAc,CAAA,CAAE,CAAC;AAE1B,QAAA,MAAM,mBAAmB,GACpB,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,QAAQ,GACR,OAAO,CAAA,EAAA,EACV,gBAAgB,EAAE;gBAChB,eAAe;aAChB,EACD,OAAO,EAAE,OAAO,CAAC,QAAQ,IAAI,gCAAgC,GAC9D,CAAC;QACF,KAAK,CAAC,mBAAmB,CAAC,CAAC;;QAG3B,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC,KAAK,IAAI,gCAAgC,CAAC;KAChE;AACF;;AC/CD;;;;;;AAMG;AAOH;AACM,MAAO,iBAAkB,SAAQ,wBAAwB,CAAA;AAC7D;;;AAGG;AACH,IAAA,WAAA,CAAY,OAAyC,EAAA;QACnD,KAAK,CAAC,OAAO,CAAC,CAAC;QACf,IAAI,CAAC,KAAK,GAAG,IAAI,SAAS,CAAC,IAAI,CAAC,CAAC;QACjC,IAAI,CAAC,QAAQ,GAAG,IAAI,YAAY,CAAC,IAAI,CAAC,CAAC;KACxC;AAIF;;AC3BD;AACA;AA6DA;;AAEG;AACSgB,uCAOX;AAPD,CAAA,UAAY,qBAAqB,EAAA;;AAE/B,IAAA,qBAAA,CAAA,gBAAA,CAAA,GAAA,gBAAiC,CAAA;;AAEjC,IAAA,qBAAA,CAAA,SAAA,CAAA,GAAA,SAAmB,CAAA;;AAEnB,IAAA,qBAAA,CAAA,SAAA,CAAA,GAAA,SAAmB,CAAA;AACrB,CAAC,EAPWA,6BAAqB,KAArBA,6BAAqB,GAOhC,EAAA,CAAA,CAAA;;ACxED;AACA;AAIA;;AAEG;AACG,SAAU,kBAAkB,CAChC,IAKa,EAAA;IAEb,IAAI,CAAC,IAAI,EAAE;AACT,QAAA,OAAO,SAAS,CAAC;AAClB,KAAA;;IAID,MAAM,KAAK,GAAG,EAAE,CAAC;AAEjB,IAAA,IAAI,IAAI,CAAC,sBAAsB,IAAI,IAAI,EAAE;QACvC,KAAK,CAAC,IAAI,CAAC,CAAA,KAAA,EAAQ,IAAI,CAAC,sBAAsB,CAAE,CAAA,CAAC,CAAC;AACnD,KAAA;IAED,IAAI,IAAI,CAAC,sBAAsB,EAAE;AAC/B,QAAA,KAAK,CAAC,IAAI,CAAC,yBAAyB,CAAC,CAAC;AACvC,KAAA;IAED,IAAI,IAAI,CAAC,oBAAoB,EAAE;AAC7B,QAAA,KAAK,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;AACnC,KAAA;AAED,IAAA,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;QACpB,OAAO;AACL,YAAA,MAAM,EAAE,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC;SACxB,CAAC;AACH,KAAA;AAED,IAAA,OAAO,SAAS,CAAC;AACnB;;AC3CA;AACA;AAmHM,SAAU,eAAe,CAA2B,UAAkB,EAAA;AAC1E,IAAA,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,IAAI,KAAK,UAAU,CAAC,CAAC;AAC3D,CAAC;AAEK,SAAU,wBAAwB,CACtC,sBAAmE,EAAA;IAEnE,OAAY,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,sBAAsB,CAAE,EAAA,EAAA,eAAe,EAAG,CAAA,CAAA;AACxD;;AC5HA;AACA;AAIM,SAAU,yBAAyB,CAAC,QAA2B,EAAA;AACnE,IAAA,IAAI,sBAAsB,CAAC,QAAQ,EAAE,CAAC,WAAW,EAAE,SAAS,EAAE,UAAU,CAAC,CAAC,EAAE;AAC1E,QAAA,MAAM,IAAI,SAAS,CAAC,+DAA+D,CAAC,CAAC;AACtF,KAAA;IAED,IAAI,sBAAsB,CAAC,QAAQ,EAAE,CAAC,WAAW,EAAE,SAAS,CAAC,CAAC,EAAE;AAC9D,QAAA,OAAO,CAAG,EAAA,QAAQ,CAAC,SAAS,CAAC,WAAW,EAAE,CAAI,CAAA,EAAA,QAAQ,CAAC,OAAO,CAAC,WAAW,EAAE,EAAE,CAAC;AAChF,KAAA;SAAM,IAAI,sBAAsB,CAAC,QAAQ,EAAE,CAAC,WAAW,EAAE,UAAU,CAAC,CAAC,EAAE;AACtE,QAAA,OAAO,CAAG,EAAA,QAAQ,CAAC,SAAS,CAAC,WAAW,EAAE,CAAA,CAAA,EAAI,QAAQ,CAAC,QAAQ,CAAA,CAAE,CAAC;AACnE,KAAA;SAAM,IAAI,sBAAsB,CAAC,QAAQ,EAAE,CAAC,UAAU,EAAE,SAAS,CAAC,CAAC,EAAE;AACpE,QAAA,OAAO,CAAG,EAAA,QAAQ,CAAC,QAAQ,CAAI,CAAA,EAAA,QAAQ,CAAC,OAAO,CAAC,WAAW,EAAE,CAAA,CAAE,CAAC;AACjE,KAAA;SAAM,IAAI,sBAAsB,CAAC,QAAQ,EAAE,CAAC,UAAU,CAAC,CAAC,EAAE;QACzD,OAAO,QAAQ,CAAC,QAAQ,CAAC;AAC1B,KAAA;AAED,IAAA,MAAM,IAAI,SAAS,CAAC,8CAA8C,CAAC,CAAC;AACtE,CAAC;AAEK,SAAU,mCAAmC,CAAC,QAAgB,EAAA;AAClE,IAAA,IAAI,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE;QAC1B,MAAM,aAAa,GAAa,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;AACpD,QAAA,IAAI,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,EAAE;YAChE,OAAO,EAAE,SAAS,EAAE,IAAI,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,EAAE,OAAO,EAAE,IAAI,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;AACvF,SAAA;aAAM,IAAI,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,EAAE;AACxE,YAAA,OAAO,EAAE,SAAS,EAAE,IAAI,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,EAAE,QAAQ,EAAE,aAAa,CAAC,CAAC,CAAC,EAAE,CAAC;AAC9E,SAAA;aAAM,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,EAAE;AACxE,YAAA,OAAO,EAAE,QAAQ,EAAE,aAAa,CAAC,CAAC,CAAC,EAAE,OAAO,EAAE,IAAI,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;AAC5E,SAAA;AAAM,aAAA;AACL,YAAA,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,CAAC;AAC/B,SAAA;AACF,KAAA;AAAM,SAAA;AACL,QAAA,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,CAAC;AAC/B,KAAA;AACH,CAAC;AACD;;;;;;AAMG;AACa,SAAA,iBAAiB,CAC/B,KAAY,EACZ,QAAsB,EAAA;IAEtB,OAAO,OAAO,KAAK,KAAK,QAAQ,IAAI,QAAQ,IAAK,KAAiC,CAAC;AACrF,CAAC;AAED;;;;AAIG;AACG,SAAU,SAAS,CAAI,KAA2B,EAAA;IACtD,OAAO,OAAO,KAAK,KAAK,WAAW,IAAI,KAAK,KAAK,IAAI,CAAC;AACxD,CAAC;AAED;;;;;;AAMG;AACa,SAAA,sBAAsB,CACpC,KAAY,EACZ,UAA0B,EAAA;IAE1B,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;AAClD,QAAA,OAAO,KAAK,CAAC;AACd,KAAA;AAED,IAAA,KAAK,MAAM,QAAQ,IAAI,UAAU,EAAE;AACjC,QAAA,IAAI,CAAC,iBAAiB,CAAC,KAAK,EAAE,QAAQ,CAAC,EAAE;AACvC,YAAA,OAAO,KAAK,CAAC;AACd,SAAA;AACF,KAAA;AAED,IAAA,OAAO,IAAI,CAAC;AACd;;ACpFA;AA0DA;;AAEG;AACG,SAAU,2BAA2B,CAAC,KAAmB,EAAA;IAC7D,IAAI,EAAE,GAAG,CAAC,CAAC;IAEX,MAAM,QAAQ,GAAiC,KAAK,CAAC,GAAG,CAAC,CAAC,KAAiB,KAAI;AAC7E,QAAA,MAAM,IAAI,GAWJ;YACJ,WAAW,EAAE,KAAK,CAAC,WAAW;YAC9B,KAAK,EAAE,KAAK,CAAC,KAAK;SACnB,CAAC;AACF,QAAA,IAAI,KAAK,CAAC,sBAAsB,CAAC,EAAE;AACjC,YAAA,IAAI,CAAC,YAAY,CAAC,GAAG,KAAK,CAAC,sBAAsB,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;AAClE,SAAA;AACD,QAAA,IAAI,KAAK,CAAC,UAAU,CAAC,EAAE;YACrB,IAAI,CAAC,UAAU,CAAC,GAAG,yBAAyB,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,CAAC;AACjE,SAAA;AACD,QAAA,OAAO,IAAI,CAAC,aAAa,CAAC,CAAC;AAC3B,QAAA,OAAO,IAAI,CAAC,wBAAwB,CAAC,CAAC;AACtC,QAAA,OAAO,IAAI,CAAC,sBAAsB,CAAC,CAAC;AACpC,QAAA,OAAO,IAAI,CAAC,sBAAsB,CAAC,CAAC;AACpC,QAAA,OAAO,IAAI,CAAC,wBAAwB,CAAC,CAAC;AAEtC,QAAA,MAAM,gBAAgB,GAA+B;AACnD,YAAA,EAAE,EAAE,EAAE,CAAC,QAAQ,EAAE;YACjB,SAAS,EAAE,KAAK,CAAC,WAAW;AAC5B,YAAA,OAAO,EAAE,kBAAkB,CAAC,KAAK,CAAC;YAClC,IAAI;SACL,CAAC;AAEF,QAAA,EAAE,EAAE,CAAC;AAEL,QAAA,OAAO,gBAAgB,CAAC;AAC1B,KAAC,CAAC,CAAC;IAEH,OAAO;QACL,QAAQ;KACT,CAAC;AACJ,CAAC;AAED;;AAEG;AACa,SAAA,4BAA4B,CAC1C,iBAA8C,EAC9C,WAAkC,EAAA;;IAElC,MAAM,UAAU,GAAG,4BAA4B,CAAC,iBAAiB,EAAE,WAAW,CAAC,CAAC;AAChF;;;AAGG;AACH,IAAA,MAAM,YAAY,GAAG,iBAAiB,CAAC,SAAS,IAAI,EAAE,CAAC;AAEvD,IAAA,MAAM,WAAW,GAAyB,CAAA,EAAA,GAAA,YAAY,KAAA,IAAA,IAAZ,YAAY,KAAZ,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,YAAY,CAClD,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,KAAI;QACd,IAAI,IAAI,GAAG,CAAC,CAAC;AACb,QAAA,IAAI,CAAC,CAAC,EAAE,IAAI,IAAI,EAAE;YAChB,IAAI,GAAG,QAAQ,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;AAC3B,SAAA;QAED,IAAI,KAAK,GAAG,CAAC,CAAC;AACd,QAAA,IAAI,CAAC,CAAC,EAAE,IAAI,IAAI,EAAE;YAChB,KAAK,GAAG,QAAQ,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;AAC5B,SAAA;QAED,OAAO,IAAI,GAAG,KAAK,CAAC;AACtB,KAAC,CAAC,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CACA,GAAG,CAAC,CAAC,QAAqC,KAAK,+BAA+B,CAAC,QAAQ,CAAC,CAAC,CAAC;AAE7F,IAAA,WAAmB,CAAC,cAAc,CAAC,GAAG,UAAU,CAAC;AAClD,IAAA,OAAO,WAAW,CAAC;AACrB,CAAC;AACD;;;;;;;;;;;AAWG;AACa,SAAA,4BAA4B,CAC1C,iBAA8C,EAC9C,WAAkC,EAAA;;AAElC,IAAA,IAAI,iBAAiB,CAAC,SAAS,IAAI,IAAI,EAAE;AACvC,QAAA,OAAO,KAAK,CAAC;AACd,KAAA;IAED,IAAI,QAAQ,GAAG,KAAK,CAAC;;IAGrB,MAAM,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,UAAW,CAAC,CAAC;;;AAGvD,IAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,iBAAiB,CAAC,SAAS,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;AAC3D,QAAA,IAAI,CAAA,CAAA,EAAA,GAAA,iBAAiB,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,IAAI,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,KAAK,KAAI,IAAI,EAAE;YACtD,SAAS;AACV,SAAA;;AAID,QAAA,iBAAiB,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;QAEnE,QAAQ,GAAG,IAAI,CAAC;AACjB,KAAA;AAED,IAAA,OAAO,QAAQ,CAAC;AAClB,CAAC;AAED;;AAEG;AACa,SAAA,wBAAwB,CACtC,WAAqB,EACrB,mBAAoD,EAAA;IAEpD,IAAI,CAAC,mBAAmB,EAAE;AACxB,QAAA,OAAO,EAAE,CAAC;AACX,KAAA;AAED,IAAA,MAAM,EAAE,OAAO,EAAE,YAAY,EAAE,eAAe,EAAE,QAAQ,EAAE,WAAW,EACnE,GAAA,mBAAmB,EADqD,IAAI,GAAAC,YAAA,CAC5E,mBAAmB,EADf,CAAA,SAAA,EAAA,cAAA,EAAA,iBAAA,EAAA,UAAA,EAAA,aAAA,CAA0E,CAC3D,CAAC;AAEtB,IAAA,MAAM,GAAG,GAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACJ,IAAI,CACR,CAAC;AAEF,IAAA,IAAI,QAAQ,EAAE;AACZ,QAAA,GAAG,CAAC,QAAQ,GAAG,yBAAyB,CAAC,QAAQ,CAAC,CAAC;AACpD,KAAA;AAED,IAAA,IAAI,OAAO,EAAE;AACX,QAAA,GAAG,CAAC,OAAO,GAAG,OAAO,CAAC;AACvB,KAAA;AACD,IAAA,IAAI,WAAW,EAAE;QACf,GAAG,CAAC,WAAW,GAAG,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AACzC,KAAA;AACD,IAAA,IAAI,YAAY,EAAE;QAChB,GAAG,CAAC,WAAW,GAAG,YAAY,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AAC1C,KAAA;AACD,IAAA,IAAI,eAAe,EAAE;AACnB,QAAA,GAAG,CAAC,eAAe,GAAG,eAAe,CAAC;AACvC,KAAA;AACD,IAAA,IAAI,WAAW,EAAE;AACf,QAAA,GAAG,CAAC,QAAQ,GAAG,WAAW,CAAC;AAC5B,KAAA;AACD,IAAA,OAAO,GAAG,CAAC;AACb,CAAC;AAED;;AAEG;AACG,SAAU,yBAAyB,CACvC,iBAA+C,EAAA;IAE/C,MAAM,OAAO,GAAa,iBAAiB,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,MAAuB,KAAI;AAChF,QAAA,MAAM,YAAY,GAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACb,MAAM,CAAA,EAAA,EACT,IAAI,EAAE,MAAM,CAAC,IAAI,CAAC,KAAK,EACvB,WAAW,EAAE,MAAM,CAAC,kBAAkB,EACtC,UAAU,EAAE,MAAM,CAAC,UAAU,CAAC,GAAG,CAC/B,CAAC,EAA8B,KAAI;;AACjC,gBAAA,QAAmB;oBACjB,IAAI,EAAE,EAAE,CAAC,IAAI;oBACb,cAAc,EAAE,CAAA,EAAA,GAAA,EAAE,CAAC,cAAc,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,GAAG,CAAC,CAAC,EAAE,KAAI;;AAAC,wBAAA,QAC1C,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,EAAE,CACL,EAAA,EAAA,IAAI,EAAE,CAAA,EAAA,GAAA,EAAE,CAAC,IAAI,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,KAAK,EAAA,CAAA,EACpB;qBAAA,CAAC;AACJ,iBAAA,EAAA;AAAA,aAAA,CACJ,GACF,CAAC;QACF,OAAO,YAAY,CAAC,kBAAkB,CAAC;AACvC,QAAA,OAAO,YAAY,CAAC;AACtB,KAAC,CAAC,CAAC;;AAGH,IAAA,MAAM,EAAE,cAAc,EAAE,KAAK,EAAE,aAAa,EAAE,QAAQ,EAAE,QAAQ,EAAc,GAAA,iBAAiB,EAA1B,IAAI,GAAAA,YAAA,CAAK,iBAAiB,EAAzF,CAAA,gBAAA,EAAA,OAAA,EAAA,UAAA,EAAA,UAAA,CAAqE,CAAoB,CAAC;AAEhG,IAAA,MAAM,GAAG,GAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACJ,IAAI,CAAA,EAAA,EACP,OAAO,EACP,QAAQ,EAAE,mCAAmC,CAAC,QAAQ,CAAC,GACxD,CAAC;AAEF,IAAA,IAAI,cAAc,EAAE;AAClB,QAAA,GAAG,CAAC,cAAc,GAAG,cAAc,CAAC;AACrC,KAAA;AACD,IAAA,IAAI,QAAQ,EAAE;AACZ,QAAA,GAAG,CAAC,WAAW,GAAG,QAAQ,CAAC;AAC5B,KAAA;AAED,IAAA,OAAO,wBAAwB,CAAC,GAAG,CAAC,CAAC;AACvC,CAAC;AAED;;AAEG;AACG,SAAU,0CAA0C,CACxD,OAAiD,EAAA;IAEjD,IAAI,CAAC,OAAO,EAAE;AACZ,QAAA,OAAO,EAAE,CAAC;AACX,KAAA;IAED,MAAM,EAAE,eAAe,EAAA,GAAc,OAAO,EAAhB,IAAI,GAAAA,YAAA,CAAK,OAAO,EAAtC,CAA4B,iBAAA,CAAA,CAAU,CAAC;AAE7C,IAAA,MAAM,GAAG,GAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACJ,IAAI,CACR,CAAC;AAEF,IAAA,IAAI,eAAe,EAAE;AACnB,QAAA,GAAG,CAAC,eAAe,GAAG,eAAe,CAAC;AACvC,KAAA;AAED,IAAA,OAAO,GAAG,CAAC;AACb,CAAC;AAED;;AAEG;AACG,SAAU,oCAAoC,CAClD,iBAAmD,EAAA;AAEnD,IAAA,MAAM,WAAW,GAA4B,iBAAiB,KAAA,IAAA,IAAjB,iBAAiB,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAjB,iBAAiB,CAAE,GAAG,CAAC,CAAC,MAAM,KAAI;AAC7E,QAAA,MAAM,EAAE,IAAI,EAAE,UAAU,EAAE,kBAAkB,EAAE,oBAAoB,EAAc,GAAA,MAAM,EAAf,IAAI,GAAAA,YAAA,CAAK,MAAM,EAAhF,CAAA,MAAA,EAAA,YAAA,EAAA,oBAAA,EAAA,sBAAA,CAAuE,CAAS,CAAC;AAEvF,QAAA,MAAM,QAAQ,GAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACT,IAAI,CACR,CAAC;AAEF,QAAA,IAAI,kBAAkB,EAAE;AACtB,YAAA,QAAQ,CAAC,WAAW,GAAG,kBAAkB,CAAC;AAC3C,SAAA;AACD,QAAA,IAAI,IAAI,KAAJ,IAAA,IAAA,IAAI,uBAAJ,IAAI,CAAE,KAAK,EAAE;AACf,YAAA,QAAQ,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC;AAC5B,SAAA;AAED,QAAA,MAAM,0BAA0B,GAC9B,oBAAoB,KAAA,IAAA,IAApB,oBAAoB,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAApB,oBAAoB,CAAE,GAAG,CAAC,CAAC,cAAc,KAAI;YAC3C,OAAO;gBACL,WAAW,EAAE,cAAc,CAAC,SAAS;gBACrC,SAAS,EAAE,cAAc,CAAC,SAAS;aACpC,CAAC;AACJ,SAAC,CAAC,CAAC;AAEL,QAAA,IAAI,0BAA0B,EAAE;AAC9B,YAAA,QAAQ,CAAC,oBAAoB,GAAG,0BAA0B,CAAC;AAC5D,SAAA;AACD,QAAA,MAAM,gBAAgB,GAAG,UAAU,aAAV,UAAU,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAV,UAAU,CAAE,GAAG,CAAC,CAAC,GAAG,KAAK,GAAG,CAAC,KAAK,CAAC,CAAC;AAE7D,QAAA,IAAI,gBAAgB,EAAE;AACpB,YAAA,QAAQ,CAAC,UAAU,GAAG,gBAAgB,CAAC;AACxC,SAAA;AACD,QAAA,OAAO,QAAQ,CAAC;AAClB,KAAC,CAAC,CAAC;AACH,IAAA,OAAO,WAAW,CAAC;AACrB,CAAC;AAED;;AAEG;AACG,SAAU,kCAAkC,CAChD,iBAAkD,EAAA;AAElD,IAAA,MAAM,UAAU,GAA2B,iBAAiB,KAAA,IAAA,IAAjB,iBAAiB,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAjB,iBAAiB,CAAE,GAAG,CAAC,CAAC,MAAM,KAAI;QAC3E,MAAM,EAAE,UAAU,EAAA,GAAc,MAAM,EAAf,IAAI,GAAAA,YAAA,CAAK,MAAM,EAAhC,CAAuB,YAAA,CAAA,CAAS,CAAC;AAEvC,QAAA,MAAM,QAAQ,GAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACT,IAAI,CACR,CAAC;AAEF,QAAA,IAAI,UAAU,EAAE;AACd,YAAA,QAAQ,CAAC,mBAAmB,GAAG,UAAU,CAAC,mBAAmB,CAAC;AAC/D,SAAA;AAED,QAAA,OAAO,QAAQ,CAAC;AAClB,KAAC,CAAC,CAAC;AACH,IAAA,OAAO,UAAU,CAAC;AACpB,CAAC;AAED;;AAEG;AACG,SAAU,qBAAqB,CAAC,KAAqB,EAAA;IACzD,MAAM,eAAe,GAAa,EAAE,CAAC;IACrC,MAAM,YAAY,GAAa,EAAE,CAAC;;;AAIlC,IAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;QAC7C,IAAI,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,KAAK,UAAU,EAAE;AACxC,YAAA,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACtB,SAAA;aAAM,IAAI,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,KAAK,SAAS,EAAE;AAC9C,YAAA,eAAe,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACzB,SAAA;AACF,KAAA;AAED,IAAA,OAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACK,KAAK,CAAA,EAAA,EACR,IAAI,EAAG,KAAK,CAAC,IAA0B,CAAC,GAAG,CAAC,CAAC,GAAG,KAAI;AAClD,YAAA,KAAK,MAAM,YAAY,IAAI,eAAe,EAAE;gBAC1C,IAAI;AACF,oBAAA,GAAG,CAAC,YAAY,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,YAAY,CAAW,CAA4B,CAAC;AACxF,iBAAA;AAAC,gBAAA,OAAO,IAAS,EAAE;;AAEnB,iBAAA;AACF,aAAA;AAED,YAAA,KAAK,MAAM,SAAS,IAAI,YAAY,EAAE;AACpC,gBAAA,GAAG,CAAC,SAAS,CAAC,GAAG,IAAI,IAAI,CAAC,GAAG,CAAC,SAAS,CAAW,CAAC,CAAC;AACrD,aAAA;AAED,YAAA,OAAO,GAAG,CAAC;AACb,SAAC,CAAC,EACF,iBAAiB,EAAE,KAAK,CAAC,OAAO,EAChC,CAAA,CAAA;AACJ,CAAC;AAED;;AAEG;AACG,SAAU,+BAA+B,CAC7C,QAAqC,EAAA;IAErC,IAAI;QACF,MAAM,kBAAkB,GAA+B,IAAI,CAAC,KAAK,CAC/D,QAAQ,CAAC,IAAW,CACS,CAAC;AAEhC,QAAA,OAAO,iBAAiB,CAAC,kBAAkB,CAAC,CAAC;AAC9C,KAAA;AAAC,IAAA,OAAO,CAAM,EAAE;QACf,IAAI,QAAQ,CAAC,IAAI;AAAE,YAAA,OAAO,iBAAiB,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;;AACtD,YAAA,OAAO,EAA+B,CAAC;AAC7C,KAAA;AACH,CAAC;AAEK,SAAU,iBAAiB,CAC/B,iBAA6C,EAAA;;AAE7C,IAAA,IAAI,CAAC,iBAAiB,CAAC,KAAK,EAAE;AAC5B,QAAA,MAAM,MAAM,GAA8B;YACxC,aAAa,EAAE,iBAAiB,CAAC,MAAM;YACvC,MAAM,EAAED,6BAAqB,CAAC,OAAO;YACrC,UAAU,EAAE,iBAAiB,CAAC,UAAU;AACxC,YAAA,MAAM,EACJ,CAAA,CAAA,EAAA,GAAA,iBAAiB,CAAC,MAAM,0CAAE,GAAG,CAAC,CAAC,KAAqB,KAAK,qBAAqB,CAAC,KAAK,CAAC,CAAC;gBACtF,EAAE;SACL,CAAC;AACF,QAAA,OAAO,MAAM,CAAC;AACf,KAAA;AAAM,SAAA;QACL,IAAI,iBAAiB,CAAC,MAAM,EAAE;AAC5B,YAAA,MAAM,MAAM,GAA2B;gBACrC,aAAa,EAAE,iBAAiB,CAAC,MAAM;gBACvC,MAAM,EAAEA,6BAAqB,CAAC,cAAc;gBAC5C,UAAU,EAAE,iBAAiB,CAAC,UAAU;AACxC,gBAAA,aAAa,EAAE,CAAA,EAAA,GAAA,iBAAiB,CAAC,MAAM,0CAAE,GAAG,CAAC,CAAC,KAAqB,KACjE,qBAAqB,CAAC,KAAK,CAAC,CAC7B;AACD,gBAAA,YAAY,EAAE,QAAQ,CAAC,iBAAiB,CAAC,KAAK,CAAC;aAChD,CAAC;AACF,YAAA,OAAO,MAAM,CAAC;AACf,SAAA;AAAM,aAAA;YACL,MAAM,SAAS,GAAkB,QAAQ,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC;YACnE,MAAM,MAAM,GACV,MAAA,CAAA,MAAA,CAAA,EAAA,MAAM,EAAEA,6BAAqB,CAAC,OAAO,EAAA,EAClC,SAAS,CACb,CAAC;AACF,YAAA,OAAO,MAAM,CAAC;AACf,SAAA;AACF,KAAA;AACH,CAAC;AAEK,SAAU,QAAQ,CAAC,KAAyB,EAAA;IAChD,IAAI,cAAc,GAAG,KAAK,CAAC;IAC3B,OAAO,cAAc,CAAC,UAAU,EAAE;AAChC,QAAA,cAAc,GAAG,cAAc,CAAC,UAAU,CAAC;AAC5C,KAAA;IAED,OAAO;AACL,QAAA,IAAI,EAAE,OAAO;QACb,IAAI,EAAE,KAAK,CAAC,IAAI;QAChB,OAAO,EAAE,GAAG,KAAK,CAAC,OAAO,CAAM,GAAA,EAAA,cAAc,CAAC,OAAO,CAAE,CAAA;KACxD,CAAC;AACJ;;ACzcA;AACA;AAEA;;AAEG;AACI,MAAM,WAAW,GAAW,OAAO;;ACN1C;AAMA;;;;AAIG;AACI,MAAM,aAAa,GAAGE,+BAAmB,CAAC;AAC/C,IAAA,SAAS,EAAE,mBAAmB;AAC9B,IAAA,WAAW,EAAE,sBAAsB;AACnC,IAAA,cAAc,EAAE,WAAW;AAC5B,CAAA,CAAC;;ACfF;AACA;AAIM,SAAU,mBAAmB,CAAC,OAA+B,EAAA;AACjE,IAAA,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE;AACrB,QAAA,MAAM,IAAI,KAAK,CAAC,8BAA8B,CAAC,CAAC;AACjD,KAAA;IAED,MAAM,GAAG,GAAG,IAAI,GAAG,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;AACtC,IAAA,GAAG,CAAC,QAAQ,GAAG,KAAK,CAAC;AAErB,IAAA,OAAO,GAAG,CAAC,QAAQ,EAAE,CAAC;AACxB;;ACdA;AA+BA,MAAM,mBAAmB,GAAG,sCAAsC,CAAC;AAYnE;;AAEG;MACU,eAAe,CAAA;AAG1B;;;;;AAKG;IACH,WAAY,CAAA,eAAgC,EAAE,OAAgC,EAAA;;;;AAG5E,QAAA,IAAI,KAAK,CAAC;QACV,IAAI,QAAQ,GAAG,OAAO,KAAA,IAAA,IAAP,OAAO,KAAP,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,OAAO,CAAE,QAAQ,CAAC;AACjC,QAAA,IAAI,OAAO,KAAP,IAAA,IAAA,OAAO,uBAAP,OAAO,CAAE,QAAQ,EAAE;AACrB,YAAA,KAAK,GAAG,CAAG,EAAA,OAAO,CAAC,QAAQ,WAAW,CAAC;AACvC,YAAA,QAAQ,GAAG,mBAAmB,CAAC,OAAO,CAAC,CAAC;AACzC,SAAA;AACD,QAAA,MAAM,iBAAiB,GAAG;AACxB,YAAA,gBAAgB,EAAE,KAAK;SACxB,CAAC;AACF,QAAA,MAAM,cAAc,GAAG,CAA0B,uBAAA,EAAA,WAAW,EAAE,CAAC;QAC/D,MAAM,eAAe,GACnB,CAAA,OAAO,aAAP,OAAO,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAP,OAAO,CAAE,gBAAgB,MAAI,OAAO,KAAA,IAAA,IAAP,OAAO,KAAP,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,OAAO,CAAE,gBAAgB,CAAC,eAAe,CAAA;AACpE,cAAE,CAAA,EAAG,OAAO,KAAA,IAAA,IAAP,OAAO,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAP,OAAO,CAAE,gBAAgB,CAAC,eAAe,CAAA,CAAA,EAAI,cAAc,CAAE,CAAA;AAClE,cAAE,CAAA,EAAG,cAAc,CAAA,CAAE,CAAC;AAC1B,QAAA,IAAI,CAAC,aAAa,GAAG,IAAI,iBAAiB,CACrC,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,OAAO,CACV,EAAA,EAAA,KAAK,EAAE,QAAQ,EACf,QAAQ,EAAE,QAAQ,EAClB,gBAAgB,EAAE,CAAA,EAAA,GAAA,iBAAiB,KAAA,IAAA,IAAjB,iBAAiB,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAjB,iBAAiB,CAAE,gBAAgB,MAAI,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAA,mBAAmB,EAC5E,UAAU,EAAE,eAAe,EAC3B,gBAAgB,EAAE;gBAChB,eAAe;AAChB,aAAA,EAAA,CAAA,CACD,CAAC;KACJ;AAED;;;;;;;;;AASG;AACH,IAAA,MAAM,cAAc,CAClB,WAAmB,EACnB,KAAa,EACb,QAA2B;;AAE3B,IAAA,OAAA,GAA4B,EAAE,EAAA;QAE9B,IAAI,YAAY,GAAW,EAAE,CAAC;AAC9B,QAAA,OAAO,aAAa,CAAC,QAAQ,CAC3B,gCAAgC,EAChC,OAAO,EACP,OAAO,cAAc,KAAI;AACvB,YAAA,IAAI,QAAQ,EAAE;AACZ,gBAAA,YAAY,GAAG,yBAAyB,CAAC,QAAQ,CAAC,CAAC;AACpD,aAAA;YACD,MAAM,EAAE,YAAY,EAAE,WAAW,EAAE,GAAG,MAAM,cAAc,CACxD,CAAC,YAAY,KACX,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,OAAO,CAC9B,WAAW,EACX;gBACE,KAAK;AACL,gBAAA,QAAQ,EAAE,YAAY;AACtB,gBAAA,UAAU,EAAE,OAAO,KAAA,IAAA,IAAP,OAAO,KAAP,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,OAAO,CAAE,oBAAoB;AAC1C,aAAA,EACD,YAAY,CACb,EAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAEE,cAAc,CAAA,EAAA,EACjB,cAAc,EAAE;AACd,oBAAA,aAAa,EACR,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,kBAAkB,CAAC,OAAO,CAAC,CAC/B;AACF,iBAAA,EAAA,CAAA,CAEJ,CAAC;YAEF,MAAM,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,UAAW,CAAC,CAAC;AACvD,YAAA,YAAY,CAAC,MAAM,GAAG,UAAU,CAAC,MAAM,CAAC;AAExC,YAAA,MAAM,GAAG,GAAG;gBACV,MAAM,EAAE,YAAY,CAAC,MAAM,CAAC,GAAG,CAAC,qBAAqB,CAAC;gBACtD,UAAU,EAAE,YAAY,CAAC,UAAU;gBACnC,aAAa,EAAE,YAAY,CAAC,MAAM;aACnC,CAAC;AAEF,YAAA,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE;;AAEvB,gBAAA,MAAM,MAAM,GAA8B;oBACxC,MAAM,EAAE,GAAG,CAAC,MAAM;oBAClB,UAAU,EAAE,GAAG,CAAC,UAAU;oBAC1B,aAAa,EAAE,GAAG,CAAC,aAAa;oBAChC,MAAM,EAAEF,6BAAqB,CAAC,OAAO;iBACtC,CAAC;AACF,gBAAA,OAAO,MAAM,CAAC;AACf,aAAA;AAAM,iBAAA;AACL,gBAAA,MAAM,MAAM,GAA2B;oBACrC,aAAa,EAAE,GAAG,CAAC,MAAM;oBACzB,MAAM,EAAEA,6BAAqB,CAAC,cAAc;AAC5C,oBAAA,YAAY,EAAE,QAAQ,CAAC,YAAY,CAAC,KAAK,CAAC;oBAC1C,UAAU,EAAE,GAAG,CAAC,UAAU;oBAC1B,aAAa,EAAE,GAAG,CAAC,aAAa;iBACjC,CAAC;AACF,gBAAA,OAAO,MAAM,CAAC;AACf,aAAA;AACH,SAAC,CACF,CAAC;KACH;AAED;;;;;AAKG;AACH,IAAA,MAAM,UAAU,CACd,KAAmB,EACnB,UAAiC,EAAE,EAAA;AAEnC,QAAA,OAAO,aAAa,CAAC,QAAQ,CAAC,4BAA4B,EAAE,OAAO,EAAE,OAAO,cAAc,KAAI;AAC5F,YAAA,MAAM,gBAAgB,GAAG,2BAA2B,CAAC,KAAK,CAAC,CAAC;AAC5D,YAAA,MAAM,EAAE,YAAY,EAAE,WAAW,EAAE,GAAG,MAAM,cAAc,CACxD,CAAC,YAAY,KAAK,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,KAAK,CAAC,gBAAgB,EAAE,YAAY,CAAC,EAChF,cAAc,IAAI,EAAE,CACrB,CAAC;YACF,MAAM,MAAM,GAAyB,4BAA4B,CAAC,YAAY,EAAE,WAAW,CAAC,CAAC;AAC7F,YAAA,OAAO,MAAM,CAAC;AAChB,SAAC,CAAC,CAAC;KACJ;AAED;;;;;;;;;;AAUG;AACH,IAAA,MAAM,aAAa,CACjB,UAAkB,EAClB,KAAa,EACb,QAA2B;;AAE3B,IAAA,OAAA,GAA4B,EAAE,EAAA;QAE9B,IAAI,YAAY,GAAW,EAAE,CAAC;AAC9B,QAAA,OAAO,aAAa,CAAC,QAAQ,CAC3B,+BAA+B,EAC/B,OAAO,EACP,OAAO,cAAc,KAAI;AACvB,YAAA,YAAY,GAAG,yBAAyB,CAAC,QAAQ,CAAC,CAAC;AACnD,YAAA,IAAI,UAAU,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE;AAC9B,gBAAA,UAAU,GAAG,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;AACtC,aAAA;YAED,MAAM,EAAE,YAAY,EAAE,WAAW,EAAE,GAAG,MAAM,cAAc,CACxD,CAAC,YAAY,KACX,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,eAAe,CACtC,UAAU,EACV;gBACE,KAAK;AACL,gBAAA,QAAQ,EAAE,YAAY;AACtB,gBAAA,UAAU,EAAE,OAAO,KAAA,IAAA,IAAP,OAAO,KAAP,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,OAAO,CAAE,oBAAoB;AAC1C,aAAA,EACD,YAAY,CACb,EAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAEE,cAAc,CAAA,EAAA,EACjB,cAAc,EAAE;AACd,oBAAA,aAAa,EACR,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,kBAAkB,CAAC,OAAO,CAAC,CAC/B;AACF,iBAAA,EAAA,CAAA,CAEJ,CAAC;YAEF,MAAM,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,UAAW,CAAC,CAAC;AACvD,YAAA,YAAY,CAAC,MAAM,GAAG,UAAU,CAAC,MAAM,CAAC;AAExC,YAAA,MAAM,GAAG,GAAG;gBACV,MAAM,EAAE,YAAY,CAAC,MAAM,CAAC,GAAG,CAAC,qBAAqB,CAAC;gBACtD,UAAU,EAAE,YAAY,CAAC,UAAU;gBACnC,aAAa,EAAE,YAAY,CAAC,MAAM;aACnC,CAAC;AAEF,YAAA,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE;;AAEvB,gBAAA,MAAM,MAAM,GAA8B;oBACxC,MAAM,EAAE,GAAG,CAAC,MAAM;oBAClB,UAAU,EAAE,GAAG,CAAC,UAAU;oBAC1B,aAAa,EAAE,GAAG,CAAC,aAAa;oBAChC,MAAM,EAAEA,6BAAqB,CAAC,OAAO;iBACtC,CAAC;AACF,gBAAA,OAAO,MAAM,CAAC;AACf,aAAA;AAAM,iBAAA;AACL,gBAAA,MAAM,MAAM,GAA2B;oBACrC,aAAa,EAAE,GAAG,CAAC,MAAM;oBACzB,MAAM,EAAEA,6BAAqB,CAAC,cAAc;AAC5C,oBAAA,YAAY,EAAE,QAAQ,CAAC,YAAY,CAAC,KAAK,CAAC;oBAC1C,UAAU,EAAE,GAAG,CAAC,UAAU;oBAC1B,aAAa,EAAE,GAAG,CAAC,aAAa;iBACjC,CAAC;AACF,gBAAA,OAAO,MAAM,CAAC;AACf,aAAA;AACH,SAAC,CACF,CAAC;KACH;AACF,CAAA;AAOD,eAAe,cAAc,CAC3B,CAA0C,EAC1C,OAAiB,EAAA;;IAGjB,MAAM,EAAE,UAAU,EAAE,wBAAwB,EAAE,GAAG,OAAO,IAAI,EAAE,CAAC;IAC/D,IAAI,WAAW,GAAsC,SAAS,CAAC;;;;AAI/D,IAAA,MAAM,YAAY,GAAG,MAAM,CAAC,iCACvB,OAAO,CAAA,EAAA,EACV,UAAU,EAAE,CAAC,QAA+B,EAAE,iBAA0B,KAAI;YAC1E,WAAW,GAAG,QAAQ,CAAC;YACvB,wBAAwB,KAAA,IAAA,IAAxB,wBAAwB,KAAxB,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,wBAAwB,CAAG,QAAQ,EAAE,iBAAiB,CAAC,CAAC;AAC1D,SAAC,IACD,CAAC;AACH,IAAA,OAAO,EAAE,YAAY,EAAE,WAAW,EAAE,WAAY,EAAE,CAAC;AACrD;;AChSA;;;;;;AAMG;AAwFH;AACA,IAAYG,uBAGX,CAAA;AAHD,CAAA,UAAY,qBAAqB,EAAA;;AAE/B,IAAA,qBAAA,CAAA,yBAAA,CAAA,GAAA,YAAsC,CAAA;AACxC,CAAC,EAHWA,uBAAqB,KAArBA,uBAAqB,GAGhC,EAAA,CAAA,CAAA,CAAA;AAWD;AACA,IAAYC,iBAcX,CAAA;AAdD,CAAA,UAAY,eAAe,EAAA;AACzB,IAAA,eAAA,CAAA,OAAA,CAAA,GAAA,OAAe,CAAA;AACf,IAAA,eAAA,CAAA,OAAA,CAAA,GAAA,OAAe,CAAA;AACf,IAAA,eAAA,CAAA,SAAA,CAAA,GAAA,SAAmB,CAAA;AACnB,IAAA,eAAA,CAAA,gBAAA,CAAA,GAAA,gBAAiC,CAAA;AACjC,IAAA,eAAA,CAAA,gBAAA,CAAA,GAAA,gBAAiC,CAAA;AACjC,IAAA,eAAA,CAAA,SAAA,CAAA,GAAA,SAAmB,CAAA;AACnB,IAAA,eAAA,CAAA,cAAA,CAAA,GAAA,cAA6B,CAAA;AAC7B,IAAA,eAAA,CAAA,aAAA,CAAA,GAAA,aAA2B,CAAA;AAC3B,IAAA,eAAA,CAAA,aAAA,CAAA,GAAA,aAA2B,CAAA;AAC3B,IAAA,eAAA,CAAA,OAAA,CAAA,GAAA,OAAe,CAAA;AACf,IAAA,eAAA,CAAA,YAAA,CAAA,GAAA,YAAyB,CAAA;AACzB,IAAA,eAAA,CAAA,WAAA,CAAA,GAAA,WAAuB,CAAA;AACvB,IAAA,eAAA,CAAA,eAAA,CAAA,GAAA,eAA+B,CAAA;AACjC,CAAC,EAdWA,iBAAe,KAAfA,iBAAe,GAc1B,EAAA,CAAA,CAAA;;AC5HD;;;;;;AAMG;AAII,MAAM,QAAQ,GAA+B;AAClD,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,UAAU;AACrB,QAAA,eAAe,EAAE;AACf,YAAA,IAAI,EAAE;AACJ,gBAAA,WAAW,EAAE;AACX,oBAAA,gBAAgB,EAAE,CAAC;AACpB,iBAAA;AACD,gBAAA,cAAc,EAAE,MAAM;AACtB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,QAAQ,EAAE;AACR,gBAAA,cAAc,EAAE,UAAU;AAC1B,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,QAAQ,EAAE;AACR,gBAAA,cAAc,EAAE,UAAU;AAC1B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AACjB,iBAAA;AACF,aAAA;AACD,YAAA,SAAS,EAAE;AACT,gBAAA,cAAc,EAAE,WAAW;AAC3B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,cAAc,EAAE;AACd,gBAAA,cAAc,EAAE,gBAAgB;AAChC,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,KAAK,EAAE;AACL,gBAAA,cAAc,EAAE,OAAO;AACvB,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,WAAW;AACjB,4BAAA,SAAS,EAAE,QAAQ;AACpB,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,MAAM,GAA+B;AAChD,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,QAAQ;AACnB,QAAA,eAAe,EAAE;AACf,YAAA,EAAE,EAAE;AACF,gBAAA,cAAc,EAAE,IAAI;AACpB,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,IAAI,EAAE;AACJ,gBAAA,cAAc,EAAE,MAAM;AACtB,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,IAAI,EAAE;AACJ,gBAAA,cAAc,EAAE,MAAM;AACtB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,WAAW;AACjB,oBAAA,SAAS,EAAE,mBAAmB;AAC/B,iBAAA;AACF,aAAA;AACD,YAAA,kBAAkB,EAAE;AAClB,gBAAA,cAAc,EAAE,oBAAoB;AACpC,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,SAAS,EAAE;AACT,gBAAA,cAAc,EAAE,WAAW;AAC3B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,YAAY,EAAE;AACZ,gBAAA,cAAc,EAAE,cAAc;AAC9B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,IAAI,EAAE;AACJ,gBAAA,cAAc,EAAE,MAAM;AACtB,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,UAAU,EAAE;AACV,gBAAA,cAAc,EAAE,YAAY;AAC5B,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,WAAW;AACjB,4BAAA,SAAS,EAAE,mBAAmB;AAC/B,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAMC,mBAAiB,GAA+B;AAC3D,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,mBAAmB;AAC9B,QAAA,eAAe,EAAE;AACf,YAAA,KAAK,EAAE;AACL,gBAAA,cAAc,EAAE,OAAO;AACvB,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,cAAc,EAAE;AACd,gBAAA,cAAc,EAAE,gBAAgB;AAChC,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,iBAAiB,GAA+B;AAC3D,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,mBAAmB;AAC9B,QAAA,eAAe,EAAE;AACf,YAAA,cAAc,EAAE;AACd,gBAAA,cAAc,EAAE,gBAAgB;AAChC,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,WAAW;AACjB,4BAAA,SAAS,EAAE,eAAe;AAC3B,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA;AACD,YAAA,IAAI,EAAE;AACJ,gBAAA,cAAc,EAAE,MAAM;AACtB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,WAAW;AACjB,4BAAA,SAAS,EAAE,aAAa;AACzB,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,aAAa,GAA+B;AACvD,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,eAAe;AAC1B,QAAA,eAAe,EAAE;AACf,YAAA,IAAI,EAAE;AACJ,gBAAA,cAAc,EAAE,MAAM;AACtB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,WAAW;AACjB,oBAAA,SAAS,EAAE,mBAAmB;AAC/B,iBAAA;AACF,aAAA;AACD,YAAA,KAAK,EAAE;AACL,gBAAA,cAAc,EAAE,OAAO;AACvB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,WAAW,GAA+B;AACrD,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,aAAa;AACxB,QAAA,eAAe,EAAE;AACf,YAAA,SAAS,EAAE;AACT,gBAAA,cAAc,EAAE,WAAW;AAC3B,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AACjB,iBAAA;AACF,aAAA;AACD,YAAA,OAAO,EAAE;AACP,gBAAA,cAAc,EAAE,SAAS;AACzB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,OAAO,EAAE;AACP,gBAAA,cAAc,EAAE,SAAS;AACzB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,OAAO,EAAE;AACP,gBAAA,cAAc,EAAE,SAAS;AACzB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,KAAK,EAAE;AACL,gBAAA,cAAc,EAAE,OAAO;AACvB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,KAAK,EAAE;AACL,gBAAA,cAAc,EAAE,OAAO;AACvB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM7B,eAAa,GAA+B;AACvD,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,eAAe;AAC1B,QAAA,eAAe,EAAE;AACf,YAAA,IAAI,EAAE;AACJ,gBAAA,cAAc,EAAE,MAAM;AACtB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,OAAO,EAAE;AACP,gBAAA,cAAc,EAAE,SAAS;AACzB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF;;;;;;;;;;;;;ACpRD;;;;;;AAMG;AAQI,MAAMC,QAAM,GAAuB;AACxC,IAAA,aAAa,EAAE,QAAQ;AACvB,IAAA,MAAM,EAAE;AACN,QAAA,YAAY,EAAE,kBAAkB;AAChC,QAAA,UAAU,EAAE,IAAI;AAChB,QAAA,cAAc,EAAE,QAAQ;AACxB,QAAA,IAAI,EAAE;AACJ,YAAA,IAAI,EAAE,QAAQ;AACf,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAMC,OAAK,GAA0B;AAC1C,IAAA,aAAa,EAAE,OAAO;AACtB,IAAA,MAAM,EAAE;AACN,QAAA,cAAc,EAAE,OAAO;AACvB,QAAA,QAAQ,EAAE,IAAI;AACd,QAAA,IAAI,EAAE;AACJ,YAAA,IAAI,EAAE,QAAQ;AACf,SAAA;AACF,KAAA;AACD,IAAA,YAAY,EAAE,IAAI;CACnB,CAAC;AAEK,MAAM4B,aAAW,GAA0B;AAChD,IAAA,aAAa,EAAE,aAAa;AAC5B,IAAA,MAAM,EAAE;AACN,QAAA,cAAc,EAAE,aAAa;AAC7B,QAAA,QAAQ,EAAE,IAAI;AACd,QAAA,IAAI,EAAE;AACJ,YAAA,IAAI,EAAE,QAAQ;AACf,SAAA;AACF,KAAA;AACD,IAAA,YAAY,EAAE,IAAI;CACnB,CAAC;AAEK,MAAM,QAAQ,GAA4B;AAC/C,IAAA,aAAa,EAAE,CAAC,SAAS,EAAE,UAAU,CAAC;AACtC,IAAA,MAAM,EAAE;AACN,QAAA,cAAc,EAAE,UAAU;AAC1B,QAAA,IAAI,EAAE;AACJ,YAAA,IAAI,EAAE,QAAQ;AACf,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,QAAQ,GAA4B;AAC/C,IAAA,aAAa,EAAE,CAAC,SAAS,EAAE,UAAU,CAAC;AACtC,IAAA,MAAM,EAAE;AACN,QAAA,cAAc,EAAE,UAAU;AAC1B,QAAA,IAAI,EAAE;AACJ,YAAA,IAAI,EAAE,UAAU;AACjB,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,WAAW,GAA4B;AAClD,IAAA,aAAa,EAAE,CAAC,SAAS,EAAE,aAAa,CAAC;AACzC,IAAA,MAAM,EAAE;AACN,QAAA,cAAc,EAAE,aAAa;AAC7B,QAAA,IAAI,EAAE;AACJ,YAAA,IAAI,EAAE,QAAQ;AACf,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,WAAW,GAA4B;AAClD,IAAA,aAAa,EAAE,CAAC,SAAS,EAAE,aAAa,CAAC;AACzC,IAAA,MAAM,EAAE;AACN,QAAA,cAAc,EAAE,aAAa;AAC7B,QAAA,IAAI,EAAE;AACJ,YAAA,IAAI,EAAE,QAAQ;AACf,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,GAAG,GAA4B;AAC1C,IAAA,aAAa,EAAE,CAAC,SAAS,EAAE,KAAK,CAAC;AACjC,IAAA,MAAM,EAAE;AACN,QAAA,cAAc,EAAE,KAAK;AACrB,QAAA,IAAI,EAAE;AACJ,YAAA,IAAI,EAAE,QAAQ;AACf,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,OAAO,GAA4B;AAC9C,IAAA,aAAa,EAAE,CAAC,SAAS,EAAE,SAAS,CAAC;AACrC,IAAA,MAAM,EAAE;AACN,QAAA,cAAc,EAAE,SAAS;AACzB,QAAA,IAAI,EAAE;AACJ,YAAA,IAAI,EAAE,QAAQ;AACf,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,MAAM,GAA4B;AAC7C,IAAA,aAAa,EAAE,CAAC,SAAS,EAAE,QAAQ,CAAC;AACpC,IAAA,MAAM,EAAE;AACN,QAAA,cAAc,EAAE,SAAS;AACzB,QAAA,IAAI,EAAE;AACJ,YAAA,IAAI,EAAE,QAAQ;AACf,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,UAAU,GAA4B;AACjD,IAAA,aAAa,EAAE,CAAC,SAAS,EAAE,YAAY,CAAC;AACxC,IAAA,MAAM,EAAE;AACN,QAAA,cAAc,EAAE,YAAY;AAC5B,QAAA,IAAI,EAAE;AACJ,YAAA,IAAI,EAAE,MAAM;AACZ,YAAA,aAAa,EAAE,CAAC,MAAM,EAAE,UAAU,CAAC;AACpC,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAMC,YAAU,GAA4B;AACjD,IAAA,aAAa,EAAE,YAAY;AAC3B,IAAA,MAAM,EAAE;AACN,QAAA,cAAc,EAAE,aAAa;AAC7B,QAAA,QAAQ,EAAE,IAAI;AACd,QAAA,IAAI,EAAE;AACJ,YAAA,IAAI,EAAE,QAAQ;AACf,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAMC,iBAAe,GAA4B;AACtD,IAAA,aAAa,EAAE,CAAC,SAAS,EAAE,iBAAiB,CAAC;AAC7C,IAAA,MAAM,EAAE;AACN,QAAA,cAAc,EAAE,iBAAiB;AACjC,QAAA,IAAI,EAAE;AACJ,YAAA,IAAI,EAAE,QAAQ;AACf,SAAA;AACF,KAAA;CACF;;ACtJD;;;;;;AAMG;AASH;MACa,WAAW,CAAA;AAGtB;;;AAGG;AACH,IAAA,WAAA,CAAY,MAAsC,EAAA;AAChD,QAAA,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;KACtB;AAED;;;;AAIG;IACH,IAAI,CACF,WAAmB,EACnB,OAAmC,EAAA;AAEnC,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,WAAW,EAAE,OAAO,EAAE,EACxBC,mBAAiB,CAClB,CAAC;KACH;AACF,CAAA;AACD;AACA,MAAM1B,YAAU,GAAGC,qBAAU,CAAC,gBAAgB,CAACC,SAAO,cAAc,KAAK,CAAC,CAAC;AAE3E,MAAMwB,mBAAiB,GAA6B;AAClD,IAAA,IAAI,EAAE,qDAAqD;AAC3D,IAAA,UAAU,EAAE,KAAK;AACjB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE;YACH,UAAU,EAAEC,QAAgB;AAC7B,SAAA;AACD,QAAA,OAAO,EAAE;YACP,UAAU,EAAEvB,eAAqB;AAClC,SAAA;AACF,KAAA;AACD,IAAA,eAAe,EAAE;AACf,QAAAE,QAAmB;AACnB,QAAAsB,QAAmB;AACnB,QAAAC,WAAsB;AACtB,QAAAC,WAAsB;AACtB,QAAAC,GAAc;AACd,QAAAC,OAAkB;AAClB,QAAAC,MAAiB;AACjB,QAAAC,UAAqB;AACrB,QAAAC,YAAqB;AACrB,QAAAC,iBAA0B;AAC3B,KAAA;IACD,aAAa,EAAE,CAAC7B,OAAgB,EAAE8B,aAAsB,CAAC;AACzD,IAAA,gBAAgB,EAAE,CAAC5B,QAAiB,CAAC;gBACrCT,YAAU;CACX;;ACvED;;;;;;AAMG;AAQH;AACa,MAAAsC,gCAA+B,SAAQrC,qBAAU,CAAC,aAAa,CAAA;AAI1E;;;;AAIG;IACH,WACE,CAAA,UAA4B,EAC5B,OAA+C,EAAA;QAE/C,IAAI,UAAU,KAAK,SAAS,EAAE;AAC5B,YAAA,MAAM,IAAI,KAAK,CAAC,6BAA6B,CAAC,CAAC;AAChD,SAAA;;QAGD,IAAI,CAAC,OAAO,EAAE;YACZ,OAAO,GAAG,EAAE,CAAC;AACd,SAAA;AACD,QAAA,MAAM,QAAQ,GAA0C;AACtD,YAAA,kBAAkB,EAAE,iCAAiC;SACtD,CAAC;QAEF,MAAM,cAAc,GAAG,CAAA,8BAAA,CAAgC,CAAC;QACxD,MAAM,eAAe,GACnB,OAAO,CAAC,gBAAgB,IAAI,OAAO,CAAC,gBAAgB,CAAC,eAAe;cAChE,GAAG,OAAO,CAAC,gBAAgB,CAAC,eAAe,CAAI,CAAA,EAAA,cAAc,CAAE,CAAA;AACjE,cAAE,CAAA,EAAG,cAAc,CAAA,CAAE,CAAC;AAE1B,QAAA,MAAM,mBAAmB,GACpB,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,QAAQ,GACR,OAAO,CAAA,EAAA,EACV,gBAAgB,EAAE;gBAChB,eAAe;aAChB,EACD,OAAO,EAAE,OAAO,CAAC,QAAQ,IAAI,8BAA8B,GAC5D,CAAC;QACF,KAAK,CAAC,mBAAmB,CAAC,CAAC;;AAE3B,QAAA,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;;QAG7B,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC,KAAK,IAAI,8BAA8B,CAAC;KAC9D;AACF;;AC7DD;;;;;;AAMG;AAUH;AACM,MAAOsC,yBAAwB,SAAQD,gCAA8B,CAAA;AACzE;;;;AAIG;IACH,WACE,CAAA,UAA4B,EAC5B,OAA+C,EAAA;AAE/C,QAAA,KAAK,CAAC,UAAU,EAAE,OAAO,CAAC,CAAC;QAC3B,IAAI,CAAC,OAAO,GAAG,IAAI,WAAW,CAAC,IAAI,CAAC,CAAC;KACtC;AAGF;;AChCD;;;;;;AAMG;AAgEH;AACA,IAAY,qBAGX,CAAA;AAHD,CAAA,UAAY,qBAAqB,EAAA;;AAE/B,IAAA,qBAAA,CAAA,yBAAA,CAAA,GAAA,YAAsC,CAAA;AACxC,CAAC,EAHW,qBAAqB,KAArB,qBAAqB,GAGhC,EAAA,CAAA,CAAA,CAAA;AAWD;AACA,IAAY,gBAMX,CAAA;AAND,CAAA,UAAY,gBAAgB,EAAA;AAC1B,IAAA,gBAAA,CAAA,cAAA,CAAA,GAAA,cAA6B,CAAA;AAC7B,IAAA,gBAAA,CAAA,cAAA,CAAA,GAAA,cAA6B,CAAA;AAC7B,IAAA,gBAAA,CAAA,QAAA,CAAA,GAAA,QAAiB,CAAA;AACjB,IAAA,gBAAA,CAAA,SAAA,CAAA,GAAA,SAAmB,CAAA;AACnB,IAAA,gBAAA,CAAA,YAAA,CAAA,GAAA,YAAyB,CAAA;AAC3B,CAAC,EANW,gBAAgB,KAAhB,gBAAgB,GAM3B,EAAA,CAAA,CAAA,CAAA;AAeD;AACA,IAAY,eAcX,CAAA;AAdD,CAAA,UAAY,eAAe,EAAA;AACzB,IAAA,eAAA,CAAA,OAAA,CAAA,GAAA,OAAe,CAAA;AACf,IAAA,eAAA,CAAA,OAAA,CAAA,GAAA,OAAe,CAAA;AACf,IAAA,eAAA,CAAA,SAAA,CAAA,GAAA,SAAmB,CAAA;AACnB,IAAA,eAAA,CAAA,gBAAA,CAAA,GAAA,gBAAiC,CAAA;AACjC,IAAA,eAAA,CAAA,gBAAA,CAAA,GAAA,gBAAiC,CAAA;AACjC,IAAA,eAAA,CAAA,SAAA,CAAA,GAAA,SAAmB,CAAA;AACnB,IAAA,eAAA,CAAA,cAAA,CAAA,GAAA,cAA6B,CAAA;AAC7B,IAAA,eAAA,CAAA,aAAA,CAAA,GAAA,aAA2B,CAAA;AAC3B,IAAA,eAAA,CAAA,aAAA,CAAA,GAAA,aAA2B,CAAA;AAC3B,IAAA,eAAA,CAAA,OAAA,CAAA,GAAA,OAAe,CAAA;AACf,IAAA,eAAA,CAAA,YAAA,CAAA,GAAA,YAAyB,CAAA;AACzB,IAAA,eAAA,CAAA,WAAA,CAAA,GAAA,WAAuB,CAAA;AACvB,IAAA,eAAA,CAAA,eAAA,CAAA,GAAA,eAA+B,CAAA;AACjC,CAAC,EAdW,eAAe,KAAf,eAAe,GAc1B,EAAA,CAAA,CAAA;;AC1HD;;;;;;AAMG;AAII,MAAM,0BAA0B,GAA+B;AACpE,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,4BAA4B;AACvC,QAAA,eAAe,EAAE;AACf,YAAA,KAAK,EAAE;AACL,gBAAA,cAAc,EAAE,OAAO;AACvB,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,WAAW;AACjB,4BAAA,SAAS,EAAE,kBAAkB;AAC9B,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,gBAAgB,GAA+B;AAC1D,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,kBAAkB;AAC7B,QAAA,eAAe,EAAE;AACf,YAAA,mBAAmB,EAAE;AACnB,gBAAA,cAAc,EAAE,qBAAqB;AACrC,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,SAAS;AAChB,iBAAA;AACF,aAAA;AACD,YAAA,UAAU,EAAE;AACV,gBAAA,cAAc,EAAE,YAAY;AAC5B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,SAAS,EAAE;AACT,gBAAA,cAAc,EAAE,WAAW;AAC3B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,IAAI,EAAE;AACJ,gBAAA,cAAc,EAAE,MAAM;AACtB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,WAAW;AACjB,oBAAA,SAAS,EAAE,mBAAmB;AAC/B,iBAAA;AACF,aAAA;AACD,YAAA,kBAAkB,EAAE;AAClB,gBAAA,cAAc,EAAE,oBAAoB;AACpC,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,QAAQ,EAAE;AACR,gBAAA,cAAc,EAAE,UAAU;AAC1B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,WAAW,EAAE;AACX,gBAAA,cAAc,EAAE,aAAa;AAC7B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,IAAI,EAAE;AACJ,gBAAA,cAAc,EAAE,MAAM;AACtB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,sBAAsB,EAAE;AACtB,gBAAA,cAAc,EAAE,wBAAwB;AACxC,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,MAAM;AACZ,oBAAA,aAAa,EAAE;wBACb,MAAM;wBACN,SAAS;wBACT,OAAO;wBACP,SAAS;wBACT,SAAS;wBACT,OAAO;AACR,qBAAA;AACF,iBAAA;AACF,aAAA;AACD,YAAA,yBAAyB,EAAE;AACzB,gBAAA,cAAc,EAAE,2BAA2B;AAC3C,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,MAAM;AACZ,4BAAA,aAAa,EAAE;gCACb,MAAM;gCACN,SAAS;gCACT,OAAO;gCACP,SAAS;gCACT,SAAS;gCACT,OAAO;AACR,6BAAA;AACF,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA;AACD,YAAA,oBAAoB,EAAE;AACpB,gBAAA,cAAc,EAAE,sBAAsB;AACtC,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,WAAW;AACjB,4BAAA,SAAS,EAAE,oBAAoB;AAChC,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA;AACD,YAAA,EAAE,EAAE;AACF,gBAAA,cAAc,EAAE,IAAI;AACpB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,UAAU,EAAE;AACV,gBAAA,cAAc,EAAE,YAAY;AAC5B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,WAAW;AACjB,4BAAA,SAAS,EAAE,mBAAmB;AAC/B,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,iBAAiB,GAA+B;AAC3D,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,mBAAmB;AAC9B,QAAA,eAAe,EAAE;AACf,YAAA,KAAK,EAAE;AACL,gBAAA,cAAc,EAAE,OAAO;AACvB,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,cAAc,EAAE;AACd,gBAAA,cAAc,EAAE,gBAAgB;AAChC,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,kBAAkB,GAA+B;AAC5D,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,oBAAoB;AAC/B,QAAA,eAAe,EAAE;AACf,YAAA,SAAS,EAAE;AACT,gBAAA,cAAc,EAAE,WAAW;AAC3B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AACjB,iBAAA;AACF,aAAA;AACD,YAAA,SAAS,EAAE;AACT,gBAAA,cAAc,EAAE,WAAW;AAC3B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AACjB,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM7C,eAAa,GAA+B;AACvD,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,eAAe;AAC1B,QAAA,eAAe,EAAE;AACf,YAAA,IAAI,EAAE;AACJ,gBAAA,cAAc,EAAE,MAAM;AACtB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,OAAO,EAAE;AACP,gBAAA,cAAc,EAAE,SAAS;AACzB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF;;;;;;;;;;;ACvND;;;;;;AAMG;AAQI,MAAMC,QAAM,GAAuB;AACxC,IAAA,aAAa,EAAE,QAAQ;AACvB,IAAA,MAAM,EAAE;AACN,QAAA,YAAY,EAAE,kBAAkB;AAChC,QAAA,UAAU,EAAE,IAAI;AAChB,QAAA,cAAc,EAAE,QAAQ;AACxB,QAAA,IAAI,EAAE;AACJ,YAAA,IAAI,EAAE,QAAQ;AACf,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAMC,OAAK,GAA0B;AAC1C,IAAA,aAAa,EAAE,OAAO;AACtB,IAAA,MAAM,EAAE;AACN,QAAA,cAAc,EAAE,OAAO;AACvB,QAAA,QAAQ,EAAE,IAAI;AACd,QAAA,IAAI,EAAE;AACJ,YAAA,IAAI,EAAE,QAAQ;AACf,SAAA;AACF,KAAA;AACD,IAAA,YAAY,EAAE,IAAI;CACnB,CAAC;AAEK,MAAM4B,aAAW,GAA0B;AAChD,IAAA,aAAa,EAAE,aAAa;AAC5B,IAAA,MAAM,EAAE;AACN,QAAA,cAAc,EAAE,aAAa;AAC7B,QAAA,QAAQ,EAAE,IAAI;AACd,QAAA,IAAI,EAAE;AACJ,YAAA,IAAI,EAAE,QAAQ;AACf,SAAA;AACF,KAAA;AACD,IAAA,YAAY,EAAE,IAAI;CACnB,CAAC;AAEK,MAAMC,YAAU,GAA4B;AACjD,IAAA,aAAa,EAAE,YAAY;AAC3B,IAAA,MAAM,EAAE;AACN,QAAA,cAAc,EAAE,aAAa;AAC7B,QAAA,QAAQ,EAAE,IAAI;AACd,QAAA,IAAI,EAAE;AACJ,YAAA,IAAI,EAAE,QAAQ;AACf,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,eAAe,GAA4B;AACtD,IAAA,aAAa,EAAE,CAAC,SAAS,EAAE,iBAAiB,CAAC;AAC7C,IAAA,MAAM,EAAE;AACN,QAAA,cAAc,EAAE,iBAAiB;AACjC,QAAA,IAAI,EAAE;AACJ,YAAA,IAAI,EAAE,QAAQ;AACf,SAAA;AACF,KAAA;CACF;;ACrED;;;;;;AAMG;AAYH;MACa,qBAAqB,CAAA;AAGhC;;;AAGG;AACH,IAAA,WAAA,CAAY,MAAsC,EAAA;AAChD,QAAA,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;KACtB;AAED;;;;AAIG;IACH,IAAI,CACF,WAAmB,EACnB,OAA6C,EAAA;AAE7C,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,WAAW,EAAE,OAAO,EAAE,EACxBE,mBAAiB,CAClB,CAAC;KACH;AACF,CAAA;AACD;AACA,MAAM1B,YAAU,GAAGC,qBAAU,CAAC,gBAAgB,CAACC,SAAO,cAAc,KAAK,CAAC,CAAC;AAE3E,MAAMwB,mBAAiB,GAA6B;AAClD,IAAA,IAAI,EAAE,+DAA+D;AACrE,IAAA,UAAU,EAAE,KAAK;AACjB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE;YACH,UAAU,EAAEc,0BAAkC;AAC/C,SAAA;AACD,QAAA,OAAO,EAAE;YACP,UAAU,EAAEpC,eAAqB;AAClC,SAAA;AACF,KAAA;IACD,eAAe,EAAE,CAAC+B,YAAqB,EAAEC,eAA0B,CAAC;IACpE,aAAa,EAAE,CAAC7B,OAAgB,EAAE8B,aAAsB,CAAC;AACzD,IAAA,gBAAgB,EAAE,CAAC5B,QAAiB,CAAC;gBACrCT,YAAU;CACX;;AC/DD;;;;;;AAMG;AAQH;AACa,MAAAsC,gCAA+B,SAAQrC,qBAAU,CAAC,aAAa,CAAA;AAI1E;;;;AAIG;IACH,WACE,CAAA,UAA4B,EAC5B,OAA+C,EAAA;QAE/C,IAAI,UAAU,KAAK,SAAS,EAAE;AAC5B,YAAA,MAAM,IAAI,KAAK,CAAC,6BAA6B,CAAC,CAAC;AAChD,SAAA;;QAGD,IAAI,CAAC,OAAO,EAAE;YACZ,OAAO,GAAG,EAAE,CAAC;AACd,SAAA;AACD,QAAA,MAAM,QAAQ,GAA0C;AACtD,YAAA,kBAAkB,EAAE,iCAAiC;SACtD,CAAC;QAEF,MAAM,cAAc,GAAG,CAAA,0CAAA,CAA4C,CAAC;QACpE,MAAM,eAAe,GACnB,OAAO,CAAC,gBAAgB,IAAI,OAAO,CAAC,gBAAgB,CAAC,eAAe;cAChE,GAAG,OAAO,CAAC,gBAAgB,CAAC,eAAe,CAAI,CAAA,EAAA,cAAc,CAAE,CAAA;AACjE,cAAE,CAAA,EAAG,cAAc,CAAA,CAAE,CAAC;AAE1B,QAAA,MAAM,mBAAmB,GACpB,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,QAAQ,GACR,OAAO,CAAA,EAAA,EACV,gBAAgB,EAAE;gBAChB,eAAe;aAChB,EACD,OAAO,EAAE,OAAO,CAAC,QAAQ,IAAI,8BAA8B,GAC5D,CAAC;QACF,KAAK,CAAC,mBAAmB,CAAC,CAAC;;AAE3B,QAAA,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;;QAG7B,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC,KAAK,IAAI,8BAA8B,CAAC;KAC9D;AACF;;AC7DD;;;;;;AAMG;AAUH;AACM,MAAOsC,yBAAwB,SAAQD,gCAA8B,CAAA;AACzE;;;;AAIG;IACH,WACE,CAAA,UAA4B,EAC5B,OAA+C,EAAA;AAE/C,QAAA,KAAK,CAAC,UAAU,EAAE,OAAO,CAAC,CAAC;QAC3B,IAAI,CAAC,iBAAiB,GAAG,IAAI,qBAAqB,CAAC,IAAI,CAAC,CAAC;KAC1D;AAGF;;AChCD;;;;;;AAMG;AAsCH;AACA,IAAY,8BAGX,CAAA;AAHD,CAAA,UAAY,8BAA8B,EAAA;;AAExC,IAAA,8BAAA,CAAA,iCAAA,CAAA,GAAA,oBAAsD,CAAA;AACxD,CAAC,EAHW,8BAA8B,KAA9B,8BAA8B,GAGzC,EAAA,CAAA,CAAA,CAAA;AAWD;AACA,IAAY,4BAIX,CAAA;AAJD,CAAA,UAAY,4BAA4B,EAAA;AACtC,IAAA,4BAAA,CAAA,UAAA,CAAA,GAAA,UAAqB,CAAA;AACrB,IAAA,4BAAA,CAAA,QAAA,CAAA,GAAA,QAAiB,CAAA;AACjB,IAAA,4BAAA,CAAA,KAAA,CAAA,GAAA,KAAW,CAAA;AACb,CAAC,EAJW,4BAA4B,KAA5B,4BAA4B,GAIvC,EAAA,CAAA,CAAA;;AChED;;;;;;AAMG;AAII,MAAM,yBAAyB,GAA+B;AACnE,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,2BAA2B;AACtC,QAAA,eAAe,EAAE;AACf,YAAA,KAAK,EAAE;AACL,gBAAA,cAAc,EAAE,OAAO;AACvB,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,WAAW;AACjB,4BAAA,SAAS,EAAE,iBAAiB;AAC7B,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,eAAe,GAA+B;AACzD,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,iBAAiB;AAC5B,QAAA,eAAe,EAAE;AACf,YAAA,EAAE,EAAE;AACF,gBAAA,cAAc,EAAE,IAAI;AACpB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,IAAI,EAAE;AACJ,gBAAA,cAAc,EAAE,MAAM;AACtB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,IAAI,EAAE;AACJ,gBAAA,cAAc,EAAE,MAAM;AACtB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,cAAc,EAAE;AACd,gBAAA,cAAc,EAAE,gBAAgB;AAChC,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,UAAU,EAAE;AACV,gBAAA,cAAc,EAAE,YAAY;AAC5B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,WAAW;AACjB,oBAAA,SAAS,EAAE,qBAAqB;AACjC,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,mBAAmB,GAA+B;AAC7D,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,qBAAqB;AAChC,QAAA,eAAe,EAAE;AACf,YAAA,mBAAmB,EAAE;AACnB,gBAAA,cAAc,EAAE,qBAAqB;AACrC,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,aAAa,GAA+B;AACvD,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,eAAe;AAC1B,QAAA,eAAe,EAAE;AACf,YAAA,IAAI,EAAE;AACJ,gBAAA,cAAc,EAAE,MAAM;AACtB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,OAAO,EAAE;AACP,gBAAA,cAAc,EAAE,SAAS;AACzB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF;;;;;;;;;;AC1GD;;;;;;AAMG;AAQI,MAAM,MAAM,GAAuB;AACxC,IAAA,aAAa,EAAE,QAAQ;AACvB,IAAA,MAAM,EAAE;AACN,QAAA,YAAY,EAAE,kBAAkB;AAChC,QAAA,UAAU,EAAE,IAAI;AAChB,QAAA,cAAc,EAAE,QAAQ;AACxB,QAAA,IAAI,EAAE;AACJ,YAAA,IAAI,EAAE,QAAQ;AACf,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,KAAK,GAA0B;AAC1C,IAAA,aAAa,EAAE,OAAO;AACtB,IAAA,MAAM,EAAE;AACN,QAAA,cAAc,EAAE,OAAO;AACvB,QAAA,QAAQ,EAAE,IAAI;AACd,QAAA,IAAI,EAAE;AACJ,YAAA,IAAI,EAAE,QAAQ;AACf,SAAA;AACF,KAAA;AACD,IAAA,YAAY,EAAE,IAAI;CACnB,CAAC;AAEK,MAAM,WAAW,GAA0B;AAChD,IAAA,aAAa,EAAE,aAAa;AAC5B,IAAA,MAAM,EAAE;AACN,QAAA,cAAc,EAAE,aAAa;AAC7B,QAAA,QAAQ,EAAE,IAAI;AACd,QAAA,IAAI,EAAE;AACJ,YAAA,IAAI,EAAE,QAAQ;AACf,SAAA;AACF,KAAA;AACD,IAAA,YAAY,EAAE,IAAI;CACnB,CAAC;AAEK,MAAM,UAAU,GAA4B;AACjD,IAAA,aAAa,EAAE,YAAY;AAC3B,IAAA,MAAM,EAAE;AACN,QAAA,cAAc,EAAE,aAAa;AAC7B,QAAA,QAAQ,EAAE,IAAI;AACd,QAAA,IAAI,EAAE;AACJ,YAAA,IAAI,EAAE,QAAQ;AACf,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,SAAS,GAA4B;AAChD,IAAA,aAAa,EAAE,CAAC,SAAS,EAAE,WAAW,CAAC;AACvC,IAAA,MAAM,EAAE;AACN,QAAA,cAAc,EAAE,WAAW;AAC3B,QAAA,IAAI,EAAE;AACJ,YAAA,IAAI,EAAE,QAAQ;AACf,SAAA;AACF,KAAA;CACF;;ACrED;;;;;;AAMG;AAYH;MACa,oBAAoB,CAAA;AAG/B;;;AAGG;AACH,IAAA,WAAA,CAAY,MAAsC,EAAA;AAChD,QAAA,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;KACtB;AAED;;;;AAIG;IACH,IAAI,CACF,WAAmB,EACnB,OAA4C,EAAA;AAE5C,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,WAAW,EAAE,OAAO,EAAE,EACxB,iBAAiB,CAClB,CAAC;KACH;AACF,CAAA;AACD;AACA,MAAM,UAAU,GAAGrC,qBAAU,CAAC,gBAAgB,CAAC,OAAO,cAAc,KAAK,CAAC,CAAC;AAE3E,MAAM,iBAAiB,GAA6B;AAClD,IAAA,IAAI,EAAE,8DAA8D;AACpE,IAAA,UAAU,EAAE,KAAK;AACjB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE;YACH,UAAU,EAAEwC,yBAAiC;AAC9C,SAAA;AACD,QAAA,OAAO,EAAE;YACP,UAAU,EAAErC,aAAqB;AAClC,SAAA;AACF,KAAA;IACD,eAAe,EAAE,CAAC+B,UAAqB,EAAEO,SAAoB,CAAC;IAC9D,aAAa,EAAE,CAACnC,KAAgB,EAAE8B,WAAsB,CAAC;AACzD,IAAA,gBAAgB,EAAE,CAAC5B,MAAiB,CAAC;IACrC,UAAU;CACX;;AC/DD;;;;;;AAMG;AAQH;AACa,MAAA,8BAA+B,SAAQR,qBAAU,CAAC,aAAa,CAAA;AAI1E;;;;AAIG;IACH,WACE,CAAA,UAAqC,EACrC,OAA+C,EAAA;QAE/C,IAAI,UAAU,KAAK,SAAS,EAAE;AAC5B,YAAA,MAAM,IAAI,KAAK,CAAC,6BAA6B,CAAC,CAAC;AAChD,SAAA;;QAGD,IAAI,CAAC,OAAO,EAAE;YACZ,OAAO,GAAG,EAAE,CAAC;AACd,SAAA;AACD,QAAA,MAAM,QAAQ,GAA0C;AACtD,YAAA,kBAAkB,EAAE,iCAAiC;SACtD,CAAC;QAEF,MAAM,cAAc,GAAG,CAAA,yCAAA,CAA2C,CAAC;QACnE,MAAM,eAAe,GACnB,OAAO,CAAC,gBAAgB,IAAI,OAAO,CAAC,gBAAgB,CAAC,eAAe;cAChE,GAAG,OAAO,CAAC,gBAAgB,CAAC,eAAe,CAAI,CAAA,EAAA,cAAc,CAAE,CAAA;AACjE,cAAE,CAAA,EAAG,cAAc,CAAA,CAAE,CAAC;AAE1B,QAAA,MAAM,mBAAmB,GACpB,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,QAAQ,GACR,OAAO,CAAA,EAAA,EACV,gBAAgB,EAAE;gBAChB,eAAe;aAChB,EACD,OAAO,EAAE,OAAO,CAAC,QAAQ,IAAI,8BAA8B,GAC5D,CAAC;QACF,KAAK,CAAC,mBAAmB,CAAC,CAAC;;AAE3B,QAAA,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;;QAG7B,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC,KAAK,IAAI,8BAA8B,CAAC;KAC9D;AACF;;AC7DD;;;;;;AAMG;AAUH;AACM,MAAO,uBAAwB,SAAQ,8BAA8B,CAAA;AACzE;;;;AAIG;IACH,WACE,CAAA,UAAqC,EACrC,OAA+C,EAAA;AAE/C,QAAA,KAAK,CAAC,UAAU,EAAE,OAAO,CAAC,CAAC;QAC3B,IAAI,CAAC,gBAAgB,GAAG,IAAI,oBAAoB,CAAC,IAAI,CAAC,CAAC;KACxD;AAGF;;ACKD,MAAM,mBAAmB,GAAG,uCAAuC,CAAC;AAUpE;;AAEG;MACU,kBAAkB,CAAA;AAK7B;;;;AAIG;IACH,WAAY,CAAA,eAAgC,EAAE,OAAmC,EAAA;;AAC/E,QAAA,IAAI,KAAK,CAAC;AACV,QAAA,IAAI,OAAO,KAAP,IAAA,IAAA,OAAO,uBAAP,OAAO,CAAE,QAAQ,EAAE;YACrB,KAAK,GAAG,CAAG,EAAA,OAAO,KAAP,IAAA,IAAA,OAAO,uBAAP,OAAO,CAAE,QAAQ,CAAA,SAAA,CAAW,CAAC;AACzC,SAAA;AACD,QAAA,MAAM,iBAAiB,GAAG;AACxB,YAAA,gBAAgB,EAAE,KAAK;SACxB,CAAC;AACF,QAAA,MAAM,cAAc,GAAG,CAA0B,uBAAA,EAAA,WAAW,EAAE,CAAC;QAC/D,MAAM,eAAe,GACnB,CAAA,OAAO,aAAP,OAAO,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAP,OAAO,CAAE,gBAAgB,MAAI,OAAO,KAAA,IAAA,IAAP,OAAO,KAAP,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,OAAO,CAAE,gBAAgB,CAAC,eAAe,CAAA;AACpE,cAAE,CAAA,EAAG,OAAO,KAAA,IAAA,IAAP,OAAO,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAP,OAAO,CAAE,gBAAgB,CAAC,eAAe,CAAA,CAAA,EAAI,cAAc,CAAE,CAAA;AAClE,cAAE,CAAA,EAAG,cAAc,CAAA,CAAE,CAAC;AAC1B,QAAA,MAAM,oBAAoB,GACrB,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,OAAO,KACV,KAAK,EAAE,OAAO,KAAP,IAAA,IAAA,OAAO,uBAAP,OAAO,CAAE,QAAQ,EACxB,QAAQ,EAAE,OAAO,KAAA,IAAA,IAAP,OAAO,KAAP,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,OAAO,CAAE,QAAQ,EAC3B,gBAAgB,EAAE,MAAA,iBAAiB,KAAA,IAAA,IAAjB,iBAAiB,KAAjB,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,iBAAiB,CAAE,gBAAgB,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAI,mBAAmB,EAC5E,UAAU,EAAE,eAAe,EAC3B,gBAAgB,EAAE;gBAChB,eAAe;AAChB,aAAA,EAAA,CACF,CAAC;AAEF,QAAA,IAAI,CAAC,cAAc,GAAG,IAAI0C,yBAAsB,CAC9CC,uBAAiB,CAAC,uBAAuB,EACzC,oBAAoB,CACrB,CAAC;AAEF,QAAA,IAAI,CAAC,kBAAkB,GAAG,IAAIC,yBAAiC,CAC7DC,qBAA2B,CAAC,uBAAuB,EACnD,oBAAoB,CACrB,CAAC;AAEF,QAAA,IAAI,CAAC,iBAAiB,GAAG,IAAIC,uBAAgC,CAC3DC,8BAA0B,CAAC,+BAA+B,EAC1D,oBAAoB,CACrB,CAAC;KACH;AAED;;;;;;AAMG;IACH,MAAM,aAAa,CACjB,WAAmB,EACnB,WAAqB,EACrB,OAAA,GAA+B,EAAE;;AAEjC,QAAA,OAAO,aAAa,CAAC,QAAQ,CAC3B,kCAAkC,EAClC,OAAO,EACP,OAAO,cAAc,KAAI;YACvB,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,IAAI,CACrD,WAAW,EACX,wBAAwB,CAAC,WAAW,EAAE,cAAc,CAAC,CACtD,CAAC;AAEF,YAAA,OAAO,yBAAyB,CAAC,QAAQ,CAAC,CAAC;AAC7C,SAAC,CACF,CAAC;KACH;AAED;;AAEG;AACY,IAAA,8BAA8B,CAC3C,WAAmB,EACnB,OAAA,GAAwC,EAAE,EAAA;;AAE1C,YAAA,MAAM,eAAe,GAAG,MAAMC,aAAA,CAAA,aAAa,CAAC,QAAQ,CAClD,mDAAmD,EACnD,OAAO,EACP,OAAO,cAAc,KACnB,IAAI,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,IAAI,CAC5C,WAAW,EACX,0CAA0C,CAAC,cAAc,CAAC,CAC3D,CACJ,CAAA,CAAC;AACF,YAAA,MAAA,MAAAA,aAAA,CAAM,oCAAoC,CAAC,eAAe,CAAC,KAAK,CAAC,CAAA,CAAC;SACnE,CAAA,CAAA;AAAA,KAAA;AAED;;AAEG;IACY,4BAA4B,CACzC,WAAmB,EACnB,OAAsC,EAAA;;;;AAEtC,gBAAA,KAA4B,IAAA,EAAA,GAAA,IAAA,EAAA,EAAA,GAAAC,mBAAA,CAAA,IAAI,CAAC,8BAA8B,CAAC,WAAW,EAAE,OAAO,CAAC,CAAA,EAAA,EAAA,EAAA,EAAA,GAAA,MAAAD,aAAA,CAAA,EAAA,CAAA,IAAA,EAAA,CAAA,EAAA,EAAA,GAAA,EAAA,CAAA,IAAA,EAAA,CAAA,EAAA,GAAA;oBAAzD,EAAyD,GAAA,EAAA,CAAA,KAAA,CAAA;oBAAzD,EAAyD,GAAA,KAAA,CAAA;;wBAA1E,MAAM,OAAO,KAAA,CAAA;AACtB,wBAAA,IAAI,OAAO,EAAE;4BACX,MAAAA,aAAA,CAAA,OAAOE,sBAAA,CAAAD,oBAAA,OAAO,CAAA,CAAA,CAAA,CAAC;AAChB,yBAAA;;;;;AACF,iBAAA;;;;;;;;;SACF,CAAA,CAAA;AAAA,KAAA;AAED;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgCG;IACH,qBAAqB,CACnB,WAAmB,EACnB,OAAsC,EAAA;QAEtC,MAAM,IAAI,GAAG,IAAI,CAAC,4BAA4B,CAAC,WAAW,EAAE,OAAO,CAAC,CAAC;QACrE,OAAO;AACL;;AAEG;YACH,IAAI,GAAA;AACF,gBAAA,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;aACpB;AACD;;AAEG;YACH,CAAC,MAAM,CAAC,aAAa,CAAC,GAAA;AACpB,gBAAA,OAAO,IAAI,CAAC;aACb;AACD;;AAEG;YACH,MAAM,EAAE,MAAK;gBACX,OAAO,IAAI,CAAC,8BAA8B,CAAC,WAAW,EAAE,OAAO,CAAC,CAAC;aAClE;SACF,CAAC;KACH;AAED;;AAEG;AACY,IAAA,6BAA6B,CAC1C,WAAmB,EACnB,OAAA,GAAuC,EAAE,EAAA;;AAEzC,YAAA,MAAM,eAAe,GAAG,MAAMD,aAAA,CAAA,aAAa,CAAC,QAAQ,CAClD,kDAAkD,EAClD,OAAO,EACP,OAAO,cAA8D,KACnE,IAAI,CAAC,iBAAiB,CAAC,gBAAgB,CAAC,IAAI,CAAC,WAAW,EAAE,cAAc,CAAC,CAC5E,CAAA,CAAC;AACF,YAAA,MAAA,MAAAA,aAAA,CAAM,kCAAkC,CAAC,eAAe,CAAC,KAAK,CAAC,CAAA,CAAC;SACjE,CAAA,CAAA;AAAA,KAAA;AACD;;AAEG;IACY,2BAA2B,CACxC,WAAmB,EACnB,OAAqC,EAAA;;;;AAErC,gBAAA,KAA4B,IAAA,EAAA,GAAA,IAAA,EAAA,EAAA,GAAAC,mBAAA,CAAA,IAAI,CAAC,6BAA6B,CAAC,WAAW,EAAE,OAAO,CAAC,CAAA,EAAA,EAAA,EAAA,EAAA,GAAA,MAAAD,aAAA,CAAA,EAAA,CAAA,IAAA,EAAA,CAAA,EAAA,EAAA,GAAA,EAAA,CAAA,IAAA,EAAA,CAAA,EAAA,GAAA;oBAAxD,EAAwD,GAAA,EAAA,CAAA,KAAA,CAAA;oBAAxD,EAAwD,GAAA,KAAA,CAAA;;wBAAzE,MAAM,OAAO,KAAA,CAAA;AACtB,wBAAA,IAAI,OAAO,EAAE;4BACX,MAAAA,aAAA,CAAA,OAAOE,sBAAA,CAAAD,oBAAA,OAAO,CAAA,CAAA,CAAA,CAAC;AAChB,yBAAA;;;;;AACF,iBAAA;;;;;;;;;SACF,CAAA,CAAA;AAAA,KAAA;AACD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8BG;IACH,oBAAoB,CAClB,WAAmB,EACnB,OAAqC,EAAA;QAErC,MAAM,IAAI,GAAG,IAAI,CAAC,2BAA2B,CAAC,WAAW,EAAE,OAAO,CAAC,CAAC;QACpE,OAAO;AACL;;AAEG;YACH,IAAI,GAAA;AACF,gBAAA,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;aACpB;AACD;;AAEG;YACH,CAAC,MAAM,CAAC,aAAa,CAAC,GAAA;AACpB,gBAAA,OAAO,IAAI,CAAC;aACb;AACD;;AAEG;YACH,MAAM,EAAE,MAAK;gBACX,OAAO,IAAI,CAAC,6BAA6B,CAAC,WAAW,EAAE,OAAO,CAAC,CAAC;aACjE;SACF,CAAC;KACH;AACF;;AChTD;AACA;AAEA;;AAEG;AACU,MAAA,SAAS,GAAG;;AAEvB,IAAA,SAAS,EAAE,KAAK;;AAEhB,IAAA,SAAS,EAAE,KAAK;;AAEhB,IAAA,OAAO,EAAE,KAAK;;AAEd,IAAA,MAAM,EAAE,KAAK;;AAEb,IAAA,OAAO,EAAE,MAAM;;AAEf,IAAA,SAAS,EAAE,MAAM;;AAEjB,IAAA,eAAe,EAAE,OAAO;;AAExB,IAAA,eAAe,EAAE,OAAO;AACxB;;AAEG;AACH,IAAA,gBAAgB,EAAE,OAAO;;AAEzB,IAAA,aAAa,EAAE,OAAO;;AAEtB,IAAA,WAAW,EAAE,MAAM;;;;;;;"}